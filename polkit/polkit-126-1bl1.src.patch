--- origsrc/polkit-126/meson.build	2025-01-13 23:54:22.000000000 +0900
+++ src/polkit-126/meson.build	2025-01-24 13:11:33.036273600 +0900
@@ -207,7 +207,8 @@ if enable_logind
 endif
 config_data.set('HAVE_LIBSYSTEMD', enable_logind)
 
-config_data.set('HAVE_PIDFD_OPEN', cc.get_define('SYS_pidfd_open', prefix: '#include <sys/syscall.h>') != '')
+fs = import('fs')
+config_data.set('HAVE_PIDFD_OPEN', fs.exists('/usr/include/sys/syscall.h') and cc.get_define('SYS_pidfd_open', prefix: '#include <sys/syscall.h>') != '')
 
 # systemd unit / sysuser / tmpfiles.d file installation directories
 systemdsystemunitdir = get_option('systemdsystemunitdir')
--- origsrc/polkit-126/meson_options.txt	2025-01-13 23:54:22.000000000 +0900
+++ src/polkit-126/meson_options.txt	2025-01-24 13:19:41.273273000 +0900
@@ -6,7 +6,7 @@ option('polkitd_user', type: 'string', v
 option('polkitd_uid', type: 'string', value: '-', description: 'Fixed UID for user running polkitd (polkitd)')
 option('privileged_group', type: 'string', value: '', description: 'Group to use for default privileged access (default: wheel)')
 
-option('authfw', type: 'combo', choices: ['pam', 'shadow', 'bsdauth'], value: 'pam', description: 'Authentication framework (pam/shadow)')
+option('authfw', type: 'combo', choices: ['pam', 'shadow', 'bsdauth', 'none'], value: 'pam', description: 'Authentication framework (pam/shadow)')
 option('os_type', type: 'combo', choices: ['redhat', 'suse', 'gentoo', 'pardus', 'solaris', 'netbsd', 'lfs', 'openembedded', 'debian', ''], value: '', description: 'distribution or OS')
 
 option('pam_include', type: 'string', value: '', description: 'pam file to include')
--- origsrc/polkit-126/src/polkitagent/polkitagenthelper-none.c	1970-01-01 09:00:00.000000000 +0900
+++ src/polkit-126/src/polkitagent/polkitagenthelper-none.c	2025-01-24 13:23:02.082397800 +0900
@@ -0,0 +1,12 @@
+
+#include "polkitagenthelperprivate.h"
+
+#include <stdio.h>
+
+int
+main (int argc, char *argv[])
+{
+  fprintf (stdout, "SUCCESS\n");
+  flush_and_wait();
+  return 0;
+}
