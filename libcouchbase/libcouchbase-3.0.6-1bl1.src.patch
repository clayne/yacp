--- origsrc/libcouchbase-3.0.6/CMakeLists.txt	2020-10-21 16:42:50.000000000 +0900
+++ src/libcouchbase-3.0.6/CMakeLists.txt	2020-11-02 07:36:00.041891500 +0900
@@ -320,7 +320,9 @@ SET(LCB_CORE_OBJS
     ${lcb_plat_objs}
     ${lcb_ssl_objs})
 
-ADD_LIBRARY(couchbaseS STATIC ${LCB_CORE_OBJS})
+IF(NOT CYGWIN)
+    ADD_LIBRARY(couchbaseS STATIC ${LCB_CORE_OBJS})
+ENDIF()
 ADD_LIBRARY(couchbase ${_lcb_linkspec} ${LCB_CORE_OBJS} ${PROJECT_BINARY_DIR}/dllversion.rc)
 
 # For DTrace implementations which need to gain access to all the *.o files first
@@ -331,7 +333,9 @@ ADD_LIBRARY(couchbase ${_lcb_linkspec} $
 IF(LCB_DTRACE_INSTRO)
     SET(_lcb_linkhook "${PROJECT_SOURCE_DIR}/cmake/dtrace-instr-link.pl ${LCB_DTRACE_SRC}")
     SET_TARGET_PROPERTIES(couchbase PROPERTIES RULE_LAUNCH_LINK ${_lcb_linkhook})
-    SET_TARGET_PROPERTIES(couchbaseS PROPERTIES RULE_LAUNCH_LINK ${_lcb_linkhook})
+    IF(NOT CYGWIN)
+        SET_TARGET_PROPERTIES(couchbaseS PROPERTIES RULE_LAUNCH_LINK ${_lcb_linkhook})
+    ENDIF()
 ENDIF()
 
 # This is done to be ABI-compatible with Autotools. On OSX, autotools generates
@@ -359,8 +363,10 @@ ELSE()
     ENDIF()
 ENDIF()
 
-SET_TARGET_PROPERTIES(couchbase PROPERTIES PREFIX "lib")
-SET_TARGET_PROPERTIES(couchbase PROPERTIES IMPORT_PREFIX "lib")
+IF(NOT CYGWIN)
+    SET_TARGET_PROPERTIES(couchbase PROPERTIES PREFIX "lib")
+    SET_TARGET_PROPERTIES(couchbase PROPERTIES IMPORT_PREFIX "lib")
+ENDIF()
 SET(LCB_LINK_DEPS ${lcb_plat_libs} ${lcb_ssl_libs} ${LCB_HDR_HISTOGRAM_LINK})
 IF(CMAKE_SYSTEM_NAME STREQUAL "Linux")
     SET(LCB_LINK_DEPS ${LCB_LINK_DEPS} rt)
@@ -370,7 +376,9 @@ IF(LIBPROFILER)
 ENDIF()
 
 TARGET_LINK_LIBRARIES(couchbase ${LCB_LINK_DEPS})
-TARGET_LINK_LIBRARIES(couchbaseS ${LCB_LINK_DEPS})
+IF(NOT CYGWIN)
+    TARGET_LINK_LIBRARIES(couchbaseS ${LCB_LINK_DEPS})
+ENDIF()
 
 ENABLE_TESTING()
 IF(NOT LCB_NO_TESTS)
--- origsrc/libcouchbase-3.0.6/example/subdoc/subdoc-tombstone.cc	2020-10-21 16:42:50.000000000 +0900
+++ src/libcouchbase-3.0.6/example/subdoc/subdoc-tombstone.cc	2020-11-02 07:44:14.059852400 +0900
@@ -17,6 +17,7 @@
 
 #include <libcouchbase/couchbase.h>
 #include <string>
+#include <cassert>
 
 static void get_callback(lcb_INSTANCE *, int, const lcb_RESPGET *resp)
 {
--- origsrc/libcouchbase-3.0.6/plugins/io/libev/CMakeLists.txt	2020-10-21 16:42:50.000000000 +0900
+++ src/libcouchbase-3.0.6/plugins/io/libev/CMakeLists.txt	2020-11-02 07:36:00.092914500 +0900
@@ -14,9 +14,13 @@ ENDIF()
 ADD_LIBRARY(couchbase_libev SHARED plugin-libev.c)
 SET_TARGET_PROPERTIES(couchbase_libev
     PROPERTIES
-    PREFIX "lib"
-    IMPORT_PREFIX "lib"
     COMPILE_FLAGS "${CMAKE_C_FLAGS} ${CMAKE_CORE_CFLAGS} -std=gnu99")
+IF(NOT CYGWIN)
+    SET_TARGET_PROPERTIES(couchbase_libev
+        PROPERTIES
+        PREFIX "lib"
+        IMPORT_PREFIX "lib")
+ENDIF()
 TARGET_LINK_LIBRARIES(couchbase_libev ${LIBEV_LIBRARIES})
 INCLUDE_DIRECTORIES(AFTER ${LIBEV_INCLUDE_DIR})
 
@@ -28,4 +32,4 @@ ENDIF()
 
 INSTALL(TARGETS
     couchbase_libev
-    LIBRARY DESTINATION "${CMAKE_INSTALL_LIBDIR}/libcouchbase")
+    RUNTIME DESTINATION "${CMAKE_INSTALL_LIBDIR}/libcouchbase")
--- origsrc/libcouchbase-3.0.6/plugins/io/libevent/CMakeLists.txt	2020-10-21 16:42:50.000000000 +0900
+++ src/libcouchbase-3.0.6/plugins/io/libevent/CMakeLists.txt	2020-11-02 07:36:00.127882000 +0900
@@ -24,7 +24,7 @@ IF(LCB_EMBED_PLUGIN_LIBEVENT)
     SET(LCB_LINK_SPEC "${LCB_LINKS_SPEC} ${LIBEVENT_LIBRARIES}")
 ELSE()
     ADD_LIBRARY(couchbase_libevent SHARED plugin-libevent.c)
-    INSTALL(TARGETS couchbase_libevent LIBRARY DESTINATION "${CMAKE_INSTALL_LIBDIR}/libcouchbase")
+    INSTALL(TARGETS couchbase_libevent RUNTIME DESTINATION "${CMAKE_INSTALL_LIBDIR}/libcouchbase")
     TARGET_LINK_LIBRARIES(couchbase_libevent ${LIBEVENT_LIBRARIES})
 ENDIF()
 
--- origsrc/libcouchbase-3.0.6/plugins/io/libuv/CMakeLists.txt	2020-10-21 16:42:50.000000000 +0900
+++ src/libcouchbase-3.0.6/plugins/io/libuv/CMakeLists.txt	2020-11-02 07:36:00.153879600 +0900
@@ -31,14 +31,16 @@ ADD_LIBRARY(couchbase_libuv SHARED plugi
 #ENDIF()
 SET_TARGET_PROPERTIES(couchbase_libuv
     PROPERTIES
-    PREFIX "lib"
-    IMPORT_PREFIX "lib"
     COMPILE_FLAGS "${CMAKE_C_FLAGS} ${LCB_CORE_FLAGS} ${_lcbuv_cflags}")
-
+IF(NOT CYGWIN)
+    SET_TARGET_PROPERTIES(couchbase_libuv
+        PROPERTIES
+        PREFIX "lib"
+        IMPORT_PREFIX "lib")
+ENDIF()
 TARGET_LINK_LIBRARIES(couchbase_libuv ${LIBUV_LIBRARIES} couchbase)
 INCLUDE_DIRECTORIES(AFTER ${LIBUV_INCLUDE_DIR})
 ADD_DEFINITIONS(-DLIBCOUCHBASE_INTERNAL=1)
 INSTALL(TARGETS
     couchbase_libuv
-    LIBRARY DESTINATION "${CMAKE_INSTALL_LIBDIR}/libcouchbase"
-    RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR})
+    RUNTIME DESTINATION "${CMAKE_INSTALL_LIBDIR}/libcouchbase")
--- origsrc/libcouchbase-3.0.6/src/dns-srv.cc	2020-10-21 16:42:50.000000000 +0900
+++ src/libcouchbase-3.0.6/src/dns-srv.cc	2020-11-02 07:36:00.172885700 +0900
@@ -15,7 +15,7 @@
 #endif /* __NAMESER < NNN */
 #endif /* HAVE_ARPA_NAMESER_H */
 
-#if defined(HAVE_ARPA_NAMESER_H) && defined(HAVE_RES_SEARCH)
+#if defined(HAVE_ARPA_NAMESER_H) && defined(HAVE_RES_SEARCH) && !defined(__CYGWIN__)
 #define CAN_SRV_LOOKUP
 #include <sys/types.h>
 #include <netinet/in.h>
--- origsrc/libcouchbase-3.0.6/src/iofactory.c	2020-10-21 16:42:50.000000000 +0900
+++ src/libcouchbase-3.0.6/src/iofactory.c	2020-11-02 07:36:00.235919300 +0900
@@ -65,6 +65,8 @@ typedef struct {
 #else
 #define PLUGIN_SO(NAME) "libcouchbase_" NAME ".dll."
 #endif /* _DEBUG */
+#elif defined(__CYGWIN__)
+#define PLUGIN_SO(NAME) "cygcouchbase_" NAME ".dll"
 #else
 #define PLUGIN_SO(NAME) "libcouchbase_" NAME ".so"
 #endif
--- origsrc/libcouchbase-3.0.6/tests/CMakeLists.txt	2020-10-21 16:42:50.000000000 +0900
+++ src/libcouchbase-3.0.6/tests/CMakeLists.txt	2020-11-02 07:36:00.282885900 +0900
@@ -27,8 +27,12 @@ IF (NOT (WIN32 AND CMAKE_COMPILER_IS_GNU
     SET(gtest_force_shared_crt ON CACHE BOOL "" )
     SET(BUILD_SHARED_LIBS ON)
 ENDIF()
-ADD_SUBDIRECTORY(${PROJECT_SOURCE_DIR}/contrib/gtest-1.8.1 gtest)
-INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR})
+
+FIND_PACKAGE(GTEST)
+IF(NOT GTEST_FOUND)
+    ADD_SUBDIRECTORY(${PROJECT_SOURCE_DIR}/contrib/gtest-1.8.1 gtest)
+    INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR})
+ENDIF()
 
 ADD_EXECUTABLE(check-all EXCLUDE_FROM_ALL
     check-all.cc $<TARGET_OBJECTS:cliopts> mocksupport/procutil.c)
@@ -37,7 +41,7 @@ SET_PROPERTY(TARGET check-all
     APPEND PROPERTY INCLUDE_DIRECTORIES
     ${lcb_plat_includes}
     ${SOURCE_ROOT})
-TARGET_LINK_LIBRARIES(check-all couchbaseS)
+TARGET_LINK_LIBRARIES(check-all couchbase)
 
 
 FILE(GLOB T_BASIC_SRC basic/*.cc)
@@ -106,15 +110,15 @@ ENDIF()
 
 # We're a library using the shared CRT. Don't use the static one
 INCLUDE_DIRECTORIES(${gtest_SOURCE_DIR}/include ${gtest_SOURCE_DIR})
-TARGET_LINK_LIBRARIES(unit-tests couchbaseS gtest)
-TARGET_LINK_LIBRARIES(nonio-tests couchbaseS gtest)
-TARGET_LINK_LIBRARIES(mc-tests couchbaseS gtest)
-TARGET_LINK_LIBRARIES(mc-malloc-tests couchbaseS gtest)
+TARGET_LINK_LIBRARIES(unit-tests couchbase gtest)
+TARGET_LINK_LIBRARIES(nonio-tests couchbase gtest)
+TARGET_LINK_LIBRARIES(mc-tests couchbase gtest)
+TARGET_LINK_LIBRARIES(mc-malloc-tests couchbase gtest)
 TARGET_LINK_LIBRARIES(netbuf-tests gtest)
 TARGET_LINK_LIBRARIES(rdb-tests gtest)
-TARGET_LINK_LIBRARIES(sock-tests couchbaseS gtest)
-TARGET_LINK_LIBRARIES(vbucket-tests gtest couchbaseS)
-TARGET_LINK_LIBRARIES(htparse-tests gtest couchbaseS)
+TARGET_LINK_LIBRARIES(sock-tests couchbase gtest)
+TARGET_LINK_LIBRARIES(vbucket-tests gtest couchbase)
+TARGET_LINK_LIBRARIES(htparse-tests gtest couchbase)
 
 IF(WIN32)
     TARGET_LINK_LIBRARIES(mc-tests ws2_32.lib)
