--- origsrc/libodb-2.4.0/odb/details/shared-ptr/base.cxx	2015-02-06 16:31:45.000000000 +0900
+++ src/libodb-2.4.0/odb/details/shared-ptr/base.cxx	2024-12-05 12:04:16.872707800 +0900
@@ -54,7 +54,7 @@ namespace odb
 }
 
 void*
-operator new (size_t n, odb::details::share s) throw (std::bad_alloc)
+operator new (size_t n, odb::details::share s)
 {
   if (s == odb::details::shared)
   {
--- origsrc/libodb-2.4.0/odb/details/shared-ptr/base.hxx	2015-02-06 16:31:45.000000000 +0900
+++ src/libodb-2.4.0/odb/details/shared-ptr/base.hxx	2024-12-05 12:01:29.312867600 +0900
@@ -35,7 +35,7 @@ namespace odb
 }
 
 LIBODB_EXPORT void*
-operator new (std::size_t, odb::details::share) throw (std::bad_alloc);
+operator new (std::size_t, odb::details::share);
 
 LIBODB_EXPORT void
 operator delete (void*, odb::details::share) throw ();
@@ -62,10 +62,10 @@ namespace odb
       _ref_count () const;
 
       void*
-      operator new (std::size_t) throw (std::bad_alloc);
+      operator new (std::size_t);
 
       void*
-      operator new (std::size_t, share) throw (std::bad_alloc);
+      operator new (std::size_t, share);
 
       void
       operator delete (void*, share) throw ();
--- origsrc/libodb-2.4.0/odb/details/shared-ptr/base.ixx	2015-02-06 16:31:45.000000000 +0900
+++ src/libodb-2.4.0/odb/details/shared-ptr/base.ixx	2024-12-05 12:01:46.883330100 +0900
@@ -64,13 +64,13 @@ namespace odb
     }
 
     inline void* shared_base::
-    operator new (std::size_t n) throw (std::bad_alloc)
+    operator new (std::size_t n)
     {
       return ::operator new (n);
     }
 
     inline void* shared_base::
-    operator new (std::size_t n, share) throw (std::bad_alloc)
+    operator new (std::size_t n, share)
     {
       return ::operator new (n);
     }
