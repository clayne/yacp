--- origsrc/vmemcache-0.8.1/CMakeLists.txt	2020-10-21 22:24:38.000000000 +0900
+++ src/vmemcache-0.8.1/CMakeLists.txt	2025-01-24 16:41:52.262252700 +0900
@@ -98,7 +98,7 @@ if(NOT MSVC)
 	add_c_flag(-fno-omit-frame-pointer RELWITHDEBINFO)
 
 	check_c_compiler_flag(-Wl,-z,relro LINKER_HAS_RELRO)
-	if(LINKER_HAS_RELRO)
+	if(LINKER_HAS_RELRO AND NOT CYGWIN)
 		set(CMAKE_EXE_LINKER_FLAGS  "${CMAKE_EXE_LINKER_FLAGS}  -Wl,-z,relro")
 		set(CMAKE_SHARED_LINKER_FLAGS  "${CMAKE_SHARED_LINKER_FLAGS}  -Wl,-z,relro")
 	endif()
--- origsrc/vmemcache-0.8.1/src/CMakeLists.txt	2020-10-21 22:24:38.000000000 +0900
+++ src/vmemcache-0.8.1/src/CMakeLists.txt	2025-01-24 17:12:36.739411800 +0900
@@ -43,6 +43,7 @@ if(VALGRIND_FOUND)
 endif()
 
 install(TARGETS vmemcache
-	LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
+	RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
+	ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
 	DESTINATION ${CMAKE_INSTALL_LIBDIR}/)
 install(FILES libvmemcache.h DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})
--- origsrc/vmemcache-0.8.1/src/mmap.c	2020-10-21 22:24:38.000000000 +0900
+++ src/vmemcache-0.8.1/src/mmap.c	2025-01-24 16:40:43.886874900 +0900
@@ -13,7 +13,9 @@
 #include <sys/mman.h>
 #include <unistd.h>
 #include <sys/ioctl.h>
+#if defined(__linux__)
 #include <linux/fs.h>
+#endif
 
 #include "file.h"
 #include "mmap.h"
@@ -83,6 +85,7 @@ util_unmap(void *addr, size_t len)
 	return retval;
 }
 
+#if defined(__linux__)
 /*
  * chattr -- (internal) set file attributes
  */
@@ -104,6 +107,7 @@ chattr(int fd, int set, int clear)
 		return;
 	}
 }
+#endif
 
 /*
  * util_map_tmpfile -- reserve space in an unlinked file and memory-map it
@@ -127,7 +131,9 @@ util_map_tmpfile(const char *dir, size_t
 		goto err;
 	}
 
+#if defined(__linux__)
 	chattr(fd, FS_NOCOW_FL, 0);
+#endif
 
 	if ((errno = os_posix_fallocate(fd, 0, (os_off_t)size)) != 0) {
 		ERR("!posix_fallocate");
--- origsrc/vmemcache-0.8.1/src/os_thread_posix.c	2020-10-21 22:24:38.000000000 +0900
+++ src/vmemcache-0.8.1/src/os_thread_posix.c	2025-01-24 16:36:33.938651600 +0900
@@ -35,7 +35,9 @@ os_once(os_once_t *o, void (*func)(void)
 int
 os_tls_key_create(os_tls_key_t *key, void (*destructor)(void *))
 {
+#if !defined(__CYGWIN__)
 	COMPILE_ERROR_ON(sizeof(os_tls_key_t) < sizeof(pthread_key_t));
+#endif
 	return pthread_key_create((pthread_key_t *)key, destructor);
 }
 
--- origsrc/vmemcache-0.8.1/tests/CMakeLists.txt	2020-10-21 22:24:38.000000000 +0900
+++ src/vmemcache-0.8.1/tests/CMakeLists.txt	2025-01-24 17:10:50.157335000 +0900
@@ -56,7 +56,7 @@ function(test name file tracer location)
 		-P ${CMAKE_CURRENT_SOURCE_DIR}/${file}.cmake)
 
 	set_tests_properties(${name} PROPERTIES
-		ENVIRONMENT "LC_ALL=C;PATH=$ENV{PATH}"
+		ENVIRONMENT "LC_ALL=C"
 		TIMEOUT 300)
 endfunction()
 
--- origsrc/vmemcache-0.8.1/tests/vmemcache_test_heap_usage.c	2020-10-21 22:24:38.000000000 +0900
+++ src/vmemcache-0.8.1/tests/vmemcache_test_heap_usage.c	2025-01-24 17:06:18.251762500 +0900
@@ -65,6 +65,7 @@ log_line(heap_usage *usage, size_t size,
 			prefix, size, ptr, usage->usage);
 }
 
+#if defined(RTLD_NEXT)
 /*
  * malloc -- (internal) 'malloc' wrapper
  */
@@ -157,6 +158,7 @@ free(void *ptr)
 	actual_free(ptr);
 	trace = tmp_trace;
 }
+#endif
 
 /*
  * test_heap_usage -- (internal) test heap usage
