--- origsrc/necrolog/CMakeLists.txt	2024-03-18 10:19:07.000000000 +0900
+++ src/necrolog/CMakeLists.txt	2024-03-18 10:26:10.069595500 +0900
@@ -10,7 +10,9 @@ set(CMAKE_CXX_STANDARD_REQUIRED ON)
 
 include(CTest)
 
-set(CMAKE_SHARED_LIBRARY_PREFIX "") # we don't want CMake to prepend "lib" to our libraries, we prefer adding that ourselves
+if (NOT CYGWIN)
+	set(CMAKE_SHARED_LIBRARY_PREFIX "") # we don't want CMake to prepend "lib" to our libraries, we prefer adding that ourselves
+endif()
 
 if(CMAKE_CXX_COMPILER_ID STREQUAL "Clang" OR CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
 	set(NECROLOG_WARNING_FLAGS "-Wall -Wextra -pedantic -Wshadow -Wcast-align -Wunused -Wpedantic -Wconversion -Wsign-conversion -Wmisleading-indentation -Wdouble-promotion -Wformat=2 -Wimplicit-fallthrough -Wnon-virtual-dtor -Wold-style-cast -Woverloaded-virtual")
@@ -22,24 +24,28 @@ if(CMAKE_CXX_COMPILER_ID STREQUAL "Clang
 	set(CMAKE_CXX_FLAGS "${NECROLOG_WARNING_FLAGS} ${CMAKE_CXX_FLAGS}")
 endif()
 
-add_library(libnecrolog
+add_library(necrolog
 	libnecrolog/necrolog.cpp
 	libnecrolog/necrolog.h
 	libnecrolog/necrologlevel.h
 )
-add_library(libnecrolog::libnecrolog ALIAS libnecrolog)
+add_library(libnecrolog::libnecrolog ALIAS necrolog)
 
-target_include_directories(libnecrolog PUBLIC
+target_include_directories(necrolog PUBLIC
 	$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/libnecrolog>
 	$<INSTALL_INTERFACE:include>
 	)
 
-target_compile_definitions(libnecrolog PRIVATE NECROLOG_BUILD_DLL)
+target_compile_definitions(necrolog PRIVATE NECROLOG_BUILD_DLL)
+
+if (DEFINED SOVERSION)
+	set_target_properties(necrolog PROPERTIES SOVERSION "${SOVERSION}")
+endif()
 
 if(WITH_EXAMPLES)
 	add_executable(log_example examples/log_example.cpp)
 	target_include_directories(log_example PRIVATE include)
-	target_link_libraries(log_example PRIVATE libnecrolog)
+	target_link_libraries(log_example PRIVATE necrolog)
 endif()
 
 if(BUILD_TESTING)
@@ -54,15 +60,15 @@ if(BUILD_TESTING)
 	add_executable(test_necrolog tests/test_necrolog.cpp)
 	add_test(NAME test_necrolog COMMAND ${CMAKE_CROSSCOMPILING_EMULATOR} $<TARGET_FILE:test_necrolog>)
 	target_include_directories(test_necrolog PRIVATE libnecrolog)
-	target_link_libraries(test_necrolog PRIVATE libnecrolog doctest::doctest)
+	target_link_libraries(test_necrolog PRIVATE necrolog doctest::doctest)
 endif()
 
 include(GNUInstallDirs)
 configure_file("${CMAKE_CURRENT_SOURCE_DIR}/necrolog.pc.in" "${CMAKE_CURRENT_BINARY_DIR}/necrolog.pc" @ONLY)
 install(FILES "${CMAKE_CURRENT_BINARY_DIR}/necrolog.pc" DESTINATION "${CMAKE_INSTALL_LIBDIR}/pkgconfig")
 
-install(TARGETS libnecrolog EXPORT necrologConfig)
-export(TARGETS libnecrolog NAMESPACE libnecrolog:: FILE "${CMAKE_CURRENT_BINARY_DIR}/necrologConfig.cmake")
-install(EXPORT necrologConfig DESTINATION "${CMAKE_INSTALL_DATAROOTDIR}/necrolog/cmake" NAMESPACE libnecrolog::)
+install(TARGETS necrolog EXPORT necrologConfig)
+export(TARGETS necrolog NAMESPACE libnecrolog:: FILE "${CMAKE_CURRENT_BINARY_DIR}/necrologConfig.cmake")
+install(EXPORT necrologConfig DESTINATION "${CMAKE_INSTALL_LIBDIR}/cmake/necrolog" NAMESPACE libnecrolog::)
 
 install(DIRECTORY libnecrolog/ TYPE INCLUDE FILES_MATCHING PATTERN "*.h")
