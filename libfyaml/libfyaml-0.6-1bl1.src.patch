--- origsrc/libfyaml-0.6/configure.ac	2021-03-01 23:16:47.000000000 +0900
+++ src/libfyaml-0.6/configure.ac	2021-03-22 10:19:40.334837900 +0900
@@ -105,6 +105,7 @@ AC_DEFINE_UNQUOTED([HAVE_QSORT_R], [$HAV
 AM_CONDITIONAL([HAVE_QSORT_R], [ test x$HAVE_QSORT_R = x1 ])
 
 PKG_CHECK_MODULES(LIBYAML, [ yaml-0.1 ], HAVE_LIBYAML=1, HAVE_LIBYAML=0)
+PKG_CHECK_MODULES([XXHASH], [libxxhash])
 
 # update with pkg-config's flags
 if test "x$HAVE_LIBYAML" != "x1" ; then
--- origsrc/libfyaml-0.6/src/Makefile.am	2021-03-01 23:16:47.000000000 +0900
+++ src/libfyaml-0.6/src/Makefile.am	2021-03-22 10:27:40.934267900 +0900
@@ -21,17 +21,17 @@ libfyaml_@MAJOR@_@MINOR@_la_SOURCES = \
 	lib/fy-emit.c lib/fy-emit.h \
 	lib/fy-utils.c lib/fy-utils.h \
 	lib/fy-event.h \
-	xxhash/xxhash.c xxhash/xxhash.h \
 	lib/fy-accel.c lib/fy-accel.h \
 	lib/fy-walk.c lib/fy-walk.h
 
 libfyaml_@MAJOR@_@MINOR@_la_CPPFLAGS = $(AM_CPPFLAGS) \
 				       -I$(top_srcdir)/src/lib \
-				       -I$(top_srcdir)/src/xxhash
+				       $(XXHASH_CFLAGS)
 libfyaml_@MAJOR@_@MINOR@_la_CFLAGS = $(AM_CFLAGS)
 libfyaml_@MAJOR@_@MINOR@_la_LDFLAGS = $(AM_LDFLAGS) $(AM_LIBLDFLAGS) \
 		      $(VERSIONING_LDFLAGS) \
-		      -version-info 0:0:0
+		      -version-info 0:0:0 -no-undefined
+libfyaml_@MAJOR@_@MINOR@_la_LIBADD = $(XXHASH_LIBS)
 
 bin_PROGRAMS =
 noinst_PROGRAMS =
--- origsrc/libfyaml-0.6/src/lib/fy-doc.c	2021-03-01 23:16:47.000000000 +0900
+++ src/libfyaml-0.6/src/lib/fy-doc.c	2021-03-22 10:25:41.214373200 +0900
@@ -6250,15 +6250,16 @@ static void update_xx32(void *state, con
 
 int fy_node_hash_uint(struct fy_node *fyn, unsigned int *hashp)
 {
-	XXH32_state_t state;
+	XXH32_state_t* state = XXH32_createState();
 	int rc;
 
-	XXH32_reset(&state, 2654435761U);
+	XXH32_reset(state, 2654435761U);
 
-	rc = fy_node_hash_internal(fyn, update_xx32, &state);
+	rc = fy_node_hash_internal(fyn, update_xx32, state);
 	if (rc)
 		return rc;
 
-	*hashp = XXH32_digest(&state);
+	*hashp = XXH32_digest(state);
+	XXH32_freeState(state);
 	return 0;
 }
