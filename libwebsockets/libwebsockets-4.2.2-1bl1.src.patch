--- origsrc/libwebsockets-4.2.2/CMakeLists.txt	2021-08-28 15:39:20.000000000 +0900
+++ src/libwebsockets-4.2.2/CMakeLists.txt	2021-09-08 00:14:54.681797100 +0900
@@ -354,7 +354,7 @@ endmacro()
 #
 
 find_package(Git)
-if(GIT_EXECUTABLE)
+if(GIT_EXECUTABLE AND EXISTS "${CMAKE_SOURCE_DIR}/.git")
 	execute_process(
 		WORKING_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}"
 		COMMAND "${GIT_EXECUTABLE}" describe --tags --always
@@ -382,6 +382,8 @@ if(GIT_EXECUTABLE)
 	endif()
 
 	message("Git commit hash: ${LWS_BUILD_HASH}")
+else()
+	set(LWS_BUILD_HASH "unknown-build-hash")
 endif()
 
 if ("${LWS_BUILD_HASH}" STREQUAL "")
@@ -393,9 +395,13 @@ set(CPACK_RPM_PACKAGE_LICENSE "MIT")
 set(CPACK_PACKAGE_NAME "${PACKAGE}")
 set(CPACK_PACKAGE_VERSION_MAJOR "4")
 set(CPACK_PACKAGE_VERSION_MINOR "2")
-set(CPACK_PACKAGE_VERSION_PATCH_NUMBER "1")
+set(CPACK_PACKAGE_VERSION_PATCH_NUMBER "2")
 
-set(CPACK_PACKAGE_VERSION_PATCH "${CPACK_PACKAGE_VERSION_PATCH_NUMBER}-${LWS_BUILD_HASH}")
+if(LWS_BUILD_HASH STREQUAL "unknown-build-hash")
+	set(CPACK_PACKAGE_VERSION_PATCH "${CPACK_PACKAGE_VERSION_PATCH_NUMBER}")
+else()
+	set(CPACK_PACKAGE_VERSION_PATCH "${CPACK_PACKAGE_VERSION_PATCH_NUMBER}-${LWS_BUILD_HASH}")
+endif()
 set(CPACK_PACKAGE_RELEASE 1)
 
 set(CPACK_PACKAGE_VERSION "${CPACK_PACKAGE_VERSION_MAJOR}.${CPACK_PACKAGE_VERSION_MINOR}.${CPACK_PACKAGE_VERSION_PATCH}")
@@ -632,6 +638,7 @@ CHECK_INCLUDE_FILE(malloc.h LWS_HAVE_MAL
 CHECK_INCLUDE_FILE(pthread.h LWS_HAVE_PTHREAD_H)
 CHECK_INCLUDE_FILE(inttypes.h LWS_HAVE_INTTYPES_H)
 CHECK_INCLUDE_FILE(sys/resource.h LWS_HAVE_SYS_RESOURCE_H)
+CHECK_INCLUDE_FILE(net/route.h LWS_HAVE_NET_ROUTE_H)
 
 if (WIN32 OR MSVC)
 	CHECK_C_SOURCE_COMPILES("#include <winsock2.h>
--- origsrc/libwebsockets-4.2.2/lib/CMakeLists.txt	2021-08-28 15:39:20.000000000 +0900
+++ src/libwebsockets-4.2.2/lib/CMakeLists.txt	2021-09-07 21:54:13.478193200 +0900
@@ -295,7 +295,7 @@ endif()
 # Generate and install pkgconfig.
 # (This is not indented, because the tabs will be part of the output)
 file(WRITE "${PROJECT_BINARY_DIR}/libwebsockets.pc"
-"prefix=\"${CMAKE_INSTALL_PREFIX}\"
+"prefix=${CMAKE_INSTALL_PREFIX}
 exec_prefix=\${prefix}
 libdir=\${exec_prefix}/lib${LIB_SUFFIX}
 includedir=\${prefix}/include
@@ -316,6 +316,7 @@ endif()
 	install(FILES "${PROJECT_BINARY_DIR}/libwebsockets.pc"
 		DESTINATION lib${LIB_SUFFIX}/pkgconfig)
 
+if (NOT CYGWIN)
 file(WRITE "${PROJECT_BINARY_DIR}/libwebsockets_static.pc"
 "prefix=\"${CMAKE_INSTALL_PREFIX}\"
 exec_prefix=\${prefix}
@@ -339,7 +340,7 @@ endif()
 
 	install(FILES "${PROJECT_BINARY_DIR}/libwebsockets_static.pc"
 		DESTINATION lib${LIB_SUFFIX}/pkgconfig)
-
+endif()
 endif(UNIX)
 
 
--- origsrc/libwebsockets-4.2.2/lib/plat/unix/unix-sockets.c	2021-08-28 15:39:20.000000000 +0900
+++ src/libwebsockets-4.2.2/lib/plat/unix/unix-sockets.c	2021-09-07 22:01:11.320630700 +0900
@@ -29,7 +29,7 @@
 
 #include <sys/ioctl.h>
 
-#if !defined(LWS_DETECTED_PLAT_IOS)
+#if defined(LWS_HAVE_NET_ROUTE_H)
 #include <net/route.h>
 #endif
 
--- origsrc/libwebsockets-4.2.2/plugins/CMakeLists.txt	2021-08-28 15:39:20.000000000 +0900
+++ src/libwebsockets-4.2.2/plugins/CMakeLists.txt	2021-09-07 21:56:08.469513900 +0900
@@ -226,7 +226,7 @@ if (LWS_WITH_PLUGINS AND NOT LWS_WITH_PL
 
 	install(TARGETS ${PLUGINS_LIST}
 		PERMISSIONS  OWNER_WRITE OWNER_EXECUTE GROUP_EXECUTE WORLD_EXECUTE OWNER_READ GROUP_READ WORLD_READ
-		DESTINATION share/libwebsockets-test-server/plugins
+		RUNTIME DESTINATION share/libwebsockets-test-server/plugins
 		COMPONENT plugins)
 
 	if (NOT WIN32)
