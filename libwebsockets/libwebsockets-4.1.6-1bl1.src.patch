--- origsrc/libwebsockets-4.1.6/CMakeLists.txt	2020-12-02 02:40:26.000000000 +0900
+++ src/libwebsockets-4.1.6/CMakeLists.txt	2020-12-05 15:21:32.934139500 +0900
@@ -303,7 +303,7 @@ endmacro()
 #
 
 find_package(Git)
-if(GIT_EXECUTABLE)
+if(GIT_EXECUTABLE AND EXISTS "${CMAKE_SOURCE_DIR}/.git")
 	execute_process(
 		WORKING_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}"
 		COMMAND "${GIT_EXECUTABLE}" describe --tags --always
@@ -331,6 +331,8 @@ if(GIT_EXECUTABLE)
 	endif()
 
 	message("Git commit hash: ${LWS_BUILD_HASH}")
+else()
+	set(LWS_BUILD_HASH "")
 endif()
 
 set(PACKAGE "libwebsockets")
@@ -340,7 +342,11 @@ set(CPACK_PACKAGE_VERSION_MAJOR "4")
 set(CPACK_PACKAGE_VERSION_MINOR "1")
 set(CPACK_PACKAGE_VERSION_PATCH_NUMBER "6")
 
-set(CPACK_PACKAGE_VERSION_PATCH "${CPACK_PACKAGE_VERSION_PATCH_NUMBER}-${LWS_BUILD_HASH}")
+if(LWS_BUILD_HASH STREQUAL "")
+	set(CPACK_PACKAGE_VERSION_PATCH "${CPACK_PACKAGE_VERSION_PATCH_NUMBER}")
+else()
+	set(CPACK_PACKAGE_VERSION_PATCH "${CPACK_PACKAGE_VERSION_PATCH_NUMBER}-${LWS_BUILD_HASH}")
+endif()
 set(CPACK_PACKAGE_RELEASE 1)
 
 set(CPACK_PACKAGE_VERSION "${CPACK_PACKAGE_VERSION_MAJOR}.${CPACK_PACKAGE_VERSION_MINOR}.${CPACK_PACKAGE_VERSION_PATCH}")
@@ -563,6 +569,7 @@ CHECK_INCLUDE_FILE(malloc.h LWS_HAVE_MAL
 CHECK_INCLUDE_FILE(pthread.h LWS_HAVE_PTHREAD_H)
 CHECK_INCLUDE_FILE(inttypes.h LWS_HAVE_INTTYPES_H)
 CHECK_INCLUDE_FILE(sys/resource.h LWS_HAVE_SYS_RESOURCE_H)
+CHECK_INCLUDE_FILE(net/route.h LWS_HAVE_NET_ROUTE_H)
 
 if (WIN32 OR MSVC)
 	CHECK_C_SOURCE_COMPILES("#include <winsock2.h>
--- origsrc/libwebsockets-4.1.6/lib/CMakeLists.txt	2020-12-02 02:40:26.000000000 +0900
+++ src/libwebsockets-4.1.6/lib/CMakeLists.txt	2020-12-05 14:57:01.529126100 +0900
@@ -276,7 +276,7 @@ endif()
 # Generate and install pkgconfig.
 # (This is not indented, because the tabs will be part of the output)
 file(WRITE "${PROJECT_BINARY_DIR}/libwebsockets.pc"
-"prefix=\"${CMAKE_INSTALL_PREFIX}\"
+"prefix=${CMAKE_INSTALL_PREFIX}
 exec_prefix=\${prefix}
 libdir=\${exec_prefix}/lib${LIB_SUFFIX}
 includedir=\${prefix}/include
@@ -317,9 +317,10 @@ if (NOT ${lws_requires} STREQUAL "")
         file(APPEND "${PROJECT_BINARY_DIR}/libwebsockets_static.pc" "Requires: ${lws_requires}")
 endif()
 
-
+if (NOT CYGWIN)
 	install(FILES "${PROJECT_BINARY_DIR}/libwebsockets_static.pc"
 		DESTINATION lib${LIB_SUFFIX}/pkgconfig)
+endif()
 
 endif(UNIX)
 
--- origsrc/libwebsockets-4.1.6/lib/core/context.c	2020-12-02 02:40:26.000000000 +0900
+++ src/libwebsockets-4.1.6/lib/core/context.c	2020-12-05 14:57:39.762344500 +0900
@@ -683,7 +683,7 @@ lws_create_context(const struct lws_cont
 
 	context->options = info->options;
 
-#if !defined(LWS_PLAT_FREERTOS) && !defined(LWS_PLAT_OPTEE) && !defined(WIN32)
+#if !defined(LWS_PLAT_FREERTOS) && !defined(LWS_PLAT_OPTEE) && !defined(WIN32) && !defined(__CYGWIN__)
 	/*
 	 * If asked, try to set the rlimit / ulimit for process sockets / files.
 	 * We read the effective limit in a moment, so we will find out the
--- origsrc/libwebsockets-4.1.6/lib/plat/unix/unix-sockets.c	2020-12-02 02:40:26.000000000 +0900
+++ src/libwebsockets-4.1.6/lib/plat/unix/unix-sockets.c	2020-12-05 14:58:11.144394100 +0900
@@ -29,7 +29,7 @@
 
 #include <sys/ioctl.h>
 
-#if !defined(LWS_DETECTED_PLAT_IOS)
+#if defined(LWS_HAVE_NET_ROUTE_H)
 #include <net/route.h>
 #endif
 
--- origsrc/libwebsockets-4.1.6/plugins/CMakeLists.txt	2020-12-02 02:40:26.000000000 +0900
+++ src/libwebsockets-4.1.6/plugins/CMakeLists.txt	2020-12-05 16:03:30.645993500 +0900
@@ -153,7 +153,7 @@ endif(LWS_WITH_PLUGINS AND LWS_WITH_SHAR
 if (LWS_WITH_PLUGINS)
 	install(TARGETS ${PLUGINS_LIST}
 		PERMISSIONS  OWNER_WRITE OWNER_EXECUTE GROUP_EXECUTE WORLD_EXECUTE OWNER_READ GROUP_READ WORLD_READ
-		DESTINATION share/libwebsockets-test-server/plugins
+		RUNTIME DESTINATION share/libwebsockets-test-server/plugins
 		COMPONENT plugins)
 
 	if (NOT WIN32)
