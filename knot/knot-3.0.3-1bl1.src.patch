--- origsrc/knot-3.0.3/src/Makefile.am	2020-12-14 18:11:02.000000000 +0900
+++ src/knot-3.0.3/src/Makefile.am	2021-01-17 21:06:16.325791200 +0900
@@ -6,6 +6,8 @@ AM_CPPFLAGS = \
 	-DMODULE_DIR='"${module_dir}"'		\
 	-DMODULE_INSTDIR='"${module_instdir}"'
 
+AM_LDFLAGS = -no-undefined
+
 EXTRA_DIST =
 CLEANFILES =
 BUILT_SOURCES =
--- origsrc/knot-3.0.3/src/knot/server/server.c	2020-12-15 01:42:06.000000000 +0900
+++ src/knot-3.0.3/src/knot/server/server.c	2021-01-17 21:06:16.331773200 +0900
@@ -181,7 +181,9 @@ static bool enable_pktinfo(int sock, int
 		break;
 	case AF_INET6:
 		level = IPPROTO_IPV6;
+#if defined(IPV6_RECVPKTINFO)
 		option = IPV6_RECVPKTINFO;
+#endif
 		break;
 	default:
 		return false;
@@ -483,6 +485,7 @@ static int configure_sockets(conf_t *con
 	conf_val_t lisxdp_val = conf_get(conf, C_SRV, C_LISTEN_XDP);
 	conf_val_t rundir_val = conf_get(conf, C_SRV, C_RUNDIR);
 
+#if defined(RLIMIT_MEMLOCK)
 	if (lisxdp_val.code == KNOT_EOK) {
 		struct rlimit no_limit = { RLIM_INFINITY, RLIM_INFINITY };
 		int ret = setrlimit(RLIMIT_MEMLOCK, &no_limit);
@@ -492,6 +495,7 @@ static int configure_sockets(conf_t *con
 			return KNOT_ESYSTEM;
 		}
 	}
+#endif
 
 	size_t real_nifs = 0;
 	size_t nifs = conf_val_count(&listen_val) + conf_val_count(&lisxdp_val);
--- origsrc/knot-3.0.3/src/libknot/endian.h	2020-12-14 18:11:02.000000000 +0900
+++ src/knot-3.0.3/src/libknot/endian.h	2021-01-17 21:06:16.351775100 +0900
@@ -26,7 +26,7 @@
 #pragma once
 
 #if defined(__linux__) || defined(__gnu_hurd__) || \
-    (defined(__FreeBSD_kernel__) && defined(__GLIBC__))
+    (defined(__FreeBSD_kernel__) && defined(__GLIBC__)) || defined(__CYGWIN__)
 #       include <endian.h>
 #elif defined(__FreeBSD__) || defined(__NetBSD__)
 #       include <sys/endian.h>
--- origsrc/knot-3.0.3/tests/Makefile.am	2020-12-15 01:42:06.000000000 +0900
+++ src/knot-3.0.3/tests/Makefile.am	2021-01-17 21:06:16.379807900 +0900
@@ -219,7 +219,7 @@ knot/test_semantic_check:
 	@chmod +x $(top_builddir)/tests/$@
 endif HAVE_LIBUTILS
 
-libzscanner/test_zscanner: libzscanner/zscanner-tool
+libzscanner/test_zscanner: libzscanner/zscanner-tool$(EXEEXT)
 	@$(edit) < $(top_srcdir)/tests/$@.in > $(top_builddir)/tests/$@
 	@chmod +x $(top_builddir)/tests/$@
 
