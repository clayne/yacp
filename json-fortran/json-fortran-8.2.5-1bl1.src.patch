--- origsrc/json-fortran-8.2.5/CMakeLists.txt	2021-08-18 07:17:28.000000000 +0900
+++ src/json-fortran-8.2.5/CMakeLists.txt	2021-08-29 18:55:10.423890900 +0900
@@ -168,24 +168,30 @@ endif ()
 
 set ( LIB_NAME ${PROJECT_NAME} )
 add_library ( ${LIB_NAME}        SHARED ${JF_LIB_SRCS} )
-add_library ( ${LIB_NAME}-static STATIC ${JF_LIB_SRCS} )
+if (NOT CYGWIN)
+  add_library ( ${LIB_NAME}-static STATIC ${JF_LIB_SRCS} )
+endif()
 
 if(JSON_FORTRAN_USE_OpenCoarrays)
   target_link_libraries(${LIB_NAME}
     PRIVATE OpenCoarrays::caf_mpi_static)
-  target_link_libraries(${LIB_NAME}-static
-    PRIVATE OpenCoarrays::caf_mpi_static)
+  if (NOT CYGWIN)
+    target_link_libraries(${LIB_NAME}-static
+      PRIVATE OpenCoarrays::caf_mpi_static)
+  endif()
 endif()
 
-set_target_properties ( ${LIB_NAME}-static
-  PROPERTIES
-  OUTPUT_NAME ${LIB_NAME}
-  if(NOT MSVC_IDE)
-  PREFIX lib
-  endif()
-  VERSION ${VERSION}
-  ARCHIVE_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/lib
-  Fortran_MODULE_DIRECTORY ${MODULE_DIR} )
+if (NOT CYGWIN)
+  set_target_properties ( ${LIB_NAME}-static
+    PROPERTIES
+    OUTPUT_NAME ${LIB_NAME}
+    if(NOT MSVC_IDE)
+    PREFIX lib
+    endif()
+    VERSION ${VERSION}
+    ARCHIVE_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/lib
+    Fortran_MODULE_DIRECTORY ${MODULE_DIR} )
+endif()
 set_target_properties ( ${LIB_NAME}
   PROPERTIES
   OUTPUT_NAME ${LIB_NAME}
@@ -286,7 +292,7 @@ if ( ENABLE_TESTS )
   # emulate GNU Autotools `make check`
   add_custom_target(check COMMAND ${CMAKE_CTEST_COMMAND} -C $<CONFIG> --output-on-failure)
   add_custom_target(build_tests) # Make target to build all tests
-  add_dependencies(build_tests ${LIB_NAME} ${LIB_NAME}-static)
+  add_dependencies(build_tests ${LIB_NAME})
 
   find_program ( JSONLINT jsonlint )
 
@@ -408,10 +414,16 @@ endif ()
 # Perform the installation
 #-------------------------
 
-install ( TARGETS ${LIB_NAME} ${LIB_NAME}-static
+install ( TARGETS ${LIB_NAME}
+  EXPORT ${PACKAGE_NAME}-targets
+  RUNTIME DESTINATION bin
+  ARCHIVE DESTINATION "${INSTALL_LIB_DIR}" )
+if (NOT CYGWIN)
+install ( TARGETS ${LIB_NAME}-static
   EXPORT ${PACKAGE_NAME}-targets
   LIBRARY DESTINATION "${INSTALL_LIB_DIR}"
   ARCHIVE DESTINATION "${INSTALL_LIB_DIR}" )
+endif()
 
 # Code to  fix the dylib install name on Mac.
 include ( cmake/fixupInstallNameDir.cmake )
@@ -464,7 +476,11 @@ install ( FILES
 #----------------------------------------------
 # Make build tree targets accessible for import
 #----------------------------------------------
-export ( TARGETS ${LIB_NAME} ${LIB_NAME}-static FILE ${PACKAGE_NAME}-targets.cmake )
+
+export ( TARGETS ${LIB_NAME} FILE ${PACKAGE_NAME}-targets.cmake )
+if (NOT CYGWIN)
+  export ( TARGETS ${LIB_NAME}-static FILE ${PACKAGE_NAME}-targets.cmake )
+endif()
 
 # build tree package config file, NOT installed
 configure_file (
