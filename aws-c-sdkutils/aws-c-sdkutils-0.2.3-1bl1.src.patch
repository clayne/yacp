--- origsrc/aws-c-sdkutils-0.2.3/CMakeLists.txt	2025-01-29 08:10:58.000000000 +0900
+++ src/aws-c-sdkutils-0.2.3/CMakeLists.txt	2025-04-08 17:31:28.496660500 +0900
@@ -54,6 +54,10 @@ target_link_libraries(${PROJECT_NAME} PU
 # Our ABI is not yet stable
 set_target_properties(${PROJECT_NAME} PROPERTIES VERSION 1.0.0)
 
+if (DEFINED SOVERSION)
+    set_target_properties(${PROJECT_NAME} PROPERTIES SOVERSION "${SOVERSION}")
+endif()
+
 target_include_directories(${PROJECT_NAME} PUBLIC
         $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
         $<INSTALL_INTERFACE:include>)
@@ -78,7 +82,7 @@ else()
 endif()
 
 install(EXPORT "${PROJECT_NAME}-targets"
-    DESTINATION "${CMAKE_INSTALL_LIBDIR}/cmake/${PROJECT_NAME}/${TARGET_DIR}/"
+    DESTINATION "${CMAKE_INSTALL_LIBDIR}/cmake/${PROJECT_NAME}"
     NAMESPACE AWS::
     COMPONENT Development)
 
@@ -96,3 +100,10 @@ if (NOT CMAKE_CROSSCOMPILING)
         add_subdirectory(tests)
     endif()
 endif()
+
+set(prefix ${CMAKE_INSTALL_PREFIX})
+set(exec_prefix ${CMAKE_INSTALL_PREFIX})
+set(libdir ${CMAKE_INSTALL_PREFIX}/lib)
+set(includedir ${CMAKE_INSTALL_PREFIX}/include)
+configure_file(${CMAKE_SOURCE_DIR}/aws-c-sdkutils.pc.in ${CMAKE_BINARY_DIR}/aws-c-sdkutils.pc @ONLY)
+install(FILES ${CMAKE_BINARY_DIR}/aws-c-sdkutils.pc DESTINATION ${CMAKE_INSTALL_PREFIX}/lib/pkgconfig)
--- origsrc/aws-c-sdkutils-0.2.3/aws-c-sdkutils.pc.in	1970-01-01 09:00:00.000000000 +0900
+++ src/aws-c-sdkutils-0.2.3/aws-c-sdkutils.pc.in	2025-04-08 17:31:31.798900200 +0900
@@ -0,0 +1,10 @@
+prefix=@prefix@
+exec_prefix=@exec_prefix@
+libdir=@libdir@
+includedir=@includedir@
+
+Name: aws-c-sdkutils
+Description: C99 library implementing AWS SDK specific utilities
+Version: @VERSION@
+Libs: -L${libdir} -laws-c-sdkutils
+Cflags: -I${includedir}
--- origsrc/aws-c-sdkutils-0.2.3/cmake/aws-c-sdkutils-config.cmake	2025-01-29 08:10:58.000000000 +0900
+++ src/aws-c-sdkutils-0.2.3/cmake/aws-c-sdkutils-config.cmake	2025-04-08 17:28:30.669192500 +0900
@@ -2,21 +2,4 @@ include(CMakeFindDependencyMacro)
 
 find_dependency(aws-c-common)
 
-macro(aws_load_targets type)
-    include(${CMAKE_CURRENT_LIST_DIR}/${type}/@PROJECT_NAME@-targets.cmake)
-endmacro()
-
-# try to load the lib follow BUILD_SHARED_LIBS. Fall back if not exist.
-if (BUILD_SHARED_LIBS)
-    if (EXISTS "${CMAKE_CURRENT_LIST_DIR}/shared")
-        aws_load_targets(shared)
-    else()
-        aws_load_targets(static)
-    endif()
-else()
-    if (EXISTS "${CMAKE_CURRENT_LIST_DIR}/static")
-        aws_load_targets(static)
-    else()
-        aws_load_targets(shared)
-    endif()
-endif()
+include(${CMAKE_CURRENT_LIST_DIR}/@PROJECT_NAME@-targets.cmake)
