--- origsrc/librist-v0.2.10/contrib/mbedtls/meson.build	2023-10-31 00:01:35.000000000 +0900
+++ src/librist-v0.2.10/contrib/mbedtls/meson.build	2024-05-11 18:32:17.496523400 +0900
@@ -16,7 +16,7 @@ if not builtin_mbedtls
 #include <mbedtls/bignum.h>
 void test_has_func() { mbedtls_mpi_random(NULL, 0, NULL, NULL, NULL); }
 '''
-		cdata.set10('MBEDTLS_HAS_MPI_RANDOM', cc.compiles(mpi_random_test, name: 'MbedTLS has mbedtls_mpi_random()', dependencies: mbedcrypto_lib))
+		cdata.set10('MBEDTLS_HAS_MPI_RANDOM', cc.links(mpi_random_test, args: '-lmbedcrypto', name: 'MbedTLS has mbedtls_mpi_random()', dependencies: mbedcrypto_lib))
     endif
 endif
 if builtin_mbedtls and not mbedcrypto_lib_found
--- origsrc/librist-v0.2.10/meson.build	2023-10-31 00:01:35.000000000 +0900
+++ src/librist-v0.2.10/meson.build	2024-05-11 18:32:17.496523400 +0900
@@ -301,7 +301,7 @@ cdata.set10('HAVE_NETTLE', use_gnutls an
 # Generate config.h
 config_file = configure_file(output: 'config.h', configuration: cdata)
 
-librist = library('librist',
+librist = library('rist',
 	'src/crypto/crypto.c',
 	'src/crypto/psk.c',
 	'src/proto/gre.c',
@@ -332,7 +332,6 @@ librist = library('librist',
 		stdatomic_dependency,
 		cjson_lib,
 	],
-	name_prefix : '',
 	version: librist_version,
 	soversion: librist_soversion,
 	prelink: filter_obj,
--- origsrc/librist-v0.2.10/src/network.c	2023-10-31 00:01:35.000000000 +0900
+++ src/librist-v0.2.10/src/network.c	2024-05-11 18:32:17.512137500 +0900
@@ -7,7 +7,7 @@
 #include <ifaddrs.h>
 #ifdef __linux__
 #include <netpacket/packet.h>
-#elif defined(__GNU__)
+#elif defined(__GNU__) || defined(__CYGWIN__)
 #include <sys/ioctl.h>
 #include <net/if.h>
 #else
@@ -20,7 +20,7 @@
 int _librist_network_get_macaddr(uint8_t mac[]) {
   char mac_null[6] = {0};
 #ifndef _WIN32
-#if defined(__GNU__)
+#if defined(__GNU__) || defined(__CYGWIN__)
   int sock = socket(PF_INET, SOCK_DGRAM, 0);
 #endif
   struct ifaddrs *ifaddr = NULL;
@@ -38,7 +38,7 @@ int _librist_network_get_macaddr(uint8_t
           break;
         }
       }
-#elif defined(__GNU__)
+#elif defined(__GNU__) || defined(__CYGWIN__)
       struct ifreq ifr;
       strcpy(ifr.ifr_name, ifa->ifa_name);
       if (ioctl(sock, SIOCGIFHWADDR, &ifr) < 0) {
--- origsrc/librist-v0.2.10/src/udpsocket.c	2023-10-31 00:01:35.000000000 +0900
+++ src/librist-v0.2.10/src/udpsocket.c	2024-05-11 18:32:17.512137500 +0900
@@ -178,8 +178,12 @@ int udpsocket_set_mcast_iface(int sd, co
 	if (family == AF_INET6) {
 		return setsockopt(sd, SOL_IPV6, IPV6_MULTICAST_IF, &scope, sizeof(scope));
 	} else {
+#if defined(__linux__)
 		struct ip_mreqn req = { .imr_ifindex = scope };
 		return setsockopt(sd, SOL_IP, IP_MULTICAST_IF, &req, sizeof(req));
+#else
+		return -1;
+#endif
 	}
 	return -1;
 #endif
