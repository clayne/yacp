--- origsrc/fibsrch-1.1/Makefile.am	1970-01-01 09:00:00.000000000 +0900
+++ src/fibsrch-1.1/Makefile.am	2024-11-25 13:18:07.032804500 +0900
@@ -0,0 +1,13 @@
+check_PROGRAMS = fibsrch_test
+TESTS = fibsrch_test
+fibsrch_test_SOURCES = fibsrch_test.c
+fibsrch_test_LDADD = libfibsrch.la
+
+include_HEADERS = fibsrch.h
+
+lib_LTLIBRARIES = libfibsrch.la
+libfibsrch_la_SOURCES = fibsrch.c
+libfibsrch_la_LDFLAGS = -no-undefined
+
+pkgconfigdir = $(libdir)/pkgconfig
+pkgconfig_DATA = $(PACKAGE).pc
--- origsrc/fibsrch-1.1/configure.ac	1970-01-01 09:00:00.000000000 +0900
+++ src/fibsrch-1.1/configure.ac	2024-11-25 13:18:07.032804500 +0900
@@ -0,0 +1,24 @@
+#                                               -*- Autoconf -*-
+# Process this file with autoconf to produce a configure script.
+
+AC_PREREQ([2.72])
+AC_INIT([fibsrch], [1.1])
+AC_CONFIG_SRCDIR([fibsrch.c])
+AC_CONFIG_HEADERS([config.h])
+AM_INIT_AUTOMAKE
+
+# Checks for programs.
+AC_PROG_CC
+LT_INIT
+
+# Checks for libraries.
+
+# Checks for header files.
+
+# Checks for typedefs, structures, and compiler characteristics.
+
+# Checks for library functions.
+
+AC_CONFIG_FILES([Makefile])
+AC_CONFIG_FILES([fibsrch.pc])
+AC_OUTPUT
--- origsrc/fibsrch-1.1/fibsrch.pc.in	1970-01-01 09:00:00.000000000 +0900
+++ src/fibsrch-1.1/fibsrch.pc.in	2024-11-25 13:18:07.001552900 +0900
@@ -0,0 +1,10 @@
+prefix=@prefix@
+exec_prefix=@exec_prefix@
+libdir=@libdir@
+includedir=@includedir@
+
+Name: fibsrch
+Description: Fibonaccian search in C
+Version: @VERSION@
+Libs: -L${libdir} -lfibsrch
+Cflags: -I${includedir}
--- origsrc/fibsrch-1.1/fibsrch_test.c	1970-01-01 09:00:00.000000000 +0900
+++ src/fibsrch-1.1/fibsrch_test.c	2024-11-25 13:13:43.001766500 +0900
@@ -0,0 +1,15 @@
+#include <stdio.h>
+#include "fibsrch.h"
+
+int main(int argc, char **argv)
+{
+int data[]={1, 4, 5, 7, 9, 11, 13, 16, 18, 20, 25, 27, 30, 32, 33, 36, 39, 41, 44, 47, 51, 53, 55};
+int i, x, n;
+
+  x=30; n=sizeof(data)/sizeof(int);
+  i=fibsrch(data, n, x);
+  if(i>=0)
+    printf("%d found at index %d\n", x, i);
+  else
+    printf("%d was not found\n", x);
+}
