--- origsrc/yara-4.1.2/Makefile.am	2021-08-23 20:01:39.000000000 +0900
+++ src/yara-4.1.2/Makefile.am	2021-09-21 20:03:52.676895400 +0900
@@ -42,8 +42,8 @@ yara_SOURCES = \
   cli/threading.h \
   cli/yara.c
 
-yara_LDADD = -Llibyara/.libs -lyara
-yara_DEPENDENCIES = libyara/.libs/libyara.la
+yara_LDADD = libyara/libyara.la
+yara_DEPENDENCIES = libyara/libyara.la
 
 yarac_SOURCES = \
    cli/args.c \
@@ -51,35 +51,35 @@ yarac_SOURCES = \
    cli/common.h \
    cli/yarac.c
 
-yarac_LDADD = -Llibyara/.libs -lyara
-yarac_DEPENDENCIES = libyara/.libs/libyara.la
+yarac_LDADD = libyara/libyara.la
+yarac_DEPENDENCIES = libyara/libyara.la
 
 test_alignment_SOURCES = tests/test-alignment.c tests/util.c
-test_alignment_LDADD = libyara/.libs/libyara.a
+test_alignment_LDADD = libyara/libyara.la
 test_arena_SOURCES = tests/test-arena.c tests/util.c
-test_arena_LDADD = libyara/.libs/libyara.a
+test_arena_LDADD = libyara/libyara.la
 test_atoms_SOURCES = tests/test-atoms.c tests/util.c
-test_atoms_LDADD = libyara/.libs/libyara.a
+test_atoms_LDADD = libyara/libyara.la
 test_rules_SOURCES = tests/test-rules.c tests/util.c
-test_rules_LDADD = libyara/.libs/libyara.a
+test_rules_LDADD = libyara/libyara.la
 test_pe_SOURCES = tests/test-pe.c tests/util.c
-test_pe_LDADD = libyara/.libs/libyara.a
+test_pe_LDADD = libyara/libyara.la
 test_elf_SOURCES = tests/test-elf.c tests/util.c
-test_elf_LDADD = libyara/.libs/libyara.a
+test_elf_LDADD = libyara/libyara.la
 test_version_SOURCES = tests/test-version.c tests/util.c
-test_version_LDADD = libyara/.libs/libyara.a
+test_version_LDADD = libyara/libyara.la
 test_api_SOURCES = tests/test-api.c tests/util.c
-test_api_LDADD = libyara/.libs/libyara.a
+test_api_LDADD = libyara/libyara.la
 test_bitmask_SOURCES = tests/test-bitmask.c tests/util.c
-test_bitmask_LDADD = libyara/.libs/libyara.a
+test_bitmask_LDADD = libyara/libyara.la
 test_math_SOURCES = tests/test-math.c tests/util.c
-test_math_LDADD = libyara/.libs/libyara.a
+test_math_LDADD = libyara/libyara.la
 test_stack_SOURCES = tests/test-stack.c tests/util.c
-test_stack_LDADD = libyara/.libs/libyara.a
+test_stack_LDADD = libyara/libyara.la
 test_re_split_SOURCES = tests/test-re-split.c tests/util.c
-test_re_split_LDADD = libyara/.libs/libyara.a
+test_re_split_LDADD = libyara/libyara.la
 test_async_SOURCES = tests/test-async.c tests/util.c
-test_async_LDADD = libyara/.libs/libyara.a
+test_async_LDADD = libyara/libyara.la
 
 TESTS = $(check_PROGRAMS)
 TESTS_ENVIRONMENT = TOP_SRCDIR=$(top_srcdir)
@@ -105,32 +105,32 @@ if POSIX
 if !ADDRESS_SANITIZER
 check_PROGRAMS+=test-exception
 test_exception_SOURCES = tests/test-exception.c tests/util.c
-test_exception_LDADD = libyara/.libs/libyara.a
+test_exception_LDADD = libyara/libyara.la
 endif
 endif
 
 if MACHO_MODULE
 check_PROGRAMS+=test-macho
 test_macho_SOURCES = tests/test-macho.c tests/util.c
-test_macho_LDADD = libyara/.libs/libyara.a
+test_macho_LDADD = libyara/libyara.la
 endif
 
 if DEX_MODULE
 check_PROGRAMS+=test-dex
 test_dex_SOURCES = tests/test-dex.c tests/util.c
-test_dex_LDADD = libyara/.libs/libyara.a
+test_dex_LDADD = libyara/libyara.la
 endif
 
 if DOTNET_MODULE
 check_PROGRAMS+=test-dotnet
 test_dotnet_SOURCES = tests/test-dotnet.c tests/util.c
-test_dotnet_LDADD = libyara/.libs/libyara.a
+test_dotnet_LDADD = libyara/libyara.la
 endif
 
 if PB_TESTS_MODULE
 check_PROGRAMS+=test-pb
 test_pb_SOURCES = tests/test-pb.c tests/util.c
-test_pb_LDADD = libyara/.libs/libyara.a
+test_pb_LDADD = libyara/libyara.la
 endif
 
 # man pages
--- origsrc/yara-4.1.2/cli/yara.c	2021-08-23 20:01:39.000000000 +0900
+++ src/yara-4.1.2/cli/yara.c	2021-09-21 20:03:52.684897000 +0900
@@ -27,7 +27,7 @@ ANY THEORY OF LIABILITY, WHETHER IN CONT
 SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
 
-#if !defined(_WIN32) && !defined(__CYGWIN__)
+#if !defined(_WIN32)
 
 // for getline(3)
 #define _POSIX_C_SOURCE 200809L
@@ -400,7 +400,7 @@ static char* file_queue_get(time_t deadl
   return result;
 }
 
-#if defined(_WIN32) || defined(__CYGWIN__)
+#if defined(_WIN32)
 
 static bool is_directory(const char* path)
 {
@@ -1097,7 +1097,7 @@ static int callback(
   return CALLBACK_ERROR;
 }
 
-#if defined(_WIN32) || defined(__CYGWIN__)
+#if defined(_WIN32)
 static DWORD WINAPI scanning_thread(LPVOID param)
 #else
 static void* scanning_thread(void* param)
--- origsrc/yara-4.1.2/configure.ac	2021-08-23 20:01:39.000000000 +0900
+++ src/yara-4.1.2/configure.ac	2021-09-21 20:35:55.258224900 +0900
@@ -1,4 +1,4 @@
-AC_INIT([yara], [4.1.0], [vmalvarez@virustotal.com])
+AC_INIT([yara], [4.1.2], [vmalvarez@virustotal.com])
 
 AM_SILENT_RULES([yes])
 AC_CONFIG_SRCDIR([cli/yara.c])
--- origsrc/yara-4.1.2/libyara/Makefile.am	2021-08-23 20:01:39.000000000 +0900
+++ src/yara-4.1.2/libyara/Makefile.am	2021-09-21 20:03:52.692899100 +0900
@@ -243,5 +243,7 @@ if USE_NO_PROC
 libyara_la_SOURCES += proc/none.c
 endif
 
+libyara_la_LDFLAGS += -no-undefined
+
 pkgconfigdir = $(libdir)/pkgconfig
-nodist_pkgconfig_DATA = yara.pc
+pkgconfig_DATA = yara.pc
--- origsrc/yara-4.1.2/libyara/exception.h	2021-08-23 20:01:39.000000000 +0900
+++ src/yara-4.1.2/libyara/exception.h	2021-09-21 20:03:52.700447000 +0900
@@ -33,7 +33,7 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBI
 #include <assert.h>
 #include <yara/globals.h>
 
-#if _WIN32 || __CYGWIN__
+#if defined(_WIN32)
 
 #include <windows.h>
 
--- origsrc/yara-4.1.2/libyara/filemap.c	2021-08-23 20:01:39.000000000 +0900
+++ src/yara-4.1.2/libyara/filemap.c	2021-09-21 20:03:52.703918500 +0900
@@ -29,7 +29,7 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBI
 
 #include <fcntl.h>
 
-#if defined(_WIN32) || defined(__CYGWIN__)
+#if defined(_WIN32)
 #include <windows.h>
 #else
 #include <sys/mman.h>
@@ -76,7 +76,7 @@ YR_API int yr_filemap_map(const char* fi
 //   ERROR_COULD_NOT_OPEN_FILE
 //   ERROR_COULD_NOT_MAP_FILE
 //
-#if defined(_WIN32) || defined(__CYGWIN__)
+#if defined(_WIN32)
 
 YR_API int yr_filemap_map_fd(
     YR_FILE_DESCRIPTOR file,
@@ -253,7 +253,7 @@ YR_API int yr_filemap_map_fd(
 //   ERROR_COULD_NOT_OPEN_FILE
 //   ERROR_COULD_NOT_MAP_FILE
 //
-#if defined(_WIN32) || defined(__CYGWIN__)
+#if defined(_WIN32)
 
 YR_API int yr_filemap_map_ex(
     const char* file_path,
--- origsrc/yara-4.1.2/libyara/include/yara/error.h	2021-08-23 20:01:39.000000000 +0900
+++ src/yara-4.1.2/libyara/include/yara/error.h	2021-09-21 20:03:52.707923000 +0900
@@ -32,7 +32,7 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBI
 
 #include <string.h>
 
-#if defined(_WIN32) || defined(__CYGWIN__)
+#if defined(_WIN32)
 #include <windows.h>
 #endif
 
--- origsrc/yara-4.1.2/libyara/include/yara/filemap.h	2021-08-23 20:01:39.000000000 +0900
+++ src/yara-4.1.2/libyara/include/yara/filemap.h	2021-09-21 20:03:52.712926900 +0900
@@ -32,7 +32,7 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBI
 
 #include <sys/types.h>
 
-#if defined(_WIN32) || defined(__CYGWIN__)
+#if defined(_WIN32)
 #include <windows.h>
 #define YR_FILE_DESCRIPTOR HANDLE
 #else
@@ -49,7 +49,7 @@ typedef struct _YR_MAPPED_FILE
   YR_FILE_DESCRIPTOR file;
   size_t size;
   const uint8_t* data;
-#if defined(_WIN32) || defined(__CYGWIN__)
+#if defined(_WIN32)
   HANDLE mapping;
 #endif
 
--- origsrc/yara-4.1.2/libyara/include/yara/limits.h	2021-08-23 20:01:39.000000000 +0900
+++ src/yara-4.1.2/libyara/include/yara/limits.h	2021-09-21 20:03:52.773907800 +0900
@@ -30,7 +30,7 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBI
 #ifndef YR_LIMITS_H
 #define YR_LIMITS_H
 
-#if defined(_WIN32) || defined(__CYGWIN__)
+#if defined(_WIN32)
 #include <windows.h>
 #endif
 
--- origsrc/yara-4.1.2/libyara/include/yara/pe.h	2021-08-23 20:01:39.000000000 +0900
+++ src/yara-4.1.2/libyara/include/yara/pe.h	2021-09-21 20:03:52.817923900 +0900
@@ -35,7 +35,7 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBI
 
 #pragma pack(push, 1)
 
-#if defined(_WIN32) || defined(__CYGWIN__)
+#if defined(_WIN32)
 #include <windows.h>
 
 // PKCS7_SIGNER_INFO is defined by wincrypt.h, but it conflicts with a type
--- origsrc/yara-4.1.2/libyara/include/yara/threading.h	2021-08-23 20:01:39.000000000 +0900
+++ src/yara-4.1.2/libyara/include/yara/threading.h	2021-09-21 20:03:52.825936300 +0900
@@ -30,7 +30,7 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBI
 #ifndef YR_MUTEX_H
 #define YR_MUTEX_H
 
-#if defined(_WIN32) || defined(__CYGWIN__)
+#if defined(_WIN32)
 
 #include <windows.h>
 
--- origsrc/yara-4.1.2/libyara/lexer.l	2021-08-23 20:01:39.000000000 +0900
+++ src/yara-4.1.2/libyara/lexer.l	2021-09-21 20:03:52.883912200 +0900
@@ -51,7 +51,7 @@ with noyywrap then we can remove this pr
 #include <string.h>
 #include <setjmp.h>
 
-#if defined(_WIN32) || defined(__CYGWIN__)
+#if defined(_WIN32)
 #include <windows.h>
 #else
 #include <sys/stat.h>
@@ -127,7 +127,7 @@ static bool is_absolute_path(
   if (path == NULL)
     return false;
 
-  #if defined(_WIN32) || defined(__CYGWIN__)
+  #if defined(_WIN32)
   return strlen(path) > 2 &&
       path[1] == ':' && (path[2] == '/' || path[2] == '\\');
   #else
@@ -946,7 +946,7 @@ int yr_lex_parse_rules_fd(
   size_t file_size;
   void* buffer;
 
-  #if defined(_WIN32) || defined(__CYGWIN__)
+  #if defined(_WIN32)
   DWORD bytes_read;
   #endif
 
@@ -955,7 +955,7 @@ int yr_lex_parse_rules_fd(
   if (setjmp(compiler->error_recovery) != 0)
     return compiler->errors;
 
-  #if defined(_WIN32) || defined(__CYGWIN__)
+  #if defined(_WIN32)
   file_size = (size_t) GetFileSize(rules_fd, NULL);
   #else
   struct stat fs;
@@ -977,7 +977,7 @@ int yr_lex_parse_rules_fd(
     return compiler->errors;
   }
 
-  #if defined(_WIN32) || defined(__CYGWIN__)
+  #if defined(_WIN32)
   if (!ReadFile(rules_fd, buffer, file_size, &bytes_read, NULL))
   #else
   if (read(rules_fd, buffer, file_size) != file_size)
--- origsrc/yara-4.1.2/libyara/libyara.c	2021-08-23 20:01:39.000000000 +0900
+++ src/yara-4.1.2/libyara/libyara.c	2021-09-21 20:03:52.926970600 +0900
@@ -43,7 +43,7 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBI
 
 #include "crypto.h"
 
-#if defined(_WIN32) || defined(__CYGWIN__)
+#if defined(_WIN32)
 #if !defined(_MSC_VER) || (defined(_MSC_VER) && (_MSC_VER < 1900))
 #define snprintf _snprintf
 #endif
--- origsrc/yara-4.1.2/libyara/mem.c	2021-08-23 20:01:39.000000000 +0900
+++ src/yara-4.1.2/libyara/mem.c	2021-09-21 20:03:52.933911200 +0900
@@ -30,7 +30,7 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBI
 #include <yara/error.h>
 #include <yara/mem.h>
 
-#if defined(_WIN32) || defined(__CYGWIN__)
+#if defined(_WIN32)
 
 #include <string.h>
 #include <windows.h>
--- origsrc/yara-4.1.2/libyara/modules/cuckoo/cuckoo.c	2021-08-23 20:01:39.000000000 +0900
+++ src/yara-4.1.2/libyara/modules/cuckoo/cuckoo.c	2021-09-21 20:03:52.940066900 +0900
@@ -34,7 +34,7 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBI
 #include <yara/re.h>
 
 
-#if defined(_WIN32) || defined(__CYGWIN__)
+#if defined(_WIN32)
 #define strcasecmp _stricmp
 #endif
 
--- origsrc/yara-4.1.2/libyara/threading.c	2021-08-23 20:01:39.000000000 +0900
+++ src/yara-4.1.2/libyara/threading.c	2021-09-21 20:03:52.942909200 +0900
@@ -30,7 +30,7 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBI
 #include <yara/error.h>
 #include <yara/threading.h>
 
-#if defined(_WIN32) || defined(__CYGWIN__)
+#if defined(_WIN32)
 
 YR_THREAD_ID yr_current_thread_id(void)
 {
--- origsrc/yara-4.1.2/tests/test-api.c	2021-08-23 20:01:39.000000000 +0900
+++ src/yara-4.1.2/tests/test-api.c	2021-09-21 20:03:52.983917300 +0900
@@ -4,7 +4,7 @@
 
 #include "util.h"
 
-#if defined(_WIN32) || defined(__CYGWIN__)
+#if defined(_WIN32)
 #include <fileapi.h>
 #else
 #include <unistd.h>
@@ -109,7 +109,7 @@ void test_file_descriptor()
   YR_COMPILER* compiler = NULL;
   YR_RULES* rules = NULL;
 
-#if defined(_WIN32) || defined(__CYGWIN__)
+#if defined(_WIN32)
   HANDLE fd = CreateFile(
       "tests/data/baz.yar", GENERIC_READ, 0, NULL, OPEN_EXISTING, 0, NULL);
   if (fd == INVALID_HANDLE_VALUE)
@@ -140,7 +140,7 @@ void test_file_descriptor()
     exit(EXIT_FAILURE);
   }
 
-#if defined(_WIN32) || defined(__CYGWIN__)
+#if defined(_WIN32)
   CloseHandle(fd);
 #else
   close(fd);
