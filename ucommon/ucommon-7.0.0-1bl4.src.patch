--- origsrc/ucommon-7.0.0/Makefile.am	2015-08-30 07:29:15.000000000 +0900
+++ src/ucommon-7.0.0/Makefile.am	2025-01-15 11:04:27.602953700 +0900
@@ -29,7 +29,7 @@ pkgconfig_DATA = ucommon.pc @COMPAT_PC@
 scriptdir = $(bindir)
 script_SCRIPTS = ucommon-config @COMPAT_CONFIG@
 
-cmakedir = $(datadir)/ucommon/cmake
+cmakedir = $(libdir)/cmake/ucommon
 cmake_DATA = cmake/CapeConfig.cmake cmake/CapeMakeTargets.cmake
 
 man_MANS = ucommon-config.1 commoncpp-config.1
--- origsrc/ucommon-7.0.0/commoncpp/Makefile.am	2015-10-11 11:32:36.000000000 +0900
+++ src/ucommon-7.0.0/commoncpp/Makefile.am	2025-01-15 11:04:27.602953700 +0900
@@ -15,7 +15,7 @@ AM_CXXFLAGS = -I$(top_srcdir)/inc $(UCOM
 
 lib_LTLIBRARIES = libcommoncpp.la
 
-libcommoncpp_la_LDFLAGS = ../corelib/libucommon.la @UCOMMON_LIBS@ $(RELEASE)
+libcommoncpp_la_LDFLAGS = -no-undefined ../corelib/libucommon.la @UCOMMON_LIBS@ $(RELEASE)
 libcommoncpp_la_SOURCES = strchar.cpp slog.cpp exception.cpp thread.cpp \
 	address.cpp socket.cpp tcp.cpp udp.cpp dccp.cpp applog.cpp mime.cpp \
 	process.cpp serial.cpp tokenizer.cpp file.cpp dso.cpp linked.cpp \
--- origsrc/ucommon-7.0.0/commoncpp/persist.cpp	2015-10-11 11:32:36.000000000 +0900
+++ src/ucommon-7.0.0/commoncpp/persist.cpp	2025-01-15 12:12:42.800666700 +0900
@@ -114,7 +114,7 @@ TypeManager::registration::~registration
     TypeManager::remove(myName.c_str());
 }
 
-PersistEngine::PersistEngine(std::iostream& stream, EngineMode mode) throw(PersistException) :
+PersistEngine::PersistEngine(std::iostream& stream, EngineMode mode)  :
 myUnderlyingStream(stream), myOperationalMode(mode)
 {
 }
@@ -125,7 +125,7 @@ PersistEngine::~PersistEngine()
         myUnderlyingStream.sync();
 }
 
-void PersistEngine::writeBinary(const uint8_t* data, const uint32_t size) throw(PersistException)
+void PersistEngine::writeBinary(const uint8_t* data, const uint32_t size) 
 {
   if(myOperationalMode != modeWrite)
     throw("Cannot write to an input Engine");
@@ -133,14 +133,14 @@ void PersistEngine::writeBinary(const ui
 }
 
 
-void PersistEngine::readBinary(uint8_t* data, uint32_t size) throw(PersistException)
+void PersistEngine::readBinary(uint8_t* data, uint32_t size) 
 {
   if(myOperationalMode != modeRead)
     throw("Cannot read from an output Engine");
   myUnderlyingStream.read((char *)data,size);
 }
 
-void PersistEngine::write(const PersistObject *object) throw(PersistException)
+void PersistEngine::write(const PersistObject *object) 
 {
   // Pre-step, if object is NULL, then don't serialize it - serialize a
   // marker to say that it is null.
@@ -181,7 +181,7 @@ void PersistEngine::write(const PersistO
   }
 }
 
-void PersistEngine::read(PersistObject &object) throw(PersistException)
+void PersistEngine::read(PersistObject &object) 
 {
   uint32_t id = 0;
   read(id);
@@ -202,7 +202,7 @@ void PersistEngine::read(PersistObject &
   readObject(&object);
 }
 
-void PersistEngine::read(PersistObject *&object) throw(PersistException)
+void PersistEngine::read(PersistObject *&object) 
 {
   uint32_t id = 0;
   read(id);
@@ -237,7 +237,7 @@ void PersistEngine::read(PersistObject *
     throw(PersistException(std::string("Unable to instantiate object of class ")+className));
 }
 
-void PersistEngine::readObject(PersistObject* object) throw(PersistException)
+void PersistEngine::readObject(PersistObject* object) 
 {
   // Okay then - we can make this object
   myArchiveVector.push_back(object);
@@ -251,7 +251,7 @@ void PersistEngine::readObject(PersistOb
     throw( PersistException("Missing End-of-Object marker"));
 }
 
-const std::string PersistEngine::readClass() throw(PersistException)
+const std::string PersistEngine::readClass() 
 {
   // Okay - read the identifier for the class in...
   uint32_t classId = 0;
@@ -269,14 +269,14 @@ const std::string PersistEngine::readCla
   return className;
 }
 
-void PersistEngine::write(const std::string& str) throw(PersistException)
+void PersistEngine::write(const std::string& str) 
 {
   uint32_t len = (uint32_t)str.length();
   write(len);
   writeBinary((uint8_t*)str.c_str(),len);
 }
 
-void PersistEngine::read(std::string& str) throw(PersistException)
+void PersistEngine::read(std::string& str) 
 {
   uint32_t len = 0;
   read(len);
--- origsrc/ucommon-7.0.0/commoncpp/udp.cpp	2015-11-03 17:30:33.000000000 +0900
+++ src/ucommon-7.0.0/commoncpp/udp.cpp	2025-01-15 11:04:27.602953700 +0900
@@ -317,7 +317,7 @@ Socket::Error UDPSocket::join(const ucom
 Socket::Error UDPSocket::getInterfaceIndex(const char *DeviceName,int& InterfaceIndex)
 {
 #ifndef _MSWINDOWS_
-#if defined(IP_ADD_MEMBERSHIP) && defined(SIOCGIFINDEX) && !defined(__FreeBSD__) && !defined(__FreeBSD_kernel__) && !defined(_OSF_SOURCE) && !defined(__hpux) && !defined(__GNU__) && !defined(__NetBSD__)
+#if defined(IP_ADD_MEMBERSHIP) && defined(SIOCGIFINDEX) && !defined(__FreeBSD__) && !defined(__FreeBSD_kernel__) && !defined(_OSF_SOURCE) && !defined(__hpux) && !defined(__GNU__) && !defined(__NetBSD__) && !defined(__CYGWIN__)
 
     struct ip_mreqn  mreqn;
     struct ifreq       m_ifreq;
--- origsrc/ucommon-7.0.0/configure.ac	2015-11-08 03:15:59.000000000 +0900
+++ src/ucommon-7.0.0/configure.ac	2025-01-15 11:04:27.602953700 +0900
@@ -59,6 +59,7 @@ have_gettext="no"
 socket_lib=""
 posix4_lib=""
 rt_lib=""
+intl_lib=""
 
 test -z "$localedir" && localedir='${datadir}/locale'
 
@@ -186,15 +187,7 @@ AC_CHECK_HEADER(regex.h, [
     ])
 ])
 
-AC_CHECK_LIB(msvcrt, fopen, [
-    threading="msw"
-    clib="msvcrt"
-    UCOMMON_LIBS="--enable-stdcall-fixup $UCOMMON_LIBS -lmingwex -lmingw32 -lcrypt32 -ladvapi32 -luser32 -lws2_32 -lwsock32 -lkernel32"
-    UCOMMON_LIBC="-lmsvcrt -lgcc"
-    OPENSSL_LINK="-lgdi32"
-    AC_DEFINE(HAVE_INET_NTOP, [1], [have inet_ntop])
-    AC_DEFINE(HAVE_GETADDRINFO, [1], [have getaddrinfo])
-],[
+if test "$host_os" = "cygwin"; then
     AC_CHECK_LIB(gcc, __modsi3, [
         UCOMMON_LIBC="$UCOMMON_LIBC -lgcc"
     ])
@@ -233,7 +226,56 @@ AC_CHECK_LIB(msvcrt, fopen, [
         ])
         socket_lib="-lsocket"
     ])
-])
+else
+    AC_CHECK_LIB(msvcrt, fopen, [
+        threading="msw"
+        clib="msvcrt"
+        UCOMMON_LIBS="--enable-stdcall-fixup $UCOMMON_LIBS -lmingwex -lmingw32 -lcrypt32 -ladvapi32 -luser32 -lws2_32 -lwsock32 -lkernel32"
+        UCOMMON_LIBC="-lmsvcrt -lgcc"
+        OPENSSL_LINK="-lgdi32"
+        AC_DEFINE(HAVE_INET_NTOP, [1], [have inet_ntop])
+        AC_DEFINE(HAVE_GETADDRINFO, [1], [have getaddrinfo])
+    ],[
+        AC_CHECK_LIB(gcc, __modsi3, [
+            UCOMMON_LIBC="$UCOMMON_LIBC -lgcc"
+        ])
+        AC_CHECK_LIB($clib, socketpair, [
+            AC_DEFINE(HAVE_SOCKETPAIR, [1], [have socketpair])
+        ],[
+                AC_CHECK_LIB(socket, socketpair, [AC_DEFINE(HAVE_SOCKETPAIR, [1], [have socketpair])])
+        ])
+        AC_CHECK_LIB($clib, getaddrinfo, [
+            AC_DEFINE(HAVE_GETADDRINFO, [1], [have getaddrinfo])
+        ],[
+                AC_CHECK_LIB(socket, getaddrinfo, [AC_DEFINE(HAVE_GETADDRINFO, [1], [have getaddrinfo])])
+        ])
+        AC_CHECK_LIB($clib, gethostbyname2, [
+            AC_DEFINE(HAVE_GETHOSTBYNAME2, [1], [have gethostbyname2])
+        ],[
+                AC_CHECK_LIB(socket, gethostbyname2, [AC_DEFINE(HAVE_GETHOSTBYNAME2, [1], [have gethostbyname2])])
+        ])
+
+        AC_CHECK_LIB($clib, inet_ntop, [
+            AC_DEFINE(HAVE_INET_NTOP, [1], [have inet ntop])
+        ],[
+            AC_CHECK_LIB(socket, inet_ntop, [
+                AC_DEFINE(HAVE_INET_NTOP, [1], [have inet ntop])
+            ],[
+                AC_CHECK_LIB(nsl, inet_ntop, [
+                    AC_DEFINE(HAVE_INET_NTOP, [1], [have inet_ntop])
+                    socket_lib="$socket_lib -lnsl"
+                ])
+            ])
+        ])
+
+        AC_CHECK_LIB(socket, socket,[
+            AC_CHECK_LIB(socket, socketpair,[
+                AC_DEFINE(HAVE_SOCKETPAIR, [1], [have socketpair in libsocket])
+            ])
+            socket_lib="-lsocket"
+        ])
+    ])
+fi
 
 AC_CHECK_LIB($clib, lstat, [
     AC_DEFINE(HAVE_LSTAT, [1], [have lstat])
@@ -363,6 +405,11 @@ for func in ftok shm_open nanosleep cloc
                 if test ! -z "$tlib" ; then
                     AC_CHECK_LIB($tlib, $func, [
                         found=$func
+                    ],[
+                        AC_CHECK_LIB(intl, $func, [
+                            found=$func
+                            intl_lib="-lintl"
+                        ])
                     ])
                 fi
             ])
@@ -439,8 +486,8 @@ for func in ftok shm_open nanosleep cloc
     esac
 done
 
-UCOMMON_LINKED="$socket_lib $posix4_lib $rt_lib $UCOMMON_LIBS"
-UCOMMON_LIBS="$socket_lib $posix4_lib $rt_lib $UCOMMON_LIBS $UCOMMON_LIBC"
+UCOMMON_LINKED="$socket_lib $posix4_lib $rt_lib $intl_lib $UCOMMON_LIBS"
+UCOMMON_LIBS="$socket_lib $posix4_lib $rt_lib $intl_lib $UCOMMON_LIBS $UCOMMON_LIBC"
 
 if test "$UCOMMON_MODEL" = "CC" ; then
     AC_CHECK_LIB(Systemstubs, printf, [
@@ -519,7 +566,7 @@ case "$target_os" in
 osf*)
     UCOMMON_FLAGS="$UCOMMON_FLAGS -D_POSIX_C_SOURCE=1 -D_OSF_SOURCE=1 -D__USE_STD_IOSTREAM"
     ;;
-cygwin*|mingw*)
+mingw*)
     UCOMMON_LINKED="$UCOMMON_LINKED -no-undefined"
     UCOMMON_LIBS="$UCOMMON_LIBS -no-undefined"
     ;;
--- origsrc/ucommon-7.0.0/corelib/Makefile.am	2015-10-21 23:04:40.000000000 +0900
+++ src/ucommon-7.0.0/corelib/Makefile.am	2025-01-15 11:04:27.602953700 +0900
@@ -15,7 +15,7 @@ AM_CXXFLAGS = -I$(top_srcdir)/inc $(UCOM
 
 lib_LTLIBRARIES = libucommon.la 
 
-libucommon_la_LDFLAGS = @UCOMMON_LIBS@ $(RELEASE) 
+libucommon_la_LDFLAGS = -no-undefined @UCOMMON_LIBS@ $(RELEASE) 
 libucommon_la_SOURCES = object.cpp linked.cpp string.cpp mapped.cpp \
 	counter.cpp timer.cpp memory.cpp socket.cpp access.cpp \
 	thread.cpp fsys.cpp cpr.cpp reuse.cpp stream.cpp \
--- origsrc/ucommon-7.0.0/gnutls/Makefile.am	2015-12-13 20:28:25.000000000 +0900
+++ src/ucommon-7.0.0/gnutls/Makefile.am	2025-01-15 11:04:27.602953700 +0900
@@ -17,7 +17,7 @@ noinst_HEADERS = local.h
 
 lib_LTLIBRARIES = libusecure.la
 
-libusecure_la_LDFLAGS = ../corelib/libucommon.la @UCOMMON_LIBS@ @SECURE_LIBS@ $(RELEASE)
+libusecure_la_LDFLAGS = -no-undefined ../corelib/libucommon.la @UCOMMON_LIBS@ @SECURE_LIBS@ $(RELEASE)
 libusecure_la_SOURCES = secure.cpp digest.cpp random.cpp cipher.cpp \
 	hmac.cpp sstream.cpp ../nossl/common.cpp
 
--- origsrc/ucommon-7.0.0/inc/commoncpp/persist.h	2015-10-11 11:32:36.000000000 +0900
+++ src/ucommon-7.0.0/inc/commoncpp/persist.h	2025-01-15 12:12:20.699660800 +0900
@@ -46,7 +46,7 @@ public:
     PersistException(const std::string& reason);
     const std::string& getString() const;
 
-    virtual ~PersistException() throw();
+    virtual ~PersistException();
 
 protected:
     std::string _what;
@@ -210,7 +210,7 @@ public:
      * the given mode. The stream must be initialized properly prior
      * to this call or problems will ensue.
      */
-    PersistEngine(std::iostream& stream, EngineMode mode) throw(PersistException);
+    PersistEngine(std::iostream& stream, EngineMode mode) ;
 
     virtual ~PersistEngine();
 
@@ -219,75 +219,75 @@ public:
     /**
      * writes a PersistObject from a reference.
      */
-    inline void write(const PersistObject &object) throw(PersistException)
+    inline void write(const PersistObject &object) 
         {write(&object);}
 
     /**
      * writes a PersistObject from a pointer.
      */
-    void write(const PersistObject *object) throw(PersistException);
+    void write(const PersistObject *object) ;
 
     // writes supported primitive types
   // shortcut, to make the following more readable
 #define CCXX_ENGINEWRITE_REF(valref) writeBinary((const uint8_t*)&valref,sizeof(valref))
-    inline void write(int8_t i) throw(PersistException) { CCXX_ENGINEWRITE_REF(i); }
-    inline void write(uint8_t i) throw(PersistException) { CCXX_ENGINEWRITE_REF(i); }
-    inline void write(int16_t i)  throw(PersistException) { CCXX_ENGINEWRITE_REF(i); }
-    inline void write(uint16_t i) throw(PersistException) { CCXX_ENGINEWRITE_REF(i); }
-    inline void write(int32_t i)  throw(PersistException) { CCXX_ENGINEWRITE_REF(i); }
-    inline void write(uint32_t i) throw(PersistException) { CCXX_ENGINEWRITE_REF(i); }
-    inline void write(float i)  throw(PersistException) { CCXX_ENGINEWRITE_REF(i); }
-    inline void write(double i) throw(PersistException) { CCXX_ENGINEWRITE_REF(i); }
-    inline void write(bool i) throw(PersistException) { CCXX_ENGINEWRITE_REF(i); }
+    inline void write(int8_t i)  { CCXX_ENGINEWRITE_REF(i); }
+    inline void write(uint8_t i)  { CCXX_ENGINEWRITE_REF(i); }
+    inline void write(int16_t i)   { CCXX_ENGINEWRITE_REF(i); }
+    inline void write(uint16_t i)  { CCXX_ENGINEWRITE_REF(i); }
+    inline void write(int32_t i)   { CCXX_ENGINEWRITE_REF(i); }
+    inline void write(uint32_t i)  { CCXX_ENGINEWRITE_REF(i); }
+    inline void write(float i)   { CCXX_ENGINEWRITE_REF(i); }
+    inline void write(double i)  { CCXX_ENGINEWRITE_REF(i); }
+    inline void write(bool i)  { CCXX_ENGINEWRITE_REF(i); }
 #undef CCXX_ENGINEWRITE_REF
 
-    void write(const std::string& str) throw(PersistException);
+    void write(const std::string& str) ;
 
     // Every write operation boils down to one or more of these
-    void writeBinary(const uint8_t* data, const uint32_t size) throw(PersistException);
+    void writeBinary(const uint8_t* data, const uint32_t size) ;
 
     // Read Operations
 
     /**
      * reads a PersistObject into a reference overwriting the object.
      */
-    void read(PersistObject &object) throw(PersistException);
+    void read(PersistObject &object) ;
 
     /**
      * reads a PersistObject into a pointer allocating memory for the object if necessary.
      */
-    void read(PersistObject *&object) throw(PersistException);
+    void read(PersistObject *&object) ;
 
     // reads supported primitive types
   // shortcut, to make the following more readable
 #define CCXX_ENGINEREAD_REF(valref) readBinary((uint8_t*)&valref,sizeof(valref))
-    inline void read(int8_t& i) throw(PersistException) { CCXX_ENGINEREAD_REF(i); }
-    inline void read(uint8_t& i) throw(PersistException) { CCXX_ENGINEREAD_REF(i); }
-    inline void read(int16_t& i) throw(PersistException) { CCXX_ENGINEREAD_REF(i); }
-    inline void read(uint16_t& i) throw(PersistException) { CCXX_ENGINEREAD_REF(i); }
-    inline void read(int32_t& i) throw(PersistException) { CCXX_ENGINEREAD_REF(i); }
-    inline void read(uint32_t& i) throw(PersistException) { CCXX_ENGINEREAD_REF(i); }
-    inline void read(float& i)  throw(PersistException) { CCXX_ENGINEREAD_REF(i); }
-    inline void read(double& i) throw(PersistException) { CCXX_ENGINEREAD_REF(i); }
-    inline void read(bool &i) throw(PersistException) { CCXX_ENGINEREAD_REF(i); }
+    inline void read(int8_t& i)  { CCXX_ENGINEREAD_REF(i); }
+    inline void read(uint8_t& i)  { CCXX_ENGINEREAD_REF(i); }
+    inline void read(int16_t& i)  { CCXX_ENGINEREAD_REF(i); }
+    inline void read(uint16_t& i)  { CCXX_ENGINEREAD_REF(i); }
+    inline void read(int32_t& i)  { CCXX_ENGINEREAD_REF(i); }
+    inline void read(uint32_t& i)  { CCXX_ENGINEREAD_REF(i); }
+    inline void read(float& i)   { CCXX_ENGINEREAD_REF(i); }
+    inline void read(double& i)  { CCXX_ENGINEREAD_REF(i); }
+    inline void read(bool &i)  { CCXX_ENGINEREAD_REF(i); }
 #undef CCXX_ENGINEREAD_REF
 
-    void read(std::string& str) throw(PersistException);
+    void read(std::string& str) ;
 
     // Every read operation boiled down to one or more of these
-    void readBinary(uint8_t* data, uint32_t size) throw(PersistException);
+    void readBinary(uint8_t* data, uint32_t size) ;
 
 private:
     /**
      * reads the actual object data into a pre-instantiated object pointer
      * by calling the read function of the derived class.
      */
-    void readObject(PersistObject* object) throw(PersistException);
+    void readObject(PersistObject* object) ;
 
     /**
      * reads in a class name, and caches it into the ClassMap.
      */
-    const std::string readClass() throw(PersistException);
+    const std::string readClass() ;
 
 
     /**
@@ -319,63 +319,63 @@ private:
 
 // Standard >> and << stream operators for PersistObject
 /** @relates PersistEngine */
-inline PersistEngine& operator >>( PersistEngine& ar, PersistObject &ob) throw(PersistException) {CCXX_RE(ar,ob);}
+inline PersistEngine& operator >>( PersistEngine& ar, PersistObject &ob)  {CCXX_RE(ar,ob);}
 /** @relates PersistEngine */
-inline PersistEngine& operator >>( PersistEngine& ar, PersistObject *&ob) throw(PersistException) {CCXX_RE(ar,ob);}
+inline PersistEngine& operator >>( PersistEngine& ar, PersistObject *&ob)  {CCXX_RE(ar,ob);}
 /** @relates PersistEngine */
-inline PersistEngine& operator <<( PersistEngine& ar, PersistObject const &ob) throw(PersistException) {CCXX_WE(ar,ob);}
+inline PersistEngine& operator <<( PersistEngine& ar, PersistObject const &ob)  {CCXX_WE(ar,ob);}
 /** @relates PersistEngine */
-inline PersistEngine& operator <<( PersistEngine& ar, PersistObject const *ob) throw(PersistException) {CCXX_WE(ar,ob);}
+inline PersistEngine& operator <<( PersistEngine& ar, PersistObject const *ob)  {CCXX_WE(ar,ob);}
 
 /** @relates PersistEngine */
-inline PersistEngine& operator >>( PersistEngine& ar, int8_t& ob) throw(PersistException) {CCXX_RE(ar,ob);}
+inline PersistEngine& operator >>( PersistEngine& ar, int8_t& ob)  {CCXX_RE(ar,ob);}
 /** @relates PersistEngine */
-inline PersistEngine& operator <<( PersistEngine& ar, int8_t ob)  throw(PersistException) {CCXX_WE(ar,ob);}
+inline PersistEngine& operator <<( PersistEngine& ar, int8_t ob)   {CCXX_WE(ar,ob);}
 
 /** @relates PersistEngine */
-inline PersistEngine& operator >>( PersistEngine& ar, uint8_t& ob) throw(PersistException) {CCXX_RE(ar,ob);}
+inline PersistEngine& operator >>( PersistEngine& ar, uint8_t& ob)  {CCXX_RE(ar,ob);}
 /** @relates PersistEngine */
-inline PersistEngine& operator <<( PersistEngine& ar, uint8_t ob)  throw(PersistException) {CCXX_WE(ar,ob);}
+inline PersistEngine& operator <<( PersistEngine& ar, uint8_t ob)   {CCXX_WE(ar,ob);}
 
 /** @relates PersistEngine */
-inline PersistEngine& operator >>( PersistEngine& ar, int16_t& ob) throw(PersistException) {CCXX_RE(ar,ob);}
+inline PersistEngine& operator >>( PersistEngine& ar, int16_t& ob)  {CCXX_RE(ar,ob);}
 /** @relates PersistEngine */
-inline PersistEngine& operator <<( PersistEngine& ar, int16_t ob)  throw(PersistException) {CCXX_WE(ar,ob);}
+inline PersistEngine& operator <<( PersistEngine& ar, int16_t ob)   {CCXX_WE(ar,ob);}
 
 /** @relates PersistEngine */
-inline PersistEngine& operator >>( PersistEngine& ar, uint16_t& ob) throw(PersistException) {CCXX_RE(ar,ob);}
+inline PersistEngine& operator >>( PersistEngine& ar, uint16_t& ob)  {CCXX_RE(ar,ob);}
 /** @relates PersistEngine */
-inline PersistEngine& operator <<( PersistEngine& ar, uint16_t ob)  throw(PersistException) {CCXX_WE(ar,ob);}
+inline PersistEngine& operator <<( PersistEngine& ar, uint16_t ob)   {CCXX_WE(ar,ob);}
 
 /** @relates PersistEngine */
-inline PersistEngine& operator >>( PersistEngine& ar, int32_t& ob) throw(PersistException) {CCXX_RE(ar,ob);}
+inline PersistEngine& operator >>( PersistEngine& ar, int32_t& ob)  {CCXX_RE(ar,ob);}
 /** @relates PersistEngine */
-inline PersistEngine& operator <<( PersistEngine& ar, int32_t ob)  throw(PersistException) {CCXX_WE(ar,ob);}
+inline PersistEngine& operator <<( PersistEngine& ar, int32_t ob)   {CCXX_WE(ar,ob);}
 
 /** @relates PersistEngine */
-inline PersistEngine& operator >>( PersistEngine& ar, uint32_t& ob) throw(PersistException) {CCXX_RE(ar,ob);}
+inline PersistEngine& operator >>( PersistEngine& ar, uint32_t& ob)  {CCXX_RE(ar,ob);}
 /** @relates PersistEngine */
-inline PersistEngine& operator <<( PersistEngine& ar, uint32_t ob)  throw(PersistException) {CCXX_WE(ar,ob);}
+inline PersistEngine& operator <<( PersistEngine& ar, uint32_t ob)   {CCXX_WE(ar,ob);}
 
 /** @relates PersistEngine */
-inline PersistEngine& operator >>( PersistEngine& ar, float& ob) throw(PersistException) {CCXX_RE(ar,ob);}
+inline PersistEngine& operator >>( PersistEngine& ar, float& ob)  {CCXX_RE(ar,ob);}
 /** @relates PersistEngine */
-inline PersistEngine& operator <<( PersistEngine& ar, float ob)  throw(PersistException) {CCXX_WE(ar,ob);}
+inline PersistEngine& operator <<( PersistEngine& ar, float ob)   {CCXX_WE(ar,ob);}
 
 /** @relates PersistEngine */
-inline PersistEngine& operator >>( PersistEngine& ar, double& ob) throw(PersistException) {CCXX_RE(ar,ob);}
+inline PersistEngine& operator >>( PersistEngine& ar, double& ob)  {CCXX_RE(ar,ob);}
 /** @relates PersistEngine */
-inline PersistEngine& operator <<( PersistEngine& ar, double ob) throw(PersistException) {CCXX_WE(ar,ob);}
+inline PersistEngine& operator <<( PersistEngine& ar, double ob)  {CCXX_WE(ar,ob);}
 
 /** @relates PersistEngine */
-inline PersistEngine& operator >>( PersistEngine& ar, std::string& ob) throw(PersistException) {CCXX_RE(ar,ob);}
+inline PersistEngine& operator >>( PersistEngine& ar, std::string& ob)  {CCXX_RE(ar,ob);}
 /** @relates PersistEngine */
-inline PersistEngine& operator <<( PersistEngine& ar, std::string ob) throw(PersistException) {CCXX_WE(ar,ob);}
+inline PersistEngine& operator <<( PersistEngine& ar, std::string ob)  {CCXX_WE(ar,ob);}
 
 /** @relates PersistEngine */
-inline PersistEngine& operator >>( PersistEngine& ar, bool& ob) throw(PersistException) {CCXX_RE(ar,ob);}
+inline PersistEngine& operator >>( PersistEngine& ar, bool& ob)  {CCXX_RE(ar,ob);}
 /** @relates PersistEngine */
-inline PersistEngine& operator <<( PersistEngine& ar, bool ob)  throw(PersistException) {CCXX_WE(ar,ob);}
+inline PersistEngine& operator <<( PersistEngine& ar, bool ob)   {CCXX_WE(ar,ob);}
 
 #undef CCXX_RE
 #undef CCXX_WE
@@ -390,7 +390,7 @@ inline PersistEngine& operator <<( Persi
  * the engine
  */
 template<class T>
-PersistEngine& operator <<( PersistEngine& ar, typename std::vector<T> const& ob) throw(PersistException)
+PersistEngine& operator <<( PersistEngine& ar, typename std::vector<T> const& ob) 
 {
     ar << (uint32_t)ob.size();
     for(unsigned int i=0; i < ob.size(); ++i)
@@ -404,7 +404,7 @@ PersistEngine& operator <<( PersistEngin
  * an engine.
  */
 template<class T>
-PersistEngine& operator >>( PersistEngine& ar, typename std::vector<T>& ob) throw(PersistException)
+PersistEngine& operator >>( PersistEngine& ar, typename std::vector<T>& ob) 
 {
     ob.clear();
     uint32_t siz;
@@ -421,7 +421,7 @@ PersistEngine& operator >>( PersistEngin
  * the engine
  */
 template<class T>
-PersistEngine& operator <<( PersistEngine& ar, typename std::deque<T> const& ob) throw(PersistException)
+PersistEngine& operator <<( PersistEngine& ar, typename std::deque<T> const& ob) 
 {
     ar << (uint32_t)ob.size();
   for(typename std::deque<T>::const_iterator it=ob.begin(); it != ob.end(); ++it)
@@ -435,7 +435,7 @@ PersistEngine& operator <<( PersistEngin
  * an engine.
  */
 template<class T>
-PersistEngine& operator >>( PersistEngine& ar, typename std::deque<T>& ob) throw(PersistException)
+PersistEngine& operator >>( PersistEngine& ar, typename std::deque<T>& ob) 
 {
     ob.clear();
     uint32_t siz;
@@ -456,7 +456,7 @@ PersistEngine& operator >>( PersistEngin
  * to an engine.
  */
 template<class Key, class Value>
-PersistEngine& operator <<( PersistEngine& ar, typename std::map<Key,Value> const & ob) throw(PersistException)
+PersistEngine& operator <<( PersistEngine& ar, typename std::map<Key,Value> const & ob) 
 {
     ar << (uint32_t)ob.size();
     for(typename std::map<Key,Value>::const_iterator it = ob.begin();it != ob.end();++it)
@@ -470,7 +470,7 @@ PersistEngine& operator <<( PersistEngin
  * from an engine.
  */
 template<class Key, class Value>
-PersistEngine& operator >>( PersistEngine& ar, typename std::map<Key,Value>& ob) throw(PersistException)
+PersistEngine& operator >>( PersistEngine& ar, typename std::map<Key,Value>& ob) 
 {
     ob.clear();
     uint32_t siz;
@@ -488,7 +488,7 @@ PersistEngine& operator >>( PersistEngin
  * serialize a pair of some serializable content to the engine.
  */
 template<class x, class y>
-PersistEngine& operator <<( PersistEngine& ar, std::pair<x,y> &ob) throw(PersistException)
+PersistEngine& operator <<( PersistEngine& ar, std::pair<x,y> &ob) 
 {
     ar << ob.first << ob.second;
     return ar;
@@ -499,7 +499,7 @@ PersistEngine& operator <<( PersistEngin
  * deserialize a pair of some serializable content to the engine.
  */
 template<class x, class y>
-PersistEngine& operator >>(PersistEngine& ar, std::pair<x, y> &ob) throw(PersistException)
+PersistEngine& operator >>(PersistEngine& ar, std::pair<x, y> &ob) 
 {
     ar >> ob.first >> ob.second;
     return ar;
--- origsrc/ucommon-7.0.0/inc/ucommon/generics.h	2015-11-08 03:15:59.000000000 +0900
+++ src/ucommon-7.0.0/inc/ucommon/generics.h	2025-01-15 12:00:37.718611500 +0900
@@ -33,7 +33,7 @@
 #include <cstring>
 #include <stdexcept>
 
-#ifndef UCOMMON_SYSRUNTIME
+#if ((defined(__STDC_VERSION__) && (__STDC_VERSION__ < 201710L))) && !defined(UCOMMON_SYSRUNTIME)
 #define THROW(x)    throw x
 #define THROWS(x)   throw(x)
 #define THROWS_ANY  throw()
--- origsrc/ucommon-7.0.0/inc/ucommon/platform.h	2015-11-08 03:15:59.000000000 +0900
+++ src/ucommon-7.0.0/inc/ucommon/platform.h	2025-01-15 11:04:27.602953700 +0900
@@ -294,7 +294,9 @@ typedef size_t socksize_t;
 
 #else
 typedef size_t socksize_t;
+#if !defined(__EXPORT)
 #define __EXPORT    __attribute__ ((visibility("default")))
+#endif
 #define __LOCAL     __attribute__ ((visibility("hidden")))
 #define __SHARED    __attribute__ ((visibility("default")))
 #endif
--- origsrc/ucommon-7.0.0/inc/ucommon/temporary.h	2015-10-21 23:04:40.000000000 +0900
+++ src/ucommon-7.0.0/inc/ucommon/temporary.h	2025-01-15 12:00:01.924323300 +0900
@@ -53,7 +53,7 @@
 #include <cstring>
 #include <stdexcept>
 
-#ifndef UCOMMON_SYSRUNTIME
+#if ((defined(__STDC_VERSION__) && (__STDC_VERSION__ < 201710L))) && !defined(UCOMMON_SYSRUNTIME)
 #define THROW(x)    throw x
 #define THROWS(x)   throw(x)
 #define THROWS_ANY  throw()
