--- origsrc/lader-0.1.6/Makefile.am	2015-08-29 13:44:09.000000000 +0900
+++ src/lader-0.1.6/Makefile.am	2025-01-01 11:32:36.041753300 +0900
@@ -1,4 +1,7 @@
 SUBDIRS = src
 EXTRA_DIST = example script
 
-ACLOCAL_AMFLAGS = -I m4
\ No newline at end of file
+ACLOCAL_AMFLAGS = -I m4
+
+pkgconfigdir = $(libdir)/pkgconfig
+pkgconfig_DATA = $(PACKAGE).pc
--- origsrc/lader-0.1.6/configure.ac	2015-08-30 00:08:32.000000000 +0900
+++ src/lader-0.1.6/configure.ac	2025-01-01 11:32:36.041753300 +0900
@@ -5,7 +5,7 @@ AC_PREREQ([2.59])
 AC_INIT([lader], [0.1.6], [neubig@gmail.com])
 AC_CONFIG_SRCDIR(src/lib/lader.cc)
 AC_CONFIG_HEADERS([src/include/lader/config.h])
-AC_CONFIG_FILES([
+AC_CONFIG_FILES([lader.pc
     Makefile
     src/Makefile
     src/include/Makefile
@@ -29,11 +29,13 @@ LDFLAGS="$LDFLAGS -lpthread"
 
 AC_SYS_LARGEFILE
 
-AX_BOOST_BASE([1.38],,[AC_MSG_ERROR([requireBoost])])
-AX_BOOST_SYSTEM
-AX_BOOST_FILESYSTEM
-AX_BOOST_THREAD
-AX_BOOST_REGEX
+BOOST_REQUIRE
+BOOST_PROGRAM_OPTIONS
+BOOST_FILESYSTEM
+BOOST_IOSTREAMS
+BOOST_SYSTEM
+BOOST_REGEX
+BOOST_THREADS
 
 # Checks for header files.
 AC_CHECK_HEADERS([sys/time.h unistd.h])
--- origsrc/lader-0.1.6/lader.pc.in	1970-01-01 09:00:00.000000000 +0900
+++ src/lader-0.1.6/lader.pc.in	2025-01-01 11:32:36.041753300 +0900
@@ -0,0 +1,10 @@
+prefix=@prefix@
+exec_prefix=@exec_prefix@
+libdir=@libdir@
+includedir=@includedir@
+
+Name: lader
+Description: Latent Derivation Rerorderer
+Version: @VERSION@
+Libs: -L${libdir} -llader
+Cflags: -I${includedir}
--- origsrc/lader-0.1.6/src/lib/Makefile.am	2015-08-29 13:44:09.000000000 +0900
+++ src/lader-0.1.6/src/lib/Makefile.am	2025-01-01 11:32:36.041753300 +0900
@@ -14,4 +14,8 @@ AM_LDFLAGS = $(BOOST_LDFLAGS)
 lib_LTLIBRARIES = liblader.la
 
 liblader_la_SOURCES = ${LADERCPP}
-liblader_la_LDFLAGS = -version-info 0:0:0
+liblader_la_LDFLAGS = -no-undefined -version-info 0:0:0
+liblader_la_LIBADD = \
+	$(BOOST_FILESYSTEM_LIBS) $(BOOST_IOSTREAMS_LIBS) \
+	$(BOOST_PROGRAM_OPTIONS_LIBS) $(BOOST_REGEX_LIBS) \
+	$(BOOST_SYSTEM_LIBS) $(BOOST_THREAD_LIBS)
--- origsrc/lader-0.1.6/src/lib/reorderer-runner.cc	2015-08-29 13:44:09.000000000 +0900
+++ src/lader-0.1.6/src/lib/reorderer-runner.cc	2025-01-01 11:45:04.260380100 +0900
@@ -66,7 +66,7 @@ void ReordererRunner::Run(const ConfigRu
     graph.SetBeamSize(config.GetInt("beam"));
 	graph.SetPopLimit(config.GetInt("pop_limit"));
 	// do not need to set threads because it runs in parallel at sentence-level
-    while(std::getline(sin != NULL? sin : std::cin, line)) {
+    while(std::getline(sin ? sin : std::cin, line)) {
     	ReordererTask *task = new ReordererTask(id++, line, model_, features_,
     		 	&outputs_, config, graph.Clone(),
 				&collector);
--- origsrc/lader-0.1.6/src/test/Makefile.am	2015-08-29 15:11:44.000000000 +0900
+++ src/lader-0.1.6/src/test/Makefile.am	2025-01-01 11:32:36.057368500 +0900
@@ -7,3 +7,5 @@ bin_PROGRAMS = test-lader
 
 test_lader_SOURCES = test-lader.cc ${LADERTH}
 test_lader_LDADD = ../lib/liblader.la
+
+TESTS = test-lader
