--- origsrc/libdynd-0.7.2/CMakeLists.txt	2016-03-17 04:34:36.000000000 +0900
+++ src/libdynd-0.7.2/CMakeLists.txt	2025-01-12 19:03:43.791464500 +0900
@@ -82,7 +82,7 @@ else()
     if(WIN32)
         set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O3 -std=c++14 -fomit-frame-pointer -fstrict-aliasing -Wall -Wextra -Werror -Wno-missing-field-initializers")
     else()
-        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O3 -fomit-frame-pointer -fstrict-aliasing -Wall -Wextra -Wno-missing-field-initializers -fPIC -Werror -Wno-ignored-attributes")
+        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O3 -fomit-frame-pointer -fstrict-aliasing -Wall -Wextra -Wno-missing-field-initializers -fPIC -Wno-ignored-attributes")
     endif()
     if ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU")
         if ("${CMAKE_CXX_COMPILER_VERSION}" VERSION_LESS 4.9)
@@ -100,10 +100,12 @@ endif()
 #llvm_map_components_to_libnames(LLVM_LINK_LIBS core option target bitreader support profiledata codegen irreader linker instrumentation objcarcopts lto)
 
 # Get the git revision
-include(GetGitRevisionDescriptionDyND)
-get_git_head_revision("${CMAKE_CURRENT_SOURCE_DIR}" GIT_REFSPEC DYND_GIT_SHA1)
-git_describe("${CMAKE_CURRENT_SOURCE_DIR}" DYND_VERSION_STRING
-             --dirty --always --match "v*")
+if (EXISTS "${CMAKE_SOURCE_DIR}/.git")
+    include(GetGitRevisionDescriptionDyND)
+    get_git_head_revision("${CMAKE_CURRENT_SOURCE_DIR}" GIT_REFSPEC DYND_GIT_SHA1)
+    git_describe("${CMAKE_CURRENT_SOURCE_DIR}" DYND_VERSION_STRING
+                --dirty --always --match "v*")
+endif()
 message(STATUS "DyND version: ${DYND_VERSION_STRING}")
 configure_file(
     "${CMAKE_CURRENT_SOURCE_DIR}/src/dynd/git_version.cpp.in"
@@ -442,16 +444,18 @@ if (DYND_SHARED_LIB)
     set_target_properties(libdyndt
         PROPERTIES
         OUTPUT_NAME "dyndt"
-        PREFIX "lib"
-        IMPORT_PREFIX "lib"
         )
+    if (DEFINED SOVERSION)
+        set_target_properties(libdyndt PROPERTIES SOVERSION ${SOVERSION})
+    endif()
     add_library(libdynd SHARED ${libdynd_SRC})
     set_target_properties(libdynd
         PROPERTIES
         OUTPUT_NAME "dynd"
-        PREFIX "lib"
-        IMPORT_PREFIX "lib"
         )
+    if (DEFINED SOVERSION)
+        set_target_properties(libdynd PROPERTIES SOVERSION ${SOVERSION})
+    endif()
     add_dependencies(libdynd libdyndt)
 else()
     add_library(libdyndt STATIC ${libdyndt_SRC})
@@ -479,6 +483,8 @@ set_property(
     PROPERTY COMPILE_DEFINITIONS DYND_EXPORT
 )
 
+add_definitions(-DDYNDT_EXPORT -DDYND_EXPORT)
+
 # Add preprocessor definitions from CMake
 configure_file("include/dynd/cmake_config.hpp.in"
                "${CMAKE_CURRENT_BINARY_DIR}/include/dynd/cmake_config.hpp")
@@ -576,12 +582,12 @@ endif()
 if (DYND_INSTALL_LIB)
     # Install the libdyndt binary
     install(TARGETS libdyndt
-        RUNTIME DESTINATION lib${LIB_SUFFIX}
+        RUNTIME DESTINATION bin
         LIBRARY DESTINATION lib${LIB_SUFFIX}
         ARCHIVE DESTINATION lib${LIB_SUFFIX}${DYND_STATIC_LIB_DIR})
     # Install the libdynd binary
     install(TARGETS libdynd
-        RUNTIME DESTINATION lib${LIB_SUFFIX}
+        RUNTIME DESTINATION bin
         LIBRARY DESTINATION lib${LIB_SUFFIX}
         ARCHIVE DESTINATION lib${LIB_SUFFIX}${DYND_STATIC_LIB_DIR})
     # Install the libdynd headers
