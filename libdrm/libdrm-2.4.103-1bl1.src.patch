--- origsrc/libdrm-2.4.103/etnaviv/etnaviv_device.c	2020-11-04 12:24:14.000000000 +0900
+++ src/libdrm-2.4.103/etnaviv/etnaviv_device.c	2020-11-05 22:36:25.341636900 +0900
@@ -25,8 +25,10 @@
  */
 
 #include <stdlib.h>
+#if defined(__linux__)
 #include <linux/stddef.h>
 #include <linux/types.h>
+#endif
 #include <errno.h>
 #include <sys/mman.h>
 #include <fcntl.h>
--- origsrc/libdrm-2.4.103/exynos/exynos_drm.c	2020-11-04 12:24:14.000000000 +0900
+++ src/libdrm-2.4.103/exynos/exynos_drm.c	2020-11-05 22:36:53.384715400 +0900
@@ -31,7 +31,9 @@
 #include <unistd.h>
 
 #include <sys/mman.h>
+#if defined(__linux__)
 #include <linux/stddef.h>
+#endif
 
 #include <xf86drm.h>
 
--- origsrc/libdrm-2.4.103/exynos/exynos_fimg2d.c	2020-11-04 12:24:14.000000000 +0900
+++ src/libdrm-2.4.103/exynos/exynos_fimg2d.c	2020-11-05 22:37:12.146477200 +0900
@@ -30,7 +30,9 @@
 #include <assert.h>
 
 #include <sys/mman.h>
+#if defined(__linux__)
 #include <linux/stddef.h>
+#endif
 
 #include <xf86drm.h>
 
--- origsrc/libdrm-2.4.103/freedreno/kgsl/kgsl_bo.c	2020-11-04 12:24:14.000000000 +0900
+++ src/libdrm-2.4.103/freedreno/kgsl/kgsl_bo.c	2020-11-05 22:37:41.137545900 +0900
@@ -28,7 +28,9 @@
 
 #include "kgsl_priv.h"
 
+#if defined(__linux__)
 #include <linux/fb.h>
+#endif
 
 static int set_memtype(struct fd_device *dev, uint32_t handle, uint32_t flags)
 {
--- origsrc/libdrm-2.4.103/include/drm/drm.h	2020-11-04 12:24:14.000000000 +0900
+++ src/libdrm-2.4.103/include/drm/drm.h	2020-11-05 22:38:25.597019000 +0900
@@ -45,7 +45,11 @@ typedef unsigned int drm_handle_t;
 #else /* One of the BSDs */
 
 #include <stdint.h>
+#if defined(__CYGWIN__)
+#include <sys/ioctl.h>
+#else
 #include <sys/ioccom.h>
+#endif
 #include <sys/types.h>
 typedef int8_t   __s8;
 typedef uint8_t  __u8;
--- origsrc/libdrm-2.4.103/libkms/vmwgfx.c	2020-11-04 12:24:14.000000000 +0900
+++ src/libdrm-2.4.103/libkms/vmwgfx.c	2020-11-05 22:39:26.595734600 +0900
@@ -97,11 +97,15 @@ vmwgfx_bo_create(struct kms_driver *kms,
 		bo->base.pitch = width * 4;
 		bo->base.kms = kms;
 
+#if defined(ERESTART)
 		do {
+#endif
 			ret = drmCommandWriteRead(bo->base.kms->fd,
 						  DRM_VMW_ALLOC_DMABUF,
 						  &arg, sizeof(arg));
+#if defined(ERESTART)
 		} while (ret == -ERESTART);
+#endif
 
 		if (ret)
 			goto err_free;
--- origsrc/libdrm-2.4.103/omap/omap_drm.c	2020-11-04 12:24:14.000000000 +0900
+++ src/libdrm-2.4.103/omap/omap_drm.c	2020-11-05 22:40:00.607764200 +0900
@@ -27,8 +27,10 @@
  */
 
 #include <stdlib.h>
+#if defined(__linux__)
 #include <linux/stddef.h>
 #include <linux/types.h>
+#endif
 #include <errno.h>
 #include <sys/mman.h>
 #include <fcntl.h>
--- origsrc/libdrm-2.4.103/tests/exynos/exynos_fimg2d_test.c	2020-11-04 12:24:14.000000000 +0900
+++ src/libdrm-2.4.103/tests/exynos/exynos_fimg2d_test.c	2020-11-05 22:40:38.843989600 +0900
@@ -31,7 +31,9 @@
 #include <unistd.h>
 
 #include <sys/mman.h>
+#if defined(__linux__)
 #include <linux/stddef.h>
+#endif
 
 #include <xf86drm.h>
 #include <xf86drmMode.h>
--- origsrc/libdrm-2.4.103/tests/meson.build	2020-11-04 12:24:14.000000000 +0900
+++ src/libdrm-2.4.103/tests/meson.build	2020-11-05 22:41:08.928952400 +0900
@@ -44,7 +44,7 @@ endif
 if with_etnaviv
   subdir('etnaviv')
 endif
-if with_nouveau
+if with_nouveau and host_machine.system() != 'cygwin'
   subdir('nouveau')
 endif
 
--- origsrc/libdrm-2.4.103/xf86drm.h	2020-11-04 12:24:14.000000000 +0900
+++ src/libdrm-2.4.103/xf86drm.h	2020-11-05 22:42:30.066550500 +0900
@@ -47,7 +47,7 @@ extern "C" {
 #define DRM_MAX_MINOR   16
 #endif
 
-#if defined(__linux__)
+#if defined(__linux__) || defined(__CYGWIN__)
 
 #define DRM_IOCTL_NR(n)		_IOC_NR(n)
 #define DRM_IOC_VOID		_IOC_NONE
