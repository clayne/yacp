--- origsrc/librdkafka-1.7.0/CMakeLists.txt	2021-05-06 15:50:04.000000000 +0000
+++ src/librdkafka-1.7.0/CMakeLists.txt	2021-05-28 09:07:06.968536500 +0000
@@ -246,9 +246,15 @@ write_basic_package_version_file(
 )
 
 install(
-    FILES "${project_config}" "${project_version}" "packaging/cmake/Modules/FindLZ4.cmake"
+    FILES "${project_config}" "${project_version}"
     DESTINATION "${config_install_dir}"
 )
+if (NOT CYGWIN)
+  install(
+    FILES "packaging/cmake/Modules/FindLZ4.cmake"
+    DESTINATION "${config_install_dir}"
+  )
+endif()
 
 install(
     EXPORT "${targets_export_name}"
@@ -256,10 +262,12 @@ install(
     DESTINATION "${config_install_dir}"
 )
 
-install(
-    FILES LICENSES.txt
-    DESTINATION "share/licenses/librdkafka"
-)
+if (NOT CYGWIN)
+  install(
+      FILES LICENSES.txt
+      DESTINATION "share/licenses/librdkafka"
+  )
+endif()
 
 add_subdirectory(src)
 add_subdirectory(src-cpp)
--- origsrc/librdkafka-1.7.0/src/rd.h	2021-05-06 15:50:04.000000000 +0000
+++ src/librdkafka-1.7.0/src/rd.h	2021-05-28 09:07:06.968536500 +0000
@@ -195,7 +195,7 @@ static RD_INLINE RD_UNUSED char *rd_strn
 #ifdef __APPLE__
 /* Some versions of MacOSX dont have IOV_MAX */
 #define IOV_MAX 1024
-#elif defined(_WIN32) || defined(__GNU__)
+#elif defined(_WIN32) || defined(__GNU__) || defined(__CYGWIN__)
 /* There is no IOV_MAX on MSVC or GNU but it is used internally in librdkafka */
 #define IOV_MAX 1024
 #else
--- origsrc/librdkafka-1.7.0/src/rdtime.h	2021-05-06 15:50:04.000000000 +0000
+++ src/librdkafka-1.7.0/src/rdtime.h	2021-05-28 09:07:06.968536500 +0000
@@ -195,7 +195,7 @@ static RD_INLINE void rd_timeout_init_ti
                 tspec->tv_sec = timeout_us;
                 tspec->tv_nsec = 0;
         } else {
-#if defined(__APPLE__) || (defined(__ANDROID__) && __ANDROID_API__ < 29)
+#if defined(__CYGWIN__) || defined(__APPLE__) || (defined(__ANDROID__) && __ANDROID_API__ < 29)
                 struct timeval tv;
                 gettimeofday(&tv, NULL);
                 TIMEVAL_TO_TIMESPEC(&tv, tspec);
@@ -226,7 +226,7 @@ static RD_INLINE void rd_timeout_init_ti
                 tspec->tv_sec = timeout_ms;
                 tspec->tv_nsec = 0;
         } else {
-#if defined(__APPLE__) || (defined(__ANDROID__) && __ANDROID_API__ < 29)
+#if defined(__CYGWIN__) || defined(__APPLE__) || (defined(__ANDROID__) && __ANDROID_API__ < 29)
                 struct timeval tv;
                 gettimeofday(&tv, NULL);
                 TIMEVAL_TO_TIMESPEC(&tv, tspec);
--- origsrc/librdkafka-1.7.0/tests/CMakeLists.txt	2021-05-06 15:50:04.000000000 +0000
+++ src/librdkafka-1.7.0/tests/CMakeLists.txt	2021-05-28 09:07:06.968536500 +0000
@@ -135,7 +135,7 @@ add_test(NAME RdKafkaTestInParallel COMM
 add_test(NAME RdKafkaTestSequentially COMMAND test-runner -p1)
 add_test(NAME RdKafkaTestBrokerLess COMMAND test-runner -p5 -l)
 
-if(NOT WIN32 AND NOT APPLE)
+if(NOT WIN32 AND NOT APPLE AND NOT CYGWIN)
   set(tests_OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR})
   add_subdirectory(interceptor_test)
 endif()
