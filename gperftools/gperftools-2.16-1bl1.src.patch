--- origsrc/gperftools-gperftools-2.16/Makefile.am	2024-09-26 07:25:20.000000000 +0900
+++ src/gperftools-gperftools-2.16/Makefile.am	2024-09-28 11:19:26.965638400 +0900
@@ -658,7 +658,7 @@ lib_LTLIBRARIES += libtcmalloc.la
 libtcmalloc_la_SOURCES = $(TCMALLOC_CC) $(FULL_MALLOC_SRC)
 libtcmalloc_la_CXXFLAGS = -DNDEBUG $(AM_CXXFLAGS) \
                           $(MAYBE_NO_HEAP_CHECK) $(EMERGENCY_MALLOC_DEFINE)
-libtcmalloc_la_LDFLAGS = -version-info @TCMALLOC_SO_VERSION@ $(AM_LDFLAGS)
+libtcmalloc_la_LDFLAGS = -no-undefined -version-info @TCMALLOC_SO_VERSION@ $(AM_LDFLAGS)
 libtcmalloc_la_LIBADD = libstacktrace.la libcommon.la
 
 ### Unittests
--- origsrc/gperftools-gperftools-2.16/configure.ac	2024-09-26 07:25:20.000000000 +0900
+++ src/gperftools-gperftools-2.16/configure.ac	2024-09-28 11:32:40.348418500 +0900
@@ -198,7 +198,7 @@ AC_PROG_CXX
 AC_LANG([C++])
 AM_CONDITIONAL(GCC, test "$GCC" = yes)   # let the Makefile know if we're gcc
 
-AX_CXX_COMPILE_STDCXX(17, ext, mandatory)
+# AX_CXX_COMPILE_STDCXX(17, ext, mandatory)
 
 LT_INIT
 
--- origsrc/gperftools-gperftools-2.16/src/base/basictypes.h	2024-09-26 07:25:20.000000000 +0900
+++ src/gperftools-gperftools-2.16/src/base/basictypes.h	2024-09-28 11:38:21.081138600 +0900
@@ -128,7 +128,7 @@ inline void bit_store(Dest *dest, const
   memcpy(dest, source, sizeof(Dest));
 }
 
-#ifdef HAVE___ATTRIBUTE__
+#if defined(HAVE___ATTRIBUTE__) && defined(__ELF__)
 # define ATTRIBUTE_WEAK      __attribute__((weak))
 # define ATTRIBUTE_NOINLINE  __attribute__((noinline))
 #else
--- origsrc/gperftools-gperftools-2.16/src/base/threading.h	2024-09-26 07:25:20.000000000 +0900
+++ src/gperftools-gperftools-2.16/src/base/threading.h	2024-09-28 12:13:26.001468300 +0900
@@ -99,7 +99,7 @@ using TlsKey = pthread_key_t;
 // in standard (even without pthread_key_create_once_np), but we
 // have what we have. It's value is (int)(-1). And, indeed, -1 seems
 // like most sensible value.
-constexpr inline TlsKey kInvalidTLSKey = static_cast<TlsKey>(~uintptr_t{0});
+const inline TlsKey kInvalidTLSKey = (TlsKey)(~uintptr_t{0});
 static_assert(sizeof(pthread_key_t) <= sizeof(uintptr_t));
 
 ATTRIBUTE_VISIBILITY_HIDDEN inline int CreateTlsKey(TlsKey *pkey, void (*destructor)(void*)) {
--- origsrc/gperftools-gperftools-2.16/src/tests/generic_writer_test.cc	2024-09-26 07:25:20.000000000 +0900
+++ src/gperftools-gperftools-2.16/src/tests/generic_writer_test.cc	2024-09-28 23:56:48.291027400 +0900
@@ -47,7 +47,7 @@ TEST(GenericWriterTest, File) {
   }
 
   {
-    tcmalloc::RawFDGenericWriter<128> writer(static_cast<RawFD>(fileno(f)));
+    tcmalloc::RawFDGenericWriter<128> writer(reinterpret_cast<RawFD>(fileno(f)));
     PrintLargeAmount(&writer);
   }
 
--- origsrc/gperftools-gperftools-2.16/src/tests/min_per_thread_cache_size_test.cc	2024-09-26 07:25:20.000000000 +0900
+++ src/gperftools-gperftools-2.16/src/tests/min_per_thread_cache_size_test.cc	2024-09-29 00:34:26.384056900 +0900
@@ -31,6 +31,8 @@
 
 #include "config_for_unittests.h"
 
+#include <condition_variable>
+#include <mutex>
 #include <new>
 #include <thread>
 #include <vector>
