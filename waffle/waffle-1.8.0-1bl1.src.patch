--- origsrc/waffle-v1.8.0/meson.build	2023-09-25 23:26:09.000000000 +0900
+++ src/waffle-v1.8.0/meson.build	2024-01-15 16:10:20.632834600 +0900
@@ -35,15 +35,15 @@ project(
   default_options : ['c_std=c99', 'warning_level=1', 'buildtype=debugoptimized'],
 )
 
-waffle_name = meson.project_name() + '-1'
-docdir = join_paths(get_option('datadir'), 'doc', meson.project_name() + '1')
+waffle_name = meson.project_name()
+docdir = join_paths(get_option('datadir'), 'doc', meson.project_name())
 
 build_x11_egl = false
 build_wayland = false
 build_glx = false
 build_gbm = false
 build_surfaceless = false
-build_wgl = ['windows', 'cygwin'].contains(host_machine.system())
+build_wgl = ['windows'].contains(host_machine.system())
 build_cgl = host_machine.system() == 'darwin'
 
 if get_option('nacl')
--- origsrc/waffle-v1.8.0/src/waffle/meson.build	2023-09-25 23:26:09.000000000 +0900
+++ src/waffle-v1.8.0/src/waffle/meson.build	2024-01-15 16:16:15.583456200 +0900
@@ -193,11 +193,9 @@ libwaffle = library(
   include_directories : [include_libwaffle, inc_waffle, inc_include],
   c_args : api_c_args,
   dependencies : deps_for_waffle,
-  name_prefix : host_machine.system() != 'windows' ? 'lib' : '',
   soversion : host_machine.system() != 'windows' ? '0' : '',
   version : _ver,
   install : true,
-  vs_module_defs : 'waffle.def',
   gnu_symbol_visibility : 'hidden',
 )
 
--- origsrc/waffle-v1.8.0/src/waffle/surfaceless_egl/sl_platform.h	2023-09-25 23:26:09.000000000 +0900
+++ src/waffle-v1.8.0/src/waffle/surfaceless_egl/sl_platform.h	2024-01-15 16:13:48.722660500 +0900
@@ -27,7 +27,9 @@
 
 #include <stdbool.h>
 #include <stdlib.h>
+#if !defined(__CYGWIN__)
 #include <gbm.h>
+#endif
 
 #undef linux
 
--- origsrc/waffle-v1.8.0/third_party/threads/meson.build	2023-09-25 23:26:09.000000000 +0900
+++ src/waffle-v1.8.0/third_party/threads/meson.build	2024-01-15 16:11:53.548506300 +0900
@@ -23,7 +23,7 @@
 # OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 # OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 
-if ['cygwin', 'windows'].contains(host_machine.system())
+if ['windows'].contains(host_machine.system())
   files_threads = files('threads_win32.c')
 else
   files_threads = files('threads_posix.c')
