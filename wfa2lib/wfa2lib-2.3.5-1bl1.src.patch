--- origsrc/WFA2-lib-2.3.5/CMakeLists.txt	2024-04-20 19:10:15.000000000 +0900
+++ src/WFA2-lib-2.3.5/CMakeLists.txt	2024-08-16 15:42:36.035795600 +0900
@@ -142,19 +142,12 @@ set(wfa2lib_SOURCE
   alignment/score_matrix.c
 )
 
-add_library(wfa2_static
-    ${wfa2lib_SOURCE}
-    )
 add_library(wfa2 SHARED ${wfa2lib_SOURCE})
-set_target_properties(wfa2_static PROPERTIES OUTPUT_NAME wfa2)
 set_target_properties(wfa2 PROPERTIES SOVERSION 0)
 target_include_directories(wfa2 PUBLIC . wavefront utils)
-target_include_directories(wfa2_static PUBLIC . wavefront utils)
 add_library(wfa2::wfa2 ALIAS wfa2)
-add_library(wfa2::wfa2_static ALIAS wfa2_static)
 
 if(OPENMP)
-  target_link_libraries(wfa2_static PRIVATE OpenMP::OpenMP_C)
   target_link_libraries(wfa2 PRIVATE OpenMP::OpenMP_C)
 endif(OPENMP)
 
@@ -166,17 +159,12 @@ set(wfa2cpp_SOURCE
 file(GLOB CPP_INCLUDES
   bindings/cpp/*.h*
   )
-add_library(wfa2cpp_static STATIC ${wfa2cpp_SOURCE})
 add_library(wfa2cpp SHARED ${wfa2cpp_SOURCE})
 set_target_properties(wfa2cpp PROPERTIES SOVERSION 0)
-set_target_properties(wfa2cpp_static PROPERTIES OUTPUT_NAME wfa2cpp)
 target_link_libraries(wfa2cpp PUBLIC wfa2)
-target_link_libraries(wfa2cpp_static PUBLIC wfa2_static)
 add_library(wfa2::wfa2cpp ALIAS wfa2cpp)
-add_library(wfa2::wfa2cpp_static ALIAS wfa2cpp_static)
 
 if(OPENMP)
-  target_link_libraries(wfa2cpp_static PRIVATE OpenMP::OpenMP_CXX)
   target_link_libraries(wfa2cpp PRIVATE OpenMP::OpenMP_CXX)
 endif(OPENMP)
 
@@ -254,15 +242,22 @@ add_wfa_test()
 
 # Do not install anything when used with FetchContent
 if(CMAKE_CURRENT_SOURCE_DIR STREQUAL CMAKE_SOURCE_DIR)
-  install(TARGETS wfa2_static ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR} )
-  install(TARGETS wfa2 ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR} )
+  install(TARGETS wfa2 RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR} ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR} )
 
   install(FILES ${INCLUDES} DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/wfa2lib/wavefront)
   install(FILES ${UTILS_INCLUDES} DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/wfa2lib/utils)
   install(FILES ${ALIGNMENT_INCLUDES} DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/wfa2lib/alignment)
   install(FILES ${SYSTEM_INCLUDES} DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/wfa2lib/system)
 
-  install(TARGETS wfa2cpp ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR})
-  install(TARGETS wfa2cpp_static ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR})
+  install(TARGETS wfa2cpp RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR} ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR})
   install(FILES ${CPP_INCLUDES} DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/wfa2lib/bindings/cpp)
 endif()
+
+set(prefix ${CMAKE_INSTALL_PREFIX})
+set(exec_prefix ${CMAKE_INSTALL_PREFIX})
+set(libdir ${CMAKE_INSTALL_PREFIX}/lib)
+set(includedir ${CMAKE_INSTALL_PREFIX}/include)
+configure_file(${CMAKE_SOURCE_DIR}/libwfa2.pc.in ${CMAKE_BINARY_DIR}/libwfa2.pc @ONLY)
+install(FILES ${CMAKE_BINARY_DIR}/libwfa2.pc DESTINATION ${CMAKE_INSTALL_PREFIX}/lib/pkgconfig)
+configure_file(${CMAKE_SOURCE_DIR}/libwfa2cpp.pc.in ${CMAKE_BINARY_DIR}/libwfa2cpp.pc @ONLY)
+install(FILES ${CMAKE_BINARY_DIR}/libwfa2cpp.pc DESTINATION ${CMAKE_INSTALL_PREFIX}/lib/pkgconfig)
--- origsrc/WFA2-lib-2.3.5/VERSION.txt	2024-04-20 19:10:15.000000000 +0900
+++ src/WFA2-lib-2.3.5/VERSION.txt	2024-08-16 16:02:24.093887000 +0900
@@ -1 +1 @@
-v2.3
\ No newline at end of file
+2.3.5
--- origsrc/WFA2-lib-2.3.5/libwfa2.pc.in	1970-01-01 09:00:00.000000000 +0900
+++ src/WFA2-lib-2.3.5/libwfa2.pc.in	2024-08-16 15:39:03.513768800 +0900
@@ -0,0 +1,10 @@
+prefix=@prefix@
+exec_prefix=@exec_prefix@
+libdir=@libdir@
+includedir=@includedir@
+
+Name: wfa2lib
+Description: Wavefront alignment algorithm library v2
+Version: @BUILD_NUMBER@
+Libs: -L${libdir} -lwfa2
+Cflags: -I${includedir}
--- origsrc/WFA2-lib-2.3.5/libwfa2cpp.pc.in	1970-01-01 09:00:00.000000000 +0900
+++ src/WFA2-lib-2.3.5/libwfa2cpp.pc.in	2024-08-16 15:44:59.772411200 +0900
@@ -0,0 +1,11 @@
+prefix=@prefix@
+exec_prefix=@exec_prefix@
+libdir=@libdir@
+includedir=@includedir@
+
+Name: wfa2libcpp
+Description: Wavefront alignment algorithm library v2 (cpp)
+Version: @BUILD_NUMBER@
+Libs: -L${libdir} -lwfa2cpp
+Cflags: -I${includedir}
+Requires: libwfa2
