--- origsrc/kokkos-3.6.00/core/src/CMakeLists.txt	2022-04-27 02:13:03.000000000 +0900
+++ src/kokkos-3.6.00/core/src/CMakeLists.txt	2022-05-05 15:15:46.811886000 +0900
@@ -13,6 +13,9 @@ INSTALL (DIRECTORY
   PATTERN "*.inc_*"
   PATTERN "*.hpp"
   PATTERN "*.h"
+  PATTERN "*.cpp" EXCLUDE
+  PATTERN "*.txt" EXCLUDE
+  PATTERN ".clang-format" EXCLUDE
 )
 
 SET(KOKKOS_CORE_SRCS)
--- origsrc/kokkos-3.6.00/core/src/Kokkos_Macros.hpp	2022-04-27 02:13:03.000000000 +0900
+++ src/kokkos-3.6.00/core/src/Kokkos_Macros.hpp	2022-05-05 07:08:15.329748500 +0900
@@ -649,7 +649,7 @@ static constexpr bool kokkos_omp_on_host
 
 #if (defined(KOKKOS_COMPILER_GNU) || defined(KOKKOS_COMPILER_CLANG) ||  \
      defined(KOKKOS_COMPILER_INTEL) || defined(KOKKOS_COMPILER_PGI)) && \
-    !defined(_WIN32)
+    !defined(_WIN32) && !defined(__CYGWIN__)
 #define KOKKOS_IMPL_ENABLE_STACKTRACE
 #define KOKKOS_IMPL_ENABLE_CXXABI
 #endif
--- origsrc/kokkos-3.6.00/core/unit_test/TestTeamScan.hpp	2022-04-27 02:13:03.000000000 +0900
+++ src/kokkos-3.6.00/core/unit_test/TestTeamScan.hpp	2022-05-05 07:30:00.222440500 +0900
@@ -82,14 +82,14 @@ struct TestTeamScan {
                           });
   }
 
-  auto operator()(int32_t _M, int32_t _N) {
+  auto operator()(int32_t _M, int32_t N_) {
     std::stringstream ss;
     ss << Kokkos::Impl::demangle(typeid(*this).name());
-    ss << "(/*M=*/" << _M << ", /*N=*/" << _N << ")";
+    ss << "(/*M=*/" << _M << ", /*N=*/" << N_ << ")";
     std::string const test_id = ss.str();
 
     M   = _M;
-    N   = _N;
+    N   = N_;
     a_d = view_type("a_d", M, N);
     a_r = view_type("a_r", M, N);
     // Set team size explicitly to
