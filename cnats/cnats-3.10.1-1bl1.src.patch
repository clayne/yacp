--- origsrc/nats.c-3.10.1/CMakeLists.txt	2025-03-15 01:45:20.000000000 +0900
+++ src/nats.c-3.10.1/CMakeLists.txt	2025-04-09 18:47:25.597709000 +0900
@@ -121,7 +121,7 @@ if(NATS_BUILD_USE_SODIUM)
       ${NATS_SODIUM_DIR}
   )
   FIND_LIBRARY(NATS_SODIUM_LIBRARY
-    NAMES libsodium.so libsodium.dylib libsodium.a libsodium.lib libsodium.dll
+    NAMES libsodium.so libsodium.dylib libsodium.a libsodium.lib libsodium.dll sodium.dll
     HINTS ${NATS_SODIUM_DIR}
   )
   FIND_PACKAGE_HANDLE_STANDARD_ARGS(libsodium DEFAULT_MSG
--- origsrc/nats.c-3.10.1/src/CMakeLists.txt	2025-03-15 01:45:20.000000000 +0900
+++ src/nats.c-3.10.1/src/CMakeLists.txt	2025-04-09 18:47:25.597709000 +0900
@@ -62,7 +62,7 @@ if(NATS_BUILD_LIB_SHARED)
   target_include_directories(nats PUBLIC
         $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>
         $<INSTALL_INTERFACE:include>)
-  install(TARGETS nats EXPORT cnats-targets DESTINATION ${NATS_LIBDIR})
+  install(TARGETS nats EXPORT cnats-targets RUNTIME DESTINATION bin ARCHIVE DESTINATION ${NATS_LIBDIR})
   install(EXPORT cnats-targets
         NAMESPACE cnats::
         FILE cnats-config.cmake
--- origsrc/nats.c-3.10.1/src/libnats.pc.in	2025-03-15 01:45:20.000000000 +0900
+++ src/nats.c-3.10.1/src/libnats.pc.in	2025-04-09 18:47:25.597709000 +0900
@@ -1,12 +1,12 @@
-prefix="@CMAKE_INSTALL_PREFIX@"
-exec_prefix="${prefix}"
-libdir="${prefix}/@CMAKE_INSTALL_LIBDIR@"
-includedir="${prefix}/include"
+prefix=@CMAKE_INSTALL_PREFIX@
+exec_prefix=${prefix}
+libdir=${prefix}/@CMAKE_INSTALL_LIBDIR@
+includedir=${prefix}/include
 
 Name: NATS & NATS Streaming - C Client library
 Description: A C client library for the NATS messaging system.
 URL: https://github.com/nats-io/nats.c
 Version: @NATS_VERSION_MAJOR@.@NATS_VERSION_MINOR@.@NATS_VERSION_PATCH@
-Cflags: -I"${includedir}"
-Libs: -L"${libdir}" -lnats
-Libs.private: -L"${libdir}" -lnats @PKGCONF_LIBS_PRIV@
+Cflags: -I${includedir}
+Libs: -L${libdir} -lnats
+Libs.private: -L${libdir} -lnats @PKGCONF_LIBS_PRIV@
--- origsrc/nats.c-3.10.1/test/CMakeLists.txt	2025-03-15 01:45:20.000000000 +0900
+++ src/nats.c-3.10.1/test/CMakeLists.txt	2025-04-09 18:47:25.613329000 +0900
@@ -6,7 +6,7 @@ if(NOT BUILD_TESTING)
   return()
 endif()
 
-if(NOT NATS_BUILD_LIB_STATIC)
+if(NOT NATS_BUILD_LIB_STATIC AND NOT CYGWIN)
   MESSAGE(FATAL_ERROR
     "Building tests require static library, or run CMake with -DBUILD_TESTING=OFF")
   return()
@@ -31,8 +31,15 @@ endif(NATS_BUILD_STREAMING)
 # Build the test program
 add_executable(testsuite test.c bench_sub_async.c)
 
-# Link statically with the library
-target_link_libraries(testsuite nats_static ${NATS_EXTRA_LIB})
+# Link with the library
+if(NATS_BUILD_LIB_SHARED)
+  target_link_libraries(testsuite nats ${NATS_EXTRA_LIB})
+elseif(NATS_BUILD_LIB_STATIC)
+  target_link_libraries(testsuite nats_static ${NATS_EXTRA_LIB})
+else()
+  message("Building tests require shared or static library")
+  return()
+endif()
 
 set(BENCH_LIST ${PROJECT_SOURCE_DIR}/test/list_bench.txt)
 set(STAN_LIST ${PROJECT_SOURCE_DIR}/test/list_stan.txt)
--- origsrc/nats.c-3.10.1/test/check_cpp/CMakeLists.txt	2025-03-15 01:45:20.000000000 +0900
+++ src/nats.c-3.10.1/test/check_cpp/CMakeLists.txt	2025-04-09 18:51:12.444502800 +0900
@@ -2,12 +2,6 @@ if(NOT BUILD_TESTING)
   return()
 endif()
 
-if(NOT NATS_BUILD_LIB_STATIC)
-  MESSAGE(FATAL_ERROR
-          "Building tests require static library, or run CMake with -DBUILD_TESTING=OFF")
-  return()
-endif()
-
 if(MSVC)
   set_source_files_properties(test.c PROPERTIES COMPILE_FLAGS "/w")
 endif()
@@ -22,4 +16,4 @@ endif(NATS_BUILD_WITH_TLS)
 # Build the test program
 add_executable(check_cpp check_cpp.cpp)
 
-target_link_libraries(check_cpp nats_static ${NATS_EXTRA_LIB})
+target_link_libraries(check_cpp nats ${NATS_EXTRA_LIB})
--- origsrc/nats.c-3.10.1/test/test.c	2025-03-15 01:45:20.000000000 +0900
+++ src/nats.c-3.10.1/test/test.c	2025-04-09 18:47:25.613329000 +0900
@@ -20,8 +20,10 @@
 #else
 #include <dirent.h>
 #include <sys/stat.h>
+#if !defined(__CYGWIN__)
 #include <execinfo.h>
 #endif
+#endif
 
 #include "buf.h"
 #include "timer.h"
@@ -37298,7 +37300,7 @@ void test_StanSubTimeout(void)
 
 #endif
 
-#ifndef _WIN32
+#if !defined(_WIN32) && !defined(__CYGWIN__)
 static void _sigsegv_handler(int sig) {
 
 // Android doesn't support backtrace before API Level 33.
@@ -37333,7 +37335,7 @@ int main(int argc, char **argv)
     }
     testName = argv[1];
 
-#ifndef _WIN32
+#if !defined(_WIN32) && !defined(__CYGWIN__)
     signal(SIGSEGV, _sigsegv_handler);
 #endif // _WIN32
 
