--- origsrc/kokkos-kernels-3.4.01/CMakeLists.txt	2021-05-26 11:26:03.000000000 +0900
+++ src/kokkos-kernels-3.4.01/CMakeLists.txt	2021-10-03 12:43:59.452516800 +0900
@@ -207,3 +207,10 @@ ELSE()
 
   KOKKOSKERNELS_PACKAGE_POSTPROCESS()
 ENDIF()
+
+SET(prefix ${CMAKE_INSTALL_PREFIX})
+SET(exec_prefix ${CMAKE_INSTALL_PREFIX})
+SET(libdir ${CMAKE_INSTALL_PREFIX}/lib)
+SET(includedir ${CMAKE_INSTALL_PREFIX}/include)
+CONFIGURE_FILE(${CMAKE_SOURCE_DIR}/kokkos-kernels.pc.in ${CMAKE_BINARY_DIR}/kokkos-kernels.pc @ONLY)
+INSTALL(FILES ${CMAKE_BINARY_DIR}/kokkos-kernels.pc DESTINATION ${CMAKE_INSTALL_PREFIX}/lib/pkgconfig)
--- origsrc/kokkos-kernels-3.4.01/cmake/kokkoskernels_tribits.cmake	2021-05-26 11:26:03.000000000 +0900
+++ src/kokkos-kernels-3.4.01/cmake/kokkoskernels_tribits.cmake	2021-10-03 12:47:31.127435900 +0900
@@ -130,6 +130,9 @@ ELSE()
   KOKKOSKERNELS_INTERNAL_ADD_LIBRARY(
     ${LIBRARY_NAME} ${ARGN})
 ENDIF()
+IF (CYGWIN)
+  SET_TARGET_PROPERTIES(${LIBRARY_NAME} PROPERTIES SOVERSION ${SOVERSION})
+ENDIF()
 ENDFUNCTION()
 
 FUNCTION(KOKKOSKERNELS_ADD_EXECUTABLE EXE_NAME)
--- origsrc/kokkos-kernels-3.4.01/kokkos-kernels.pc.in	1970-01-01 09:00:00.000000000 +0900
+++ src/kokkos-kernels-3.4.01/kokkos-kernels.pc.in	2021-10-03 12:43:59.476581700 +0900
@@ -0,0 +1,10 @@
+prefix=@prefix@
+exec_prefix=@exec_prefix@
+libdir=@libdir@
+includedir=@includedir@
+
+Name: kokkos-kernels
+Description: C++ Performance Portability Programming EcoSystem: Math Kernels
+Version: @KokkosKernels_VERSION_MAJOR@.@KokkosKernels_VERSION_MINOR@.@KokkosKernels_VERSION_PATCH@
+Libs: -L${libdir} -lkokkoskernels
+Cflags: -I${includedir}
--- origsrc/kokkos-kernels-3.4.01/test_common/KokkosKernels_TestUtils.hpp	2021-05-26 11:26:03.000000000 +0900
+++ src/kokkos-kernels-3.4.01/test_common/KokkosKernels_TestUtils.hpp	2021-10-03 13:44:17.826566600 +0900
@@ -48,6 +48,13 @@
 #include "KokkosKernels_Utils.hpp"
 #include "Kokkos_ArithTraits.hpp"
 
+#if defined(_B)
+#undef _B
+#endif
+#if defined(_C)
+#undef _C
+#endif
+
 namespace Test {
   template<class ViewType, bool strided = std::is_same<typename ViewType::array_layout, Kokkos::LayoutStride>::value>
   struct multivector_layout_adapter;
