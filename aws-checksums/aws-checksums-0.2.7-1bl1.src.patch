--- origsrc/aws-checksums-0.2.7/CMakeLists.txt	2025-04-11 07:13:13.000000000 +0900
+++ src/aws-checksums-0.2.7/CMakeLists.txt	2025-05-26 10:07:09.993347600 +0900
@@ -57,6 +57,10 @@ aws_add_sanitizers(${PROJECT_NAME})
 # We are not ABI stable yet
 set_target_properties(${PROJECT_NAME} PROPERTIES VERSION 1.0.0)
 
+if (DEFINED SOVERSION)
+    set_target_properties(${PROJECT_NAME} PROPERTIES SOVERSION "${SOVERSION}")
+endif()
+
 if (USE_CPU_EXTENSIONS)
     if (AWS_ARCH_INTEL)
         file (GLOB AWS_ARCH_INTEL_SRC
@@ -132,7 +136,7 @@ else()
 endif()
 
 install(EXPORT "${PROJECT_NAME}-targets"
-        DESTINATION "${CMAKE_INSTALL_LIBDIR}/cmake/${PROJECT_NAME}/${TARGET_DIR}"
+        DESTINATION "${CMAKE_INSTALL_LIBDIR}/cmake/${PROJECT_NAME}"
         NAMESPACE AWS::
         COMPONENT Development)
 
@@ -149,3 +153,10 @@ if (BUILD_TESTING)
     add_subdirectory(tests)
     add_subdirectory(bin/benchmark)
 endif ()
+
+set(prefix ${CMAKE_INSTALL_PREFIX})
+set(exec_prefix ${CMAKE_INSTALL_PREFIX})
+set(libdir ${CMAKE_INSTALL_PREFIX}/lib)
+set(includedir ${CMAKE_INSTALL_PREFIX}/include)
+configure_file(${CMAKE_SOURCE_DIR}/aws-checksums.pc.in ${CMAKE_BINARY_DIR}/aws-checksums.pc @ONLY)
+install(FILES ${CMAKE_BINARY_DIR}/aws-checksums.pc DESTINATION ${CMAKE_INSTALL_PREFIX}/lib/pkgconfig)
--- origsrc/aws-checksums-0.2.7/aws-checksums.pc.in	1970-01-01 09:00:00.000000000 +0900
+++ src/aws-checksums-0.2.7/aws-checksums.pc.in	2025-05-26 10:07:10.008990100 +0900
@@ -0,0 +1,10 @@
+prefix=@prefix@
+exec_prefix=@exec_prefix@
+libdir=@libdir@
+includedir=@includedir@
+
+Name: aws-checksums
+Description: Cross-Platform HW accelerated CRC32c and CRC32 with fallback to efficient SW implementations
+Version: @VERSION@
+Libs: -L${libdir} -laws-checksums
+Cflags: -I${includedir}
--- origsrc/aws-checksums-0.2.7/cmake/aws-checksums-config.cmake	2025-04-11 07:13:13.000000000 +0900
+++ src/aws-checksums-0.2.7/cmake/aws-checksums-config.cmake	2025-05-26 10:07:10.008990100 +0900
@@ -1,18 +1 @@
-macro(aws_load_targets type)
-    include(${CMAKE_CURRENT_LIST_DIR}/${type}/@PROJECT_NAME@-targets.cmake)
-endmacro()
-
-# try to load the lib follow BUILD_SHARED_LIBS. Fall back if not exist.
-if (BUILD_SHARED_LIBS)
-    if (EXISTS "${CMAKE_CURRENT_LIST_DIR}/shared")
-        aws_load_targets(shared)
-    else()
-        aws_load_targets(static)
-    endif()
-else()
-    if (EXISTS "${CMAKE_CURRENT_LIST_DIR}/static")
-        aws_load_targets(static)
-    else()
-        aws_load_targets(shared)
-    endif()
-endif()
+include(${CMAKE_CURRENT_LIST_DIR}/@PROJECT_NAME@-targets.cmake)
