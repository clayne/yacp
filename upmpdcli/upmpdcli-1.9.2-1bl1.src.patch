--- origsrc/upmpdcli-1.9.2/meson.build	2025-02-19 19:43:35.000000000 +0900
+++ src/upmpdcli-1.9.2/meson.build	2025-03-09 23:33:45.002828800 +0900
@@ -3,7 +3,7 @@ project(
   'cpp',
   license: 'LGPL 2.1+',
   version: '1.9.2',
-  default_options: ['cpp_std=c++17', 'buildtype=debugoptimized'],
+  default_options: ['cpp_std=gnu++17', 'buildtype=debugoptimized'],
   meson_version: '>=0.49',
 )
 
@@ -19,7 +19,7 @@ project(
 
 
 deps = []
-dep_libupnpp = dependency('libupnpp')
+dep_libupnpp = dependency('upnpp')
 deps += dep_libupnpp
 deps += dependency('libcurl')
 deps += dependency('libmicrohttpd')
--- origsrc/upmpdcli-1.9.2/src/main.cxx	2024-08-19 19:24:43.000000000 +0900
+++ src/upmpdcli-1.9.2/src/main.cxx	2025-03-09 23:40:32.476736300 +0900
@@ -426,12 +426,15 @@ int main(int argc, char *argv[])
             std::cerr << "chown(" << logfilename << ") : errno : " << errno << '\n';
         }
     }
+
+#if !defined(__CYGWIN__)
     if (Logger::getTheLog(logfilename) == 0) {
         std::cerr << "Can't initialize log" << '\n';
         return 1;
     }
     Logger::getTheLog("")->reopen(logfilename);
     Logger::getTheLog("")->setLogLevel(Logger::LogLevel(loglevel));
+#endif
 
     // If a streaming service is enabled, we need a Media
     // Server. We let a static ContentDirectory method decide this
--- origsrc/upmpdcli-1.9.2/src/sysvshm.cpp	2023-04-09 15:57:28.000000000 +0900
+++ src/upmpdcli-1.9.2/src/sysvshm.cpp	2025-03-09 23:34:23.743129700 +0900
@@ -155,7 +155,7 @@ LockableShmSeg::LockableShmSeg(key_t ky,
         err = pthread_mutexattr_init(&attr);if (err) goto done;
         err = pthread_mutexattr_setpshared(&attr, PTHREAD_PROCESS_SHARED); 
         if (err) goto done;
-#ifndef __APPLE__
+#if !defined(__APPLE__) && !defined(__CYGWIN__)
         err = pthread_mutexattr_setrobust(&attr, PTHREAD_MUTEX_ROBUST);
         if (err) goto done;
 #endif
