--- origsrc/tree-sitter-ruby-0.23.1/CMakeLists.txt	2024-11-11 13:48:17.000000000 +0900
+++ src/tree-sitter-ruby-0.23.1/CMakeLists.txt	2024-11-12 14:26:22.206291500 +0900
@@ -17,12 +17,14 @@ endif()
 
 find_program(TREE_SITTER_CLI tree-sitter DOC "Tree-sitter CLI")
 
+if (NOT TREE_SITTER_CLI STREQUAL "TREE_SITTER_CLI-NOTFOUND")
 add_custom_command(OUTPUT "${CMAKE_CURRENT_SOURCE_DIR}/src/parser.c"
                    DEPENDS "${CMAKE_CURRENT_SOURCE_DIR}/src/grammar.json"
                    COMMAND "${TREE_SITTER_CLI}" generate src/grammar.json
                             --abi=${TREE_SITTER_ABI_VERSION}
                    WORKING_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}"
                    COMMENT "Generating parser.c")
+endif()
 
 add_library(tree-sitter-ruby src/parser.c)
 if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/src/scanner.c)
@@ -41,15 +43,15 @@ set_target_properties(tree-sitter-ruby
                       SOVERSION "${TREE_SITTER_ABI_VERSION}.${PROJECT_VERSION_MAJOR}"
                       DEFINE_SYMBOL "")
 
+include(GNUInstallDirs)
+
 configure_file(bindings/c/tree-sitter-ruby.pc.in
                "${CMAKE_CURRENT_BINARY_DIR}/tree-sitter-ruby.pc" @ONLY)
 
-include(GNUInstallDirs)
-
 install(FILES bindings/c/tree-sitter-ruby.h
         DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}/tree_sitter")
 install(FILES "${CMAKE_CURRENT_BINARY_DIR}/tree-sitter-ruby.pc"
-        DESTINATION "${CMAKE_INSTALL_DATAROOTDIR}/pkgconfig")
+        DESTINATION "${CMAKE_INSTALL_LIBDIR}/pkgconfig")
 install(TARGETS tree-sitter-ruby
         LIBRARY DESTINATION "${CMAKE_INSTALL_LIBDIR}")
 
