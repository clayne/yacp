--- origsrc/libfabric-1.11.1/Makefile.am	2020-10-10 03:33:11.000000000 +0900
+++ src/libfabric-1.11.1/Makefile.am	2020-11-23 17:50:04.556085100 +0900
@@ -101,6 +101,11 @@ common_srcs += include/linux/osd.h
 common_srcs += include/unix/osd.h
 endif
 
+if CYGWIN
+common_srcs += src/unix/osd.c
+common_srcs += include/unix/osd.h
+endif
+
 # ensure dl-built providers link back to libfabric
 linkback = src/libfabric.la
 
@@ -178,7 +183,7 @@ src_libfabric_la_SOURCES =			\
 	$(common_srcs)
 
 src_libfabric_la_CPPFLAGS = $(AM_CPPFLAGS)
-src_libfabric_la_LDFLAGS =
+src_libfabric_la_LDFLAGS = -no-undefined
 src_libfabric_la_LIBADD =
 src_libfabric_la_DEPENDENCIES = libfabric.map
 
--- origsrc/libfabric-1.11.1/configure.ac	2020-10-10 03:33:11.000000000 +0900
+++ src/libfabric-1.11.1/configure.ac	2020-11-23 15:59:40.428063200 +0900
@@ -32,6 +32,9 @@ case $host_os in
 *freebsd*)
 	freebsd=1
 	;;
+*cygwin*)
+    cygwin=1
+    ;;
 *)
 	AC_MSG_ERROR([libfabric only builds on Linux, OS X, and FreeBSD])
 	;;
@@ -40,6 +43,7 @@ esac
 AM_CONDITIONAL([MACOS], [test "x$macos" = "x1"])
 AM_CONDITIONAL([LINUX], [test "x$linux" = "x1"])
 AM_CONDITIONAL([FREEBSD], [test "x$freebsd" = "x1"])
+AM_CONDITIONAL([CYGWIN], [test "x$cygwin" = "x1"])
 
 base_c_warn_flags="-Wall -Wundef -Wpointer-arith"
 debug_c_warn_flags="-Wextra -Wno-unused-parameter -Wno-sign-compare -Wno-missing-field-initializers"
--- origsrc/libfabric-1.11.1/include/ofi_net.h	2020-10-10 03:33:11.000000000 +0900
+++ src/libfabric-1.11.1/include/ofi_net.h	2020-11-23 16:30:16.324775100 +0900
@@ -43,6 +43,7 @@
 #include <sys/param.h>
 #include <netinet/in.h>
 #include <ifaddrs.h>
+#include <byteswap.h>
 
 #include <ofi_osd.h>
 #include <ofi_list.h>
--- origsrc/libfabric-1.11.1/include/ofi_osd.h	2020-10-10 03:33:11.000000000 +0900
+++ src/libfabric-1.11.1/include/ofi_osd.h	2020-11-23 16:11:58.122548600 +0900
@@ -64,6 +64,8 @@ typedef long double long_double;
 #include <unix/osd.h>
 #elif defined _WIN32
 #include <windows/osd.h>
+#elif defined(__CYGWIN__)
+#include <unix/osd.h>
 #else
 #include <linux/osd.h>
 #include <unix/osd.h>
--- origsrc/libfabric-1.11.1/prov/sockets/include/sock_util.h	2020-10-10 03:33:11.000000000 +0900
+++ src/libfabric-1.11.1/prov/sockets/include/sock_util.h	2020-11-23 16:35:04.568424800 +0900
@@ -78,7 +78,7 @@ static inline void *sock_mremap(void *ol
 {
 #ifdef __APPLE__
 	return (void *) -1;
-#elif defined __FreeBSD__
+#elif defined __FreeBSD__ || defined(__CYGWIN__)
 	return (void *) -1;
 #else
 	return mremap(old_address, old_size, new_size, 0);
--- origsrc/libfabric-1.11.1/src/unix/osd.c	2020-10-10 03:33:11.000000000 +0900
+++ src/libfabric-1.11.1/src/unix/osd.c	2020-11-23 17:58:18.851722700 +0900
@@ -58,7 +58,7 @@
 
 #ifdef __FreeBSD__
 typedef cpuset_t ofi_cpu_set_t;
-#elif defined __linux__
+#elif defined __linux__ || defined(__CYGWIN__)
 typedef cpu_set_t ofi_cpu_set_t;
 #endif
 
@@ -280,3 +280,35 @@ int ofi_set_thread_affinity(const char *
 	return -FI_ENOSYS;
 #endif
 }
+
+#if defined(__CYGWIN__)
+ssize_t ofi_get_hugepage_size(void)
+{
+	return -FI_ENOSYS;
+}
+
+int ofi_alloc_hugepage_buf(void **memptr, size_t size)
+{
+	return -FI_ENOSYS;
+}
+
+int ofi_free_hugepage_buf(void *memptr, size_t size)
+{
+	return -FI_ENOSYS;
+}
+
+size_t ofi_ifaddr_get_speed(struct ifaddrs *ifa)
+{
+	return 0;
+}
+
+size_t ofi_process_vm_writev(pid_t pid,
+			 const struct iovec *local_iov,
+			 unsigned long liovcnt,
+			 const struct iovec *remote_iov,
+			 unsigned long riovcnt,
+			 unsigned long flags)
+{
+	return -FI_ENOSYS;
+}
+#endif
