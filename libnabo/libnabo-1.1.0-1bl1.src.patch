--- origsrc/libnabo-1.1.0/CMakeLists.txt	2024-02-01 07:23:09.000000000 +0900
+++ src/libnabo-1.1.0/CMakeLists.txt	2024-02-15 14:33:05.547372500 +0900
@@ -234,7 +234,7 @@ add_library(${PROJECT_NAME}::${LIB_NAME}
 # just go into 'cmake'.
 install(
 	EXPORT ${PROJECT_NAME}-targets
-	DESTINATION share/${PROJECT_NAME}/cmake
+	DESTINATION lib/cmake/${PROJECT_NAME}
 	NAMESPACE ${PROJECT_NAME}::
 )
 
@@ -254,7 +254,7 @@ get_property(libnabo_include_dirs DIRECT
 # Configure & generate config file for local build tree
 configure_package_config_file(libnaboConfig.cmake.in
 	"${PROJECT_BINARY_DIR}/libnaboConfig.cmake"
-  		INSTALL_DESTINATION share/libnabo/cmake
+  		INSTALL_DESTINATION lib/cmake/libnabo
 		PATH_VARS PROJECT_NAME
 		)
 
@@ -269,7 +269,7 @@ set(libnabo_include_dirs ${CMAKE_INSTALL
 # We put the generated file for installation in a different repository (i.e., ./CMakeFiles/)
 configure_package_config_file(libnaboConfig.cmake.in
 	"${PROJECT_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/libnaboConfig.cmake"
-  		INSTALL_DESTINATION share/libnabo/cmake
+  		INSTALL_DESTINATION lib/cmake/libnabo
 		PATH_VARS PROJECT_NAME
 		)
 
@@ -280,7 +280,7 @@ write_basic_package_version_file(libnabo
 install(FILES
 	"${PROJECT_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/libnaboConfig.cmake"
 	"${PROJECT_BINARY_DIR}/libnaboConfigVersion.cmake"
-	DESTINATION share/libnabo/cmake COMPONENT dev)
+	DESTINATION lib/cmake/libnabo COMPONENT dev)
 
 
 #=============================================
@@ -295,3 +295,10 @@ if (NOT TARGET uninstall)
   add_custom_target(uninstall
 	  COMMAND ${CMAKE_COMMAND} -P ${CMAKE_CURRENT_BINARY_DIR}/cmake_uninstall.cmake)
 endif()
+
+set(prefix ${CMAKE_INSTALL_PREFIX})
+set(exec_prefix ${CMAKE_INSTALL_PREFIX})
+set(libdir ${CMAKE_INSTALL_PREFIX}/lib)
+set(includedir ${CMAKE_INSTALL_PREFIX}/include)
+configure_file(${CMAKE_SOURCE_DIR}/libnabo.pc.in ${CMAKE_BINARY_DIR}/libnabo.pc @ONLY)
+install(FILES ${CMAKE_BINARY_DIR}/libnabo.pc DESTINATION ${CMAKE_INSTALL_PREFIX}/lib/pkgconfig)
--- origsrc/libnabo-1.1.0/libnabo.pc.in	1970-01-01 09:00:00.000000000 +0900
+++ src/libnabo-1.1.0/libnabo.pc.in	2024-02-15 14:33:43.894650600 +0900
@@ -0,0 +1,10 @@
+prefix=@prefix@
+exec_prefix=@exec_prefix@
+libdir=@libdir@
+includedir=@includedir@
+
+Name: libnabo
+Description: Fast K Nearset Neighbor library for low-dimensional spaces
+Version: @PROJECT_VERSION@
+Libs: -L${libdir} -lnabo
+Cflags: -I${includedir}
--- origsrc/libnabo-1.1.0/nabo/nabo.h	2024-02-01 07:23:09.000000000 +0900
+++ src/libnabo-1.1.0/nabo/nabo.h	2024-02-15 09:59:12.870918400 +0900
@@ -208,9 +208,9 @@ namespace Nabo
 	//@{
 	
 	//! version of the Nabo library as string
-	#define NABO_VERSION "1.0.7"
+	#define NABO_VERSION "1.1.0"
 	//! version of the Nabo library as an int
-	#define NABO_VERSION_INT 10007
+	#define NABO_VERSION_INT 10100
 
 	// TODO (c++14) Convert invalidIndex, invalidValue to constexpr templated variables.
 	template <typename IndexType>
--- origsrc/libnabo-1.1.0/python/CMakeLists.txt	2024-02-01 07:23:09.000000000 +0900
+++ src/libnabo-1.1.0/python/CMakeLists.txt	2024-02-15 11:26:57.377037800 +0900
@@ -64,7 +64,7 @@ if (PYTHONLIBS_FOUND AND PYTHONINTERP_FO
 		# fix for old python_add_module
 		set_target_properties(pynabo PROPERTIES PREFIX "")
 		if (PYTHON_CUSTOM_TARGET)
-			install(TARGETS pynabo LIBRARY DESTINATION ${PYTHON_CUSTOM_TARGET})
+			install(TARGETS pynabo RUNTIME DESTINATION ${PYTHON_CUSTOM_TARGET})
 		else (PYTHON_CUSTOM_TARGET)
 			if (PYTHON_DEB_INSTALL_TARGET)
 				set(PYTHON_COMMAND "import sys; print('/usr/lib/python'+str(sys.version_info[0])+'.'+str(sys.version_info[1])+'/dist-packages')")
