--- origsrc/splitcode-0.28.6/CMakeLists.txt	2023-09-07 22:49:46.000000000 +0900
+++ src/splitcode-0.28.6/CMakeLists.txt	2023-11-21 12:32:34.903268400 +0900
@@ -40,18 +40,3 @@ if (BUILD_FUNCTESTING)
     DEPENDS ./src/splitcode
     )
 endif(BUILD_FUNCTESTING)
-
-include(ExternalProject)
-
-if (ZLIBNG)
-    message("zlib-ng enabled.")
-    ExternalProject_Add(zlib-ng
-    PREFIX ${PROJECT_SOURCE_DIR}/ext/zlib-ng
-    SOURCE_DIR ${PROJECT_SOURCE_DIR}/ext/zlib-ng
-    BUILD_IN_SOURCE 1
-    CONFIGURE_COMMAND mkdir -p build && cd build && cmake .. -DCMAKE_INSTALL_PREFIX=${PREFIX}
-    BUILD_COMMAND cd build && make
-    INSTALL_COMMAND ""
-    )
-endif(ZLIBNG)
-
--- origsrc/splitcode-0.28.6/src/CMakeLists.txt	2023-09-07 22:49:46.000000000 +0900
+++ src/splitcode-0.28.6/src/CMakeLists.txt	2023-11-21 13:27:17.054016700 +0900
@@ -23,27 +23,20 @@ if(LINK MATCHES static)
     SET_TARGET_PROPERTIES(splitcode splitcode_core PROPERTIES LINK_SEARCH_END_STATIC 1)
 endif(LINK MATCHES static)
 
-if (NOT ZLIBNG)
-find_package( ZLIB REQUIRED )
-
+find_package(pkgconfig)
+pkg_check_modules(ZLIB zlib-ng)
+if (ZLIB_FOUND)
+    add_definitions(-DSPLITCODE_USE_ZLIB_NG)
+endif()
+if (NOT ZLIB_FOUND)
+    find_package( ZLIB REQUIRED )
+endif()
 if ( ZLIB_FOUND )
     include_directories( ${ZLIB_INCLUDE_DIRS} )
     target_link_libraries(splitcode splitcode_core ${ZLIB_LIBRARIES})
 else()
     message(FATAL_ERROR "zlib not found. Required for reading FASTQ files" )
 endif( ZLIB_FOUND )
-endif(NOT ZLIBNG)
-
-if (ZLIBNG)
-    add_definitions(-DSPLITCODE_USE_ZLIB_NG)
-    include_directories(../ext/zlib-ng/build)
-    include_directories(../ext/zlib-ng)
-    if(WIN32)
-    target_link_libraries(splitcode ${CMAKE_CURRENT_SOURCE_DIR}/../ext/zlib-ng/build/libz-ng.lib)
-    else()
-    target_link_libraries(splitcode ${CMAKE_CURRENT_SOURCE_DIR}/../ext/zlib-ng/build/libz-ng.a)
-    endif(WIN32)
-endif(ZLIBNG)
 
 if(LINK MATCHES static)
     if (UNIX AND NOT APPLE)
