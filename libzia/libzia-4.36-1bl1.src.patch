--- origsrc/libzia-4.36/bin/Makefile.am	2016-09-03 04:08:10.000000000 +0900
+++ src/libzia-4.36/bin/Makefile.am	2022-07-15 16:04:02.459667400 +0900
@@ -5,4 +5,4 @@ EXTRA_DIST = $(bin_SCRIPTS) zia-config.i
 datarootdir = @datarootdir@
 
 svnversion$(EXEEXT):
-	(cd ..; /bin/sh svnver.sh)
+	(cd ${top_srcdir}; /bin/sh svnver.sh)
--- origsrc/libzia-4.36/bin/zia-config.in	2021-02-26 16:31:59.000000000 +0900
+++ src/libzia-4.36/bin/zia-config.in	2022-07-15 16:32:36.315397100 +0900
@@ -95,7 +95,7 @@ while test $# -gt 0; do
       echo "$cflags"
       ;;
     --libs)
-      echo "$libs -L$prefix/lib -lzia-@VERSION@ -lutil"
+      echo "$libs -L$prefix/lib -lzia -lutil"
       ;;
     --libs2)
       echo "$libs"
--- origsrc/libzia-4.36/configure.ac	2022-04-30 03:49:34.000000000 +0900
+++ src/libzia-4.36/configure.ac	2022-07-15 16:06:55.742220500 +0900
@@ -14,6 +14,8 @@ fi
 LT_INIT([dlopen])
 AC_CONFIG_MACRO_DIR([m4])
 
+AM_ICONV
+
 dnl Determine default prefix
 test x$prefix = "xNONE" && prefix="$ac_default_prefix"
                                         
@@ -36,6 +38,9 @@ case "$host_os" in
 mingw*)
     PLATFORM="mingw"
     ;;
+cygwin*)
+    PLATFORM="cygwin"
+    ;;
 *)    
     PLATFORM=$(uname -s | sed 'y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/')
     if test $? != 0 ; then 
@@ -84,7 +89,10 @@ AM_CONDITIONAL([USE_WLMAP], [test "$app_
 
 dnl Check for system header files
 AC_HEADER_STDC
-AC_CHECK_HEADERS(arpa/inet.h bfd.h cygwin/in.h ctype.h dbghelp.h dirent.h dlfcn.h errno.h execinfo.h fcntl.h getopt.h ifaddrs.h linux/i2c-dev.h linux/input.h linux/spi/spidev.h math.h netdb.h netinet/in.h psapi.h pty.h shlobj.h signal.h stdarg.h stdio.h string.h sys/ioctl.h sys/prctl.h sys/select.h sys/socket.h sys/time.h sys/types.h sys/wait.h termios.h time.h unistd.h win32api/ws2tcpip.h windows.h winsock2.h ws2tcpip.h)
+AC_CHECK_HEADERS(arpa/inet.h bfd.h cygwin/in.h ctype.h dirent.h dlfcn.h errno.h execinfo.h fcntl.h getopt.h ifaddrs.h linux/i2c-dev.h linux/input.h linux/spi/spidev.h math.h netdb.h netinet/in.h pty.h shlobj.h signal.h stdarg.h stdio.h string.h sys/ioctl.h sys/prctl.h sys/select.h sys/socket.h sys/time.h sys/types.h sys/wait.h termios.h time.h unistd.h)
+if test "$host_os" != "cygwin"; then
+    AC_CHECK_HEADERS(dbghelp.h psapi.h win32api/ws2tcpip.h windows.h winsock2.h ws2tcpip.h)
+fi
 AC_CHECK_HEADERS([linux/wireless.h], [], [], [
    #include <sys/types.h>
    #include <sys/socket.h>
@@ -527,5 +535,5 @@ echo ";") > src/settings.c
 
 cat config.h |grep '^#define' | sed 's/#define \(.*\)/#define Z_\1/' > include/unix/zconfig.h
 
-chmod +x svnver.sh bin/zia-config
+chmod +x ${srcdir}/svnver.sh bin/zia-config
 
--- origsrc/libzia-4.36/include/libziaint.h	2020-09-06 03:42:37.000000000 +0900
+++ src/libzia-4.36/include/libziaint.h	2022-07-15 16:08:02.539141800 +0900
@@ -56,7 +56,9 @@ msvc10 (vs2010):         WIN32 _MSC_VER=
 #elif defined(__CYGWIN__)
 #define Z_CYGWIN
 #define Z_PLATFORM "cygwin"
+#if !defined(Z_MACHINE)
 #define Z_MACHINE "win32"
+#endif
 #elif defined(ANDROID)
 #define Z_ANDROID
 #define Z_PLATFORM "android"
--- origsrc/libzia-4.36/include/zfiledlg.h	2013-03-28 22:45:54.000000000 +0900
+++ src/libzia-4.36/include/zfiledlg.h	2022-07-15 16:08:25.086714800 +0900
@@ -35,7 +35,7 @@ struct zfiledlg{
     void *arg;
     char *last_dir;
     struct zselect *zsel;
-#ifdef Z_MSC_MINGW_CYGWIN
+#ifdef Z_MSC_MINGW
 	OPENFILENAME ofn;
 #elif defined(Z_HAVE_DLFCN_H)
     GPtrArray *memlist;
--- origsrc/libzia-4.36/src/Makefile.am	2022-04-11 04:33:32.000000000 +0900
+++ src/libzia-4.36/src/Makefile.am	2022-07-15 16:09:49.572024000 +0900
@@ -1,8 +1,11 @@
 datarootdir = @datarootdir@
 
 bindir=$(exec_prefix)/lib/$(DEB_HOST_MULTIARCH)/libzia
+
+bin_PROGRAMS = map2d
+
 if USE_WLMAP
-bin_PROGRAMS = libzia-@VERSION@.so.d #zsdltest gpiotest
+bin_PROGRAMS += libzia-@VERSION@.so.d #zsdltest gpiotest
 endif
 
 lib_LTLIBRARIES = libzia.la
@@ -73,8 +76,9 @@ libzia_la_SOURCES = \
 	zver.c
 
 
-libzia_la_CFLAGS = $(Z_SVNVER) -I../include -I../include/unix 
-libzia_la_LDFLAGS = -release @VERSION@
+libzia_la_CFLAGS = $(Z_SVNVER) -I../include -I../include/unix -I$(top_srcdir)/include
+libzia_la_LDFLAGS = -no-undefined  -release @VERSION@
+libzia_la_LIBADD = $(LTLIBICONV) 
 library_includedir = $(includedir)/libzia
 
 #zsdltest_SOURCES = zsdltest.c
@@ -96,6 +100,3 @@ libzia_@VERSION@_so_d_SOURCES = map2d.c
 
 libzia-@VERSION@.so.d$(EXEEXT): libzia.la map2d
 	./map2d libzia.so.map libzia-@VERSION@.so.d
-
-map2d: map2d.c
-	$(CC) $(CPPFLAGS) $(CFLAGS) $(LDFLAGS) map2d.c -o $@
--- origsrc/libzia-4.36/src/zbfd.c	2020-07-05 01:42:11.000000000 +0900
+++ src/libzia-4.36/src/zbfd.c	2022-07-15 16:10:35.331427300 +0900
@@ -115,7 +115,7 @@ int z_backtrace(void **buffer, int size,
         STACKSTEP(20);STACKSTEP(21);STACKSTEP(22);STACKSTEP(24);STACKSTEP(25);
         STACKSTEP(26);STACKSTEP(27);STACKSTEP(28);STACKSTEP(29);STACKSTEP(30);
     }while(0);*/
-#else
+#elif !defined(__CYGWIN__)
     // Z_UNIX
     i = backtrace(buffer, size);
 
--- origsrc/libzia-4.36/src/zerror.c	2020-07-05 01:42:11.000000000 +0900
+++ src/libzia-4.36/src/zerror.c	2022-07-15 16:11:01.431104800 +0900
@@ -98,7 +98,7 @@ void z_strerror(GString *gs, int err){
 #endif
 }
 
-#ifdef Z_MSC_MINGW_CYGWIN
+#ifdef Z_MSC_MINGW
 void z_lasterror(GString *gs){
 	z_lasterror_e(gs, GetLastError());
 }
--- origsrc/libzia-4.36/src/zfiledlg.c	2022-03-28 03:16:32.000000000 +0900
+++ src/libzia-4.36/src/zfiledlg.c	2022-07-15 16:11:38.845107400 +0900
@@ -58,7 +58,7 @@ void zfiledlg_free(struct zfiledlg *dlg)
 
 
 int zfiledlg_open(struct zfiledlg *dlg, struct zselect *zsel, void (*fce)(void *, char *), void *arg, const char *filename, const char *ext){
-#ifdef Z_MSC_MINGW_CYGWIN
+#ifdef Z_MSC_MINGW
 	int i, l, t;
 	GString *gs;
 	char *c, *ext2;
@@ -148,13 +148,13 @@ int zfiledlg_open(struct zfiledlg *dlg,
 }
 
 static gpointer zfiledlg_thread_func(gpointer data){
-#ifdef Z_MSC_MINGW_CYGWIN
+#ifdef Z_MSC_MINGW
 	struct zfiledlg *dlg = (struct zfiledlg *)data;
 #endif
 
 	zg_thread_set_name("Libzia zfiledlg");
 
-#ifdef Z_MSC_MINGW_CYGWIN
+#ifdef Z_MSC_MINGW
 
     if (!GetOpenFileName(&dlg->ofn)){
 		zselect_msg_send(dlg->zsel, "ZFILEDLG;0x%lx;X;%d", (unsigned long)GPOINTER_TO_SIZE(dlg), CommDlgExtendedError());
--- origsrc/libzia-4.36/src/zi2c.c	2022-03-24 04:57:30.000000000 +0900
+++ src/libzia-4.36/src/zi2c.c	2022-07-15 16:12:32.427476500 +0900
@@ -29,8 +29,7 @@
 #endif
 
 
-#ifdef Z_HAVE_LINUX_I2C_DEV_H
-
+#if defined(Z_HAVE_LINUX_I2C_DEV_H) || defined(__CYGWIN__)
 
 int zi2c_write(struct zbusdev *dev, void *buf, size_t len){
     if (dev->fd < 0) return -1;
@@ -52,27 +51,27 @@ int zi2c_read(struct zbusdev *dev, void
         close(dev->fd);
         dev->fd = -1;
         return -1;
-    }
-    return ret;
-}
-
-#else
-
-int zi2c_write(struct zbusdev *dev, void *buf, size_t len) {
-    zinternal("zi2c_write not supported on this system");
-
-    return -1;
-}
-
-int zi2c_read(struct zbusdev *dev, void *buf, size_t len){
-    zinternal("zi2c_read not supported on this system");
-
-    return -1;
-}
-
-#endif
-
-struct zbusdev *zi2c_init(int busnr, int slave){
+    }
+    return ret;
+}
+
+#else
+
+int zi2c_write(struct zbusdev *dev, void *buf, size_t len) {
+    zinternal("zi2c_write not supported on this system");
+
+    return -1;
+}
+
+int zi2c_read(struct zbusdev *dev, void *buf, size_t len){
+    zinternal("zi2c_read not supported on this system");
+
+    return -1;
+}
+
+#endif
+
+struct zbusdev *zi2c_init(int busnr, int slave){
     struct zbusdev *dev = (struct zbusdev *)g_new0(struct zbusdev, 1);
     dev->busnr = busnr;
     dev->slave = slave;
--- origsrc/libzia-4.36/src/zselect.c	2022-04-26 18:06:00.000000000 +0900
+++ src/libzia-4.36/src/zselect.c	2022-07-15 16:13:21.251371500 +0900
@@ -611,7 +611,7 @@ void alarm_handler(void *arg, siginfo_t
 void check_for_select_race(void)
 {
     if (critical_section) {
-#ifdef SIGALRM
+#if defined(SIGALRM) && defined(Z_UNIX_ANDROID)
         zselect_signal_set(SIGALRM, alarm_handler, NULL, 1);
 #endif
         pending_alarm = 1;
