--- origsrc/synfig-1.5.3/cmake/SynfigFindGit.cmake	2024-08-23 12:39:47.000000000 +0900
+++ src/synfig-1.5.3/cmake/SynfigFindGit.cmake	2024-10-16 17:10:17.322876300 +0900
@@ -7,7 +7,7 @@ for future use.
 
 find_package(Git)
 
-if (GIT_FOUND)
+if (GIT_FOUND AND EXISTS "${CMAKE_SOURCE_DIR}/.git")
     execute_process(
         COMMAND ${GIT_EXECUTABLE} show -s --format=%ad --date=format:%Y-%m-%d HEAD
         WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}
--- origsrc/synfig-1.5.3/synfig-core/src/synfig/CMakeLists.txt	2024-08-23 12:39:47.000000000 +0900
+++ src/synfig-1.5.3/synfig-core/src/synfig/CMakeLists.txt	2024-10-17 00:02:54.707087700 +0900
@@ -5,7 +5,15 @@
 ## Main target: libsynfig
 ## TODO: optional static linking?
 add_library(libsynfig SHARED "")
-set_target_properties(libsynfig PROPERTIES PREFIX "")
+if (CYGWIN)
+    set_target_properties(libsynfig PROPERTIES OUTPUT_NAME "synfig")
+else()
+    set_target_properties(libsynfig PROPERTIES PREFIX "")
+endif()
+
+if (DEFINED SOVERSION)
+    set_target_properties(libsynfig PROPERTIES SOVERSION "${SOVERSION}")
+endif()
 
 add_definitions(-DVERSION="${STUDIO_VERSION_MAJOR}.${STUDIO_VERSION_MINOR}.${STUDIO_VERSION_PATCH}")
 
@@ -146,7 +154,7 @@ install(
 install(
     TARGETS libsynfig
     EXPORT libsynfig
-    LIBRARY DESTINATION lib
+    ARCHIVE DESTINATION lib
     RUNTIME DESTINATION bin
 )
 
--- origsrc/synfig-1.5.3/synfig-core/src/synfig/module.cpp	2024-08-23 12:39:47.000000000 +0900
+++ src/synfig-1.5.3/synfig-core/src/synfig/module.cpp	2024-10-16 17:13:31.789466100 +0900
@@ -143,7 +143,11 @@ synfig::Module::Register(const String &m
 
 	if(callback)callback->task(strprintf(_("Attempting to register \"%s\""),module_name.c_str()));
 
+#if defined(__CYGWIN__)
+	module=lt_dlopenext((std::string("cyg")+module_name).c_str());
+#else
 	module=lt_dlopenext((std::string("lib")+module_name).c_str());
+#endif
 	if(!module)module=lt_dlopenext(module_name.c_str());
 	Type::initialize_all();
 
--- origsrc/synfig-1.5.3/synfig-studio/src/gui/canvasview.cpp	2024-08-23 12:39:47.000000000 +0900
+++ src/synfig-1.5.3/synfig-studio/src/gui/canvasview.cpp	2024-10-16 22:35:24.336714300 +0900
@@ -107,7 +107,7 @@ using namespace studio;
 static Gtk::Image*
 create_image_from_icon(const std::string& icon_name, Gtk::IconSize icon_size)
 {
-#if GTK_CHECK_VERSION(3,24,0)
+#if GTK_CHECK_VERSION(3,24,0) && ((GTKMM_MAJOR_VERSION > 3) || (GTKMM_MAJOR_VERSION == 3) && (GTKMM_MINOR_VERSION >= 24))
 	return new Gtk::Image(icon_name, icon_size);
 #else
 	Gtk::Image* image = new Gtk::Image();
--- origsrc/synfig-1.5.3/synfig-studio/src/gui/docks/dockable.cpp	2024-08-23 12:39:47.000000000 +0900
+++ src/synfig-1.5.3/synfig-studio/src/gui/docks/dockable.cpp	2024-10-16 23:06:53.813381400 +0900
@@ -298,7 +298,7 @@ Dockable::create_tab_label()
 		// add icon
 		Gtk::IconSize iconsize = Gtk::IconSize::from_name("synfig-small_icon_16x16");
 
-#if GTK_CHECK_VERSION(3,24,0)
+#if GTK_CHECK_VERSION(3,24,0) && ((GTKMM_MAJOR_VERSION > 3) || (GTKMM_MAJOR_VERSION == 3) && (GTKMM_MINOR_VERSION >= 24))
 		Gtk::Image* icon(manage(new Gtk::Image(icon_name, iconsize)));
 #else
 		Gtk::Image* icon(manage(new Gtk::Image()));
--- origsrc/synfig-1.5.3/synfig-studio/src/gui/docks/dockbook.cpp	2024-08-23 12:39:47.000000000 +0900
+++ src/synfig-1.5.3/synfig-studio/src/gui/docks/dockbook.cpp	2024-10-16 23:04:57.116021100 +0900
@@ -63,7 +63,7 @@ using namespace studio;
 static Gtk::Image*
 create_image_from_icon(const std::string& icon_name, Gtk::IconSize icon_size)
 {
-#if GTK_CHECK_VERSION(3,24,0)
+#if GTK_CHECK_VERSION(3,24,0) && ((GTKMM_MAJOR_VERSION > 3) || (GTKMM_MAJOR_VERSION == 3) && (GTKMM_MINOR_VERSION >= 24))
 	return new Gtk::Image(icon_name, icon_size);
 #else
 	Gtk::Image* image = new Gtk::Image();
--- origsrc/synfig-1.5.3/synfig-studio/src/gui/instance.cpp	2024-08-23 12:39:47.000000000 +0900
+++ src/synfig-1.5.3/synfig-studio/src/gui/instance.cpp	2024-10-16 22:40:03.788097100 +0900
@@ -97,7 +97,7 @@ create_image_from_icon(const std::string
 	if (icon_name == "image-missing")
 		return new Gtk::Image();
 
-#if GTK_CHECK_VERSION(3,24,0)
+#if GTK_CHECK_VERSION(3,24,0) && ((GTKMM_MAJOR_VERSION > 3) || (GTKMM_MAJOR_VERSION == 3) && (GTKMM_MINOR_VERSION >= 24))
 	return new Gtk::Image(icon_name, icon_size);
 #else
 	Gtk::Image* image = new Gtk::Image();
--- origsrc/synfig-1.5.3/synfig-studio/src/gui/states/state_bline.cpp	2024-08-23 12:39:47.000000000 +0900
+++ src/synfig-1.5.3/synfig-studio/src/gui/states/state_bline.cpp	2024-10-16 23:14:13.169039400 +0900
@@ -288,7 +288,7 @@ public:
 static Gtk::Image*
 create_image_from_icon(const std::string& icon_name, Gtk::IconSize icon_size)
 {
-#if GTK_CHECK_VERSION(3,24,0)
+#if GTK_CHECK_VERSION(3,24,0) && ((GTKMM_MAJOR_VERSION > 3) || (GTKMM_MAJOR_VERSION == 3) && (GTKMM_MINOR_VERSION >= 24))
 	return new Gtk::Image(icon_name, icon_size);
 #else
 	Gtk::Image* image = new Gtk::Image();
--- origsrc/synfig-1.5.3/synfig-studio/src/synfigapp/CMakeLists.txt	2024-08-23 12:39:47.000000000 +0900
+++ src/synfig-1.5.3/synfig-studio/src/synfigapp/CMakeLists.txt	2024-10-16 23:47:01.925766900 +0900
@@ -24,11 +24,21 @@ target_link_libraries(synfigapp libsynfi
 include(actions/CMakeLists.txt)
 include(vectorizer/CMakeLists.txt)
 
+if (DEFINED SOVERSION)
+    set_target_properties(synfigapp PROPERTIES SOVERSION "${SOVERSION}")
+endif()
+
 if(WIN32)
     install(
         TARGETS synfigapp
         DESTINATION bin
     )
+elseif(CYGWIN)
+    install(
+        TARGETS synfigapp
+        RUNTIME DESTINATION bin
+        ARCHIVE DESTINATION lib
+    )
 else()
     install(
         TARGETS synfigapp
--- origsrc/synfig-1.5.3/synfig-studio/src/synfigapp/vectorizer/centerlinepolygonizer.cpp	2024-08-23 12:39:47.000000000 +0900
+++ src/synfig-1.5.3/synfig-studio/src/synfigapp/vectorizer/centerlinepolygonizer.cpp	2024-10-16 22:08:21.135861400 +0900
@@ -821,7 +821,7 @@ inline void reduceBorder(RawBorder &bord
     int k;
     for (k = b[j]; k >= 0 && longestArcFrom[k] >= a; --k) 
     {
-      penaltyToEnd[k] = infinity;
+      penaltyToEnd[k] = studio::infinity;
       for (int i = a; i <= longestArcFrom[k]; ++i) 
       {
         double newPenalty = penaltyToEnd[i] + penalty(border, k, i);
--- origsrc/synfig-1.5.3/synfig-studio/src/synfigapp/vectorizer/centerlineskeletonizer.cpp	2024-08-23 12:39:47.000000000 +0900
+++ src/synfig-1.5.3/synfig-studio/src/synfigapp/vectorizer/centerlineskeletonizer.cpp	2024-10-16 18:50:23.313110100 +0900
@@ -660,8 +660,8 @@ void Timeline::build(ContourFamily &poly
 
 // Calculates event generated by input node
 Event::Event(ContourNode *generator, VectorizationContext *context)
-    : m_height(infinity)
-    , m_displacement(infinity)
+    : m_height(studio::infinity)
+    , m_displacement(studio::infinity)
     , m_generator(generator)
     , m_type(failure)
     , m_algorithmicTime(context->m_algorithmicTime)
--- origsrc/synfig-1.5.3/synfig-studio/src/synfigapp/vectorizer/centerlinetostrokes.cpp	2024-08-23 12:39:47.000000000 +0900
+++ src/synfig-1.5.3/synfig-studio/src/synfigapp/vectorizer/centerlinetostrokes.cpp	2024-10-16 18:47:44.405982400 +0900
@@ -53,7 +53,7 @@ using namespace studio;
 /* === G L O B A L S ======================================================= */
 const double Polyg_eps_max = 1;     // Sequence simplification max error
 const double Polyg_eps_mul = 0.75;  // Sequence simple thickness-multiplier error
-const double Quad_eps_max =  infinity;  // As above, for sequence conversion into strokes
+const double Quad_eps_max =  studio::infinity;  // As above, for sequence conversion into strokes
 synfig::Point bottomleft(0,0);
 bool max_thickness_zero = false;
 synfig::Canvas::Handle canvas;
@@ -206,8 +206,8 @@ private:
 
     inline void infty(void) 
     {
-      n = infinity;
-      l = infinity;
+      n = studio::infinity;
+      l = studio::infinity;
     }
     inline bool operator<(Length sl) 
     {
@@ -371,8 +371,8 @@ public:
 
     inline void infty(void) 
     {
-      n = infinity;
-      l = infinity;
+      n = studio::infinity;
+      l = studio::infinity;
     }
 
     inline bool operator<(Length sl) 
@@ -504,7 +504,7 @@ synfig::Layer::Handle SequenceConverter:
       // NOTE: The following else may be taken out to perform a deeper
       // search for optimal result. However, it prevents quadratic complexities
       // on large-scale images.
-      else if (l_ji.n == infinity)
+      else if (l_ji.n == studio::infinity)
         break;  // Stops searching for current i
     }
     M[a] = L_min;
