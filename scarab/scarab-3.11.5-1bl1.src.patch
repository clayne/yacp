--- origsrc/scarab-3.11.5/CMakeLists.txt	2025-02-01 09:51:26.000000000 +0900
+++ src/scarab-3.11.5/CMakeLists.txt	2025-02-21 20:53:47.987503400 +0900
@@ -196,3 +196,9 @@ pbuilder_do_package_config(
     OUTPUT_FILE ScarabConfig.cmake
 )
 
+set(prefix ${CMAKE_INSTALL_PREFIX})
+set(exec_prefix ${CMAKE_INSTALL_PREFIX})
+set(libdir ${CMAKE_INSTALL_PREFIX}/lib)
+set(includedir ${CMAKE_INSTALL_PREFIX}/include)
+configure_file(${CMAKE_SOURCE_DIR}/scarab.pc.in ${CMAKE_BINARY_DIR}/scarab.pc @ONLY)
+install(FILES ${CMAKE_BINARY_DIR}/scarab.pc DESTINATION ${CMAKE_INSTALL_PREFIX}/lib/pkgconfig)
--- origsrc/scarab-3.11.5/cmake/PackageBuilderMacros.cmake	2025-02-01 09:51:26.000000000 +0900
+++ src/scarab-3.11.5/cmake/PackageBuilderMacros.cmake	2025-02-21 20:45:02.531798800 +0900
@@ -228,7 +228,9 @@ function( pbuilder_add_library )
             "$<INSTALL_INTERFACE:${TOP_PROJECT_INCLUDE_INSTALL_SUBDIR}${SM_INCLUDE_SUBDIR}>"
     )
 
-
+    if (DEFINED SOVERSION)
+        set_target_properties(${FULL_LIB_TARGET} PROPERTIES SOVERSION "${SOVERSION}")
+    endif()
 endfunction()
 
 function( pbuilder_link_library )
--- origsrc/scarab-3.11.5/library/utility/signal_handler.cc	2025-02-01 09:51:26.000000000 +0900
+++ src/scarab-3.11.5/library/utility/signal_handler.cc	2025-02-21 19:05:41.707632400 +0900
@@ -13,7 +13,9 @@
 #include "error.hh"
 #include "logger.hh"
 
+#if !defined(__CYGWIN__)
 #include <execinfo.h>
+#endif
 #include <stdexcept>
 #include <thread>
 
@@ -443,7 +445,7 @@ namespace scarab
     void signal_handler::print_stack_trace( bool a_use_logging )
     {
         // no mutex locking needed here
-#ifndef _WIN32 // stack trace printing not implemented for windows
+#if !defined(_WIN32) && !defined(__CYGWIN__) // stack trace printing not implemented for windows
         void* t_bt_array[50];
         int t_size = backtrace( t_bt_array, 50 );
 
--- origsrc/scarab-3.11.5/library/version/version_semantic.cc	2025-02-01 09:51:26.000000000 +0900
+++ src/scarab-3.11.5/library/version/version_semantic.cc	2025-02-21 19:47:26.574221200 +0900
@@ -20,7 +20,7 @@
 #include <mach-o/dyld.h> // for extracting the exe name
 #include <unistd.h> // for gethostname and getlogin_r
 #include <pwd.h> // for struct passwd
-#elif __linux
+#elif __linux || defined(__CYGWIN__)
 #include <unistd.h> // for readlink, gethostname and getlogin_r
 #include <pwd.h> // for struct passwd
 #endif
@@ -249,7 +249,7 @@ namespace scarab
         char t_exe_buf[ 2048 ];
         uint32_t t_exe_bufsize = sizeof( t_exe_buf );
         if( _NSGetExecutablePath( t_exe_buf, &t_exe_bufsize ) != 0 )
-#elif __linux
+#elif __linux || defined(__CYGWIN__)
         const size_t t_exe_bufsize = 2048;
         char t_exe_buf[ t_exe_bufsize ];
         ssize_t t_exe_name_len = readlink( "/proc/self/exe", t_exe_buf, t_exe_bufsize );
--- origsrc/scarab-3.11.5/scarab.pc.in	1970-01-01 09:00:00.000000000 +0900
+++ src/scarab-3.11.5/scarab.pc.in	2025-02-21 20:54:19.654877700 +0900
@@ -0,0 +1,10 @@
+prefix=@prefix@
+exec_prefix=@exec_prefix@
+libdir=@libdir@
+includedir=@includedir@
+
+Name: scarab
+Description: Variety of utilities primarily aimed at the C++ packages developed by the Project 8 collaboration
+Version: @PROJECT_VERSION@
+Libs: -L${libdir} -lScarab
+Cflags: -I${includedir}
--- origsrc/scarab-3.11.5/testing/CMakeLists.txt	2025-02-01 09:51:26.000000000 +0900
+++ src/scarab-3.11.5/testing/CMakeLists.txt	2025-02-21 20:01:54.768573000 +0900
@@ -4,8 +4,11 @@
 
 ##########
 
-# Install Catch2
+find_package(pkgconfig REQUIRED)
+pkg_check_modules(CATCH2 catch2)
 
+# Install Catch2
+if (NOT CATCH2_FOUND)
 include( FetchContent )
 
 FetchContent_Declare(
@@ -16,6 +19,8 @@ FetchContent_Declare(
 
 FetchContent_MakeAvailable( Catch2 )
 list( APPEND CMAKE_MODULE_PATH ${catch2_SOURCE_DIR}/extras )
+set(CATCH2_LIBRARIES Catch2::Catch2)
+endif()
 
 ##########
 
@@ -103,7 +108,7 @@ pbuilder_executable(
     EXECUTABLE run_tests
     SOURCES ${testing_SOURCES}
     PROJECT_LIBRARIES ${testing_LIB_DEPENDENCIES}
-    PRIVATE_EXTERNAL_LIBRARIES Catch2::Catch2
+    PRIVATE_EXTERNAL_LIBRARIES ${CATCH2_LIBRARIES}
 )
 
 ##########
@@ -129,12 +134,13 @@ list( APPEND programs "run_tests" )
 ##########
 
 # Installation
-
+if (NOT CATCH2_FOUND)
 pbuilder_component_install_and_export( 
     COMPONENT Catch2
     LIBTARGETS Catch2
     NAMESPACE Catch2::
 )
+endif()
 
 #message(STATUS "##### programs: ${programs}")
 pbuilder_component_install_and_export( 
