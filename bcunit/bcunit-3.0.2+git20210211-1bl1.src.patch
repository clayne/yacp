--- origsrc/bcunit/BCUnit/Sources/CMakeLists.txt	2021-09-17 08:33:51.000000000 +0900
+++ src/bcunit/BCUnit/Sources/CMakeLists.txt	2021-09-17 08:33:58.779915700 +0900
@@ -177,6 +177,9 @@ endif()
 if(ENABLE_SHARED)
 	add_library(bcunit SHARED ${SOURCE_FILES})
 	set_target_properties(bcunit PROPERTIES VERSION 1.0.1)
+	if(CYGWIN)
+		set_target_properties(bcunit PROPERTIES SOVERSION 0)
+	endif()
 	target_include_directories(bcunit PUBLIC
 		$<INSTALL_INTERFACE:include>
 		$<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/BCUnit/Headers/>
--- origsrc/bcunit/BCUnit/Sources/Curses/Curses.c	2021-09-17 08:33:51.000000000 +0900
+++ src/bcunit/BCUnit/Sources/Curses/Curses.c	2021-09-17 08:33:58.787906600 +0900
@@ -256,10 +256,10 @@ static bool initialize_windows(void)
 
   start_color();
 
-  f_nLeft = application_windows.pMainWin->_begx;
-  f_nTop = application_windows.pMainWin->_begy;
-  f_nWidth = application_windows.pMainWin->_maxx;
-  f_nHeight = application_windows.pMainWin->_maxy;
+  f_nLeft = getbegx(application_windows.pMainWin);
+  f_nTop = getbegy(application_windows.pMainWin);
+  f_nWidth = getmaxx(application_windows.pMainWin);
+  f_nHeight = getmaxy(application_windows.pMainWin);
 
   if (NULL == (application_windows.pTitleWin = newwin(3, f_nWidth, 0, 0))) {
     goto title_fail;
@@ -358,10 +358,10 @@ static void refresh_windows(void)
 {
   refresh();
 
-  f_nLeft = application_windows.pMainWin->_begx;
-  f_nTop = application_windows.pMainWin->_begy;
-  f_nWidth = application_windows.pMainWin->_maxx;
-  f_nHeight = application_windows.pMainWin->_maxy;
+  f_nLeft = getbegx(application_windows.pMainWin);
+  f_nTop = getbegy(application_windows.pMainWin);
+  f_nWidth = getmaxx(application_windows.pMainWin);
+  f_nHeight = getmaxy(application_windows.pMainWin);
 
   refresh_title_window();
   refresh_progress_window();
@@ -907,10 +907,10 @@ static bool create_pad(APPPAD* pPad, WIN
   pPad->uiColumns = uiCols;
   pPad->uiPadRow = 0;
   pPad->uiPadCol = 0;
-  pPad->uiWinLeft = application_windows.pDetailsWin->_begx + 1;
-  pPad->uiWinTop = application_windows.pDetailsWin->_begy + 1;
-  pPad->uiWinColumns = application_windows.pDetailsWin->_maxx - 2;
-  pPad->uiWinRows = application_windows.pDetailsWin->_maxy - 2;
+  pPad->uiWinLeft = getbegx(application_windows.pDetailsWin) + 1;
+  pPad->uiWinTop = getbegy(application_windows.pDetailsWin) + 1;
+  pPad->uiWinColumns = getmaxx(application_windows.pDetailsWin) - 2;
+  pPad->uiWinRows = getmaxy(application_windows.pDetailsWin) - 2;
 
   bStatus = true;
 
--- origsrc/bcunit/CMakeLists.txt	2021-09-17 08:33:51.000000000 +0900
+++ src/bcunit/CMakeLists.txt	2021-09-17 08:33:58.795915700 +0900
@@ -59,14 +59,6 @@ include(GNUInstallDirs)
 
 configure_file(${CMAKE_CURRENT_SOURCE_DIR}/config.h.cmake ${CMAKE_CURRENT_BINARY_DIR}/config.h)
 
-
-set(exec_prefix ${CMAKE_INSTALL_BINDIR})
-set(libdir ${CMAKE_INSTALL_LIBDIR})
-set(includedir ${CMAKE_INSTALL_INCLUDEDIR})
-configure_file(${CMAKE_CURRENT_SOURCE_DIR}/bcunit.pc.in ${CMAKE_CURRENT_BINARY_DIR}/bcunit.pc)
-install(FILES ${CMAKE_CURRENT_BINARY_DIR}/bcunit.pc DESTINATION ${CMAKE_INSTALL_LIBDIR}/pkgconfig)
-
-
 if(MSVC)
 	add_definitions("/W3")
 else()
@@ -82,6 +74,9 @@ endif()
 if(ENABLE_CURSES)
 	set(CURSES_NEED_NCURSES 1)
 	find_package(Curses)
+	if (CYGWIN AND NCURSES_FOUND)
+		set(PC_NCURSESW ncursesw)
+	endif()
 	if(NOT CURSES_FOUND)
 		message("Disabling curses as it has not been found!")
 		set(ENABLE_CURSES 0)
@@ -106,7 +101,11 @@ endif()
 
 
 include(CMakePackageConfigHelpers)
-set(CONFIG_PACKAGE_LOCATION "${CMAKE_INSTALL_DATADIR}/${PROJECT_NAME}/cmake")
+if (CYGWIN)
+	set(CONFIG_PACKAGE_LOCATION "${CMAKE_INSTALL_LIBDIR}/cmake/${PROJECT_NAME}")
+else()
+	set(CONFIG_PACKAGE_LOCATION "${CMAKE_INSTALL_DATADIR}/${PROJECT_NAME}/cmake")
+endif()
 write_basic_package_version_file(
 	"${CMAKE_CURRENT_BINARY_DIR}/BcUnitConfigVersion.cmake"
 	VERSION ${PACKAGE_VERSION}
@@ -131,3 +130,9 @@ install(FILES
 	"${CMAKE_CURRENT_BINARY_DIR}/BcUnitConfigVersion.cmake"
 	DESTINATION ${CONFIG_PACKAGE_LOCATION}
 )
+
+set(exec_prefix ${CMAKE_INSTALL_BINDIR})
+set(libdir ${CMAKE_INSTALL_LIBDIR})
+set(includedir ${CMAKE_INSTALL_INCLUDEDIR})
+configure_file(${CMAKE_CURRENT_SOURCE_DIR}/bcunit.pc.in ${CMAKE_CURRENT_BINARY_DIR}/bcunit.pc)
+install(FILES ${CMAKE_CURRENT_BINARY_DIR}/bcunit.pc DESTINATION ${CMAKE_INSTALL_LIBDIR}/pkgconfig)
--- origsrc/bcunit/bcunit.pc.in	2021-09-17 08:33:51.000000000 +0900
+++ src/bcunit/bcunit.pc.in	2021-09-17 08:33:58.799919100 +0900
@@ -5,6 +5,7 @@ includedir=@includedir@
 
 Name: BCUnit
 Description: C Unit Testing Framework
-Version: @VERSION@-@RELEASE@
+Version: @VERSION@.@RELEASE@
 Libs: -L${libdir} -lbcunit
 Cflags: -I${includedir}
+Requires: @PC_NCURSESW@
--- origsrc/bcunit/build/CMakeLists.txt	2021-09-17 08:33:51.000000000 +0900
+++ src/bcunit/build/CMakeLists.txt	2021-09-17 08:33:58.804910600 +0900
@@ -48,7 +48,7 @@ set(CPACK_SOURCE_IGNORE_FILES
 #set(CPACK_COMPONENT_DEVEL_DISPLAY_NAME ${PACKAGE}-devel)
 
 find_package(Git 1.7.10) # --count option of git rev-list is available only since (more or less) git 1.7.10
-if(GIT_EXECUTABLE)
+if(GIT_EXECUTABLE AND EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/../.git")
 	execute_process(
 		COMMAND ${GIT_EXECUTABLE} rev-list --count ${PROJECT_VERSION}..HEAD
 		OUTPUT_VARIABLE PROJECT_VERSION_BUILD
