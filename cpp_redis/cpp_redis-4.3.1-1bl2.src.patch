--- origsrc/cpp_redis-4.3.1/CMakeLists.txt	2018-02-01 15:32:34.000000000 +0900
+++ src/cpp_redis-4.3.1/CMakeLists.txt	2025-06-15 21:11:04.821441000 +0900
@@ -68,16 +68,14 @@ if(WIN32)
   add_definitions(-D_UNICODE)
   add_definitions(-DUNICODE)
   add_definitions(-DWIN32_LEAN_AND_MEAN)
-else()
-  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11 -W -Wall -Wextra -O3")
 endif(WIN32)
 
 
 ###
 # variables
 ###
-find_path(TACOPIE_INCLUDE_DIR tacopie/tacopie PATHS ${PROJECT_SOURCE_DIR}/tacopie/includes/)
-find_library(TACOPIE_LIBRARY tacopie)
+find_package(pkgconfig)
+pkg_check_modules(TACOPIE tacopie)
 set(CPP_REDIS_INCLUDES ${PROJECT_SOURCE_DIR}/includes)
 set(DEPS_INCLUDES ${PROJECT_SOURCE_DIR}/deps/include ${TACOPIE_INCLUDE_DIR})
 set(DEPS_LIBRARIES ${PROJECT_SOURCE_DIR}/deps/lib)
@@ -139,6 +137,10 @@ configure_file("cpp_redis.pc.in" "${CMAK
 add_library(${PROJECT} ${SOURCES})
 set_property(TARGET ${PROJECT} PROPERTY POSITION_INDEPENDENT_CODE ON)
 
+if (DEFINED SOVERSION)
+  set_target_properties(${PROJECT} PROPERTIES SOVERSION "${SOVERSION}")
+endif()
+
 if(WIN32)
   set_target_properties(${PROJECT}
                         PROPERTIES COMPILE_PDB_NAME ${PROJECT}
@@ -184,7 +186,7 @@ install(DIRECTORY DESTINATION ${CMAKE_RU
 install(DIRECTORY ${CMAKE_LIBRARY_OUTPUT_DIRECTORY}/ DESTINATION lib USE_SOURCE_PERMISSIONS)
 install(DIRECTORY ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/ DESTINATION bin USE_SOURCE_PERMISSIONS)
 install(DIRECTORY ${CPP_REDIS_INCLUDES}/ DESTINATION include USE_SOURCE_PERMISSIONS)
-
+install(FILES ${CMAKE_PKGCONFIG_OUTPUT_DIRECTORY}/cpp_redis.pc DESTINATION lib/pkgconfig)
 
 ###
 # examples
@@ -201,9 +203,12 @@ endif(BUILD_EXAMPLES)
 if(BUILD_TESTS)
   enable_testing()
   add_subdirectory(tests)
-  ExternalProject_Add("googletest"
-                      GIT_REPOSITORY "https://github.com/google/googletest.git"
-                      CMAKE_ARGS "-DCMAKE_INSTALL_PREFIX=${PROJECT_SOURCE_DIR}/deps")
+  find_package(gtest)
+  if (NOT GTEST_FOUND)
+    ExternalProject_Add("googletest"
+                        GIT_REPOSITORY "https://github.com/google/googletest.git"
+                        CMAKE_ARGS "-DCMAKE_INSTALL_PREFIX=${PROJECT_SOURCE_DIR}/deps")
+  endif()
   # Reset variable to false to ensure tacopie does no build tests
   set(BUILD_TESTS false)
 endif(BUILD_TESTS)
@@ -212,6 +217,6 @@ endif(BUILD_TESTS)
 ###
 # tacopie
 ###
-if(NOT TACOPIE_LIBRARY AND NOT USE_CUSTOM_TCP_CLIENT)
+if(NOT TACOPIE_FOUND AND NOT TACOPIE_LIBRARY AND NOT USE_CUSTOM_TCP_CLIENT)
   add_subdirectory(tacopie)
-endif(NOT TACOPIE_LIBRARY AND NOT USE_CUSTOM_TCP_CLIENT)
+endif(NOT TACOPIE_FOUND AND NOT TACOPIE_LIBRARY AND NOT USE_CUSTOM_TCP_CLIENT)
--- origsrc/cpp_redis-4.3.1/cpp_redis.pc.in	2018-02-01 15:32:34.000000000 +0900
+++ src/cpp_redis-4.3.1/cpp_redis.pc.in	2025-06-15 21:12:02.089731500 +0900
@@ -4,6 +4,6 @@ includedir=${prefix}/include
 
 Name: @PROJECT_NAME@
 Description: C++11 Lightweight Redis client: async, thread-safe, no dependency, pipelining, multi-platform.
-Version: @PROJECT_VERSION@
+Version: @VERSION@
 Libs: -L${libdir} -lcpp_redis
 Cflags: -I${includedir}
--- origsrc/cpp_redis-4.3.1/examples/CMakeLists.txt	2018-02-01 15:32:34.000000000 +0900
+++ src/cpp_redis-4.3.1/examples/CMakeLists.txt	2025-06-15 20:30:11.644063900 +0900
@@ -21,14 +21,6 @@
 # SOFTWARE.
 
 ###
-# compilation options
-###
-if(NOT WIN32)
-  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
-endif(NOT WIN32)
-
-
-###
 # includes
 ###
 include_directories(${CPP_REDIS_INCLUDES})
--- origsrc/cpp_redis-4.3.1/sources/core/client.cpp	2018-02-01 15:32:34.000000000 +0900
+++ src/cpp_redis-4.3.1/sources/core/client.cpp	2025-06-15 20:59:17.187038500 +0900
@@ -24,6 +24,8 @@
 #include <cpp_redis/misc/error.hpp>
 #include <cpp_redis/misc/macro.hpp>
 
+#include <thread>
+
 namespace cpp_redis {
 
 #ifndef __CPP_REDIS_USE_CUSTOM_TCP_CLIENT
--- origsrc/cpp_redis-4.3.1/tests/CMakeLists.txt	2018-02-01 15:32:34.000000000 +0900
+++ src/cpp_redis-4.3.1/tests/CMakeLists.txt	2025-06-15 20:30:20.570181200 +0900
@@ -28,14 +28,6 @@ project(${PROJECT} CXX)
 
 
 ###
-# compilation options
-###
-if(NOT WIN32)
-  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
-endif(NOT WIN32)
-
-
-###
 # includes
 ###
 include_directories(${DEPS_INCLUDES} ${CPP_REDIS_INCLUDES})
