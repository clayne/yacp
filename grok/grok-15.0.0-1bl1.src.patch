--- origsrc/grok/src/bin/codec/CMakeLists.txt	2025-06-08 10:01:30.000000000 +0900
+++ src/grok/src/bin/codec/CMakeLists.txt	2025-06-08 10:02:11.159009800 +0900
@@ -7,7 +7,7 @@ include_directories(
 foreach(exe grk_decompress grk_compress grk_dump)
   add_executable(${exe} ${exe}.cpp)
   target_compile_options(${exe} PRIVATE ${GROK_COMPILE_OPTIONS})
-  if (CMAKE_CXX_COMPILER_ID MATCHES "GNU")
+  if (CMAKE_CXX_COMPILER_ID MATCHES "GNU" AND NOT CYGWIN)
 	target_link_options(${exe}  PUBLIC "LINKER:-z,now")
   endif()
 
--- origsrc/grok/src/lib/codec/CMakeLists.txt	2025-06-08 10:01:31.000000000 +0900
+++ src/grok/src/lib/codec/CMakeLists.txt	2025-06-08 10:49:49.924867700 +0900
@@ -6,6 +6,9 @@ IF(BUILD_SHARED_LIBS)
 ENDIF()
 ENDIF(UNIX)
 
+find_package(pkgconfig)
+pkg_check_modules(SPDLOG spdlog)
+
 include_directories(
   ${PNG_INCLUDE_DIRNAME}
   ${TIFF_INCLUDE_DIRNAME}
@@ -48,18 +51,22 @@ set(GROK_CODEC_SRCS
   ${CMAKE_CURRENT_SOURCE_DIR}/common/common.h
   ${CMAKE_CURRENT_SOURCE_DIR}/common/grk_string.h
   ${CMAKE_CURRENT_SOURCE_DIR}/common/exif.cpp
-  ${CMAKE_CURRENT_SOURCE_DIR}/common/spdlog/spdlog.cpp
-  ${CMAKE_CURRENT_SOURCE_DIR}/common/spdlog/color_sinks.cpp
-  ${CMAKE_CURRENT_SOURCE_DIR}/common/spdlog/stdout_sinks.cpp
-  ${CMAKE_CURRENT_SOURCE_DIR}/common/spdlog/async.cpp
-  ${CMAKE_CURRENT_SOURCE_DIR}/common/spdlog/file_sinks.cpp
-  ${CMAKE_CURRENT_SOURCE_DIR}/common/spdlog/bundled_fmtlib_format.cpp
-  ${CMAKE_CURRENT_SOURCE_DIR}/common/spdlog/cfg.cpp  
   ${CMAKE_CURRENT_SOURCE_DIR}/jp2/GrkCompress.cpp
   ${CMAKE_CURRENT_SOURCE_DIR}/jp2/GrkDecompress.cpp
   ${CMAKE_CURRENT_SOURCE_DIR}/jp2/GrkDump.cpp
   ${CMAKE_CURRENT_SOURCE_DIR}/jp2/GrkCompareImages.cpp
 )
+if (NOT SPDLOG_FOUND)
+  list(APPEND GROK_CODEC_SRCS 
+    ${CMAKE_CURRENT_SOURCE_DIR}/common/spdlog/spdlog.cpp
+    ${CMAKE_CURRENT_SOURCE_DIR}/common/spdlog/color_sinks.cpp
+    ${CMAKE_CURRENT_SOURCE_DIR}/common/spdlog/stdout_sinks.cpp
+    ${CMAKE_CURRENT_SOURCE_DIR}/common/spdlog/async.cpp
+    ${CMAKE_CURRENT_SOURCE_DIR}/common/spdlog/file_sinks.cpp
+    ${CMAKE_CURRENT_SOURCE_DIR}/common/spdlog/bundled_fmtlib_format.cpp
+    ${CMAKE_CURRENT_SOURCE_DIR}/common/spdlog/cfg.cpp  
+  )
+endif()
 
 if(GROK_HAVE_LIBTIFF)
 	list(APPEND GROK_CODEC_SRCS image_format/TIFFFormat.cpp)
@@ -77,7 +84,9 @@ if(GROK_HAVE_URING)
 	list(APPEND GROK_CODEC_SRCS image_format/FileUringIO.cpp)
 endif()
 
-add_definitions(-DSPDLOG_COMPILED_LIB)
+if (NOT SPDLOG_FOUND)
+  add_definitions(-DSPDLOG_COMPILED_LIB)
+endif()
 
 add_library(${GROK_CODEC_NAME} ${GROK_CODEC_SRCS})
 set(INSTALL_LIBS ${GROK_CODEC_NAME})
@@ -92,7 +101,9 @@ endif()
 if(GROK_HAVE_LIBJPEG)
 target_link_libraries(${GROK_CODEC_NAME} PRIVATE ${JPEG_LIBNAME})
 endif()
-
+if (SPDLOG_FOUND)
+  target_link_libraries(${GROK_CODEC_NAME} PRIVATE ${SPDLOG_LIBRARIES})
+endif()
 
 if (PERLLIBS_FOUND)
    include_directories(${PERL_INCLUDE_PATH})
@@ -106,7 +117,7 @@ set_target_properties(${GROK_CODEC_NAME}
 target_compile_options(${GROK_CODEC_NAME} PRIVATE ${GROK_COMPILE_OPTIONS})
 
 # hardening
-if (CMAKE_CXX_COMPILER_ID MATCHES "GNU")
+if (CMAKE_CXX_COMPILER_ID MATCHES "GNU" AND NOT CYGWIN)
 	target_link_options(${GROK_CODEC_NAME} PRIVATE "LINKER:-z,now")
 endif()
 
--- origsrc/grok/src/lib/core/CMakeLists.txt	2025-06-08 10:01:31.000000000 +0900
+++ src/grok/src/lib/core/CMakeLists.txt	2025-06-08 11:52:52.940109400 +0900
@@ -132,18 +132,25 @@ set(GROK_LIBRARY_SRCS
   ${CMAKE_CURRENT_SOURCE_DIR}/t1/part1//Quantizer.cpp
 )
 
-add_definitions(-DSPDLOG_COMPILED_LIB)
+if (NOT SPDLOG_FOUND)
+  add_definitions(-DSPDLOG_COMPILED_LIB)
+endif()
 if (GRK_BUILD_PLUGIN_LOADER)
     add_definitions(-DGRK_BUILD_PLUGIN_LOADER)
 endif()
 
+find_package(pkgconfig)
+pkg_check_modules(HWY libhwy)
+
 set(HWY_ENABLE_EXAMPLES OFF CACHE BOOL "Enable HWY examples")
 set(HWY_ENABLE_CONTRIB OFF CACHE BOOL "Enable HWY contrib")
 set(HWY_ENABLE_INSTALL OFF CACHE BOOL "Enable HWY install")
 set(HWY_FORCE_STATIC_LIBS ON CACHE BOOL "Enable HWY force static libs")
 set(INSTALL_GTEST OFF CACHE BOOL "Install GTest")
 set(HWY_ENABLE_TESTS OFF CACHE BOOL "Disable tests")
-add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/highway EXCLUDE_FROM_ALL)
+if (NOT HWY_FOUND)
+  add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/highway EXCLUDE_FROM_ALL)
+endif()
 
 add_library(${GROK_CORE_NAME} ${GROK_LIBRARY_SRCS})
 set_target_properties(${GROK_CORE_NAME} PROPERTIES ${GROK_LIBRARY_PROPERTIES})
@@ -154,7 +161,7 @@ if (CMAKE_SYSTEM_NAME STREQUAL Emscripte
   target_compile_options(${exe} PUBLIC -matomics)
 endif()
 
-if (CMAKE_CXX_COMPILER_ID MATCHES "GNU")
+if (CMAKE_CXX_COMPILER_ID MATCHES "GNU" AND NOT CYGWIN)
   target_link_options(${GROK_CORE_NAME} PRIVATE "LINKER:-z,now")
 endif()
 
