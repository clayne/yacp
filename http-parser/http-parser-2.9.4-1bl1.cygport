HOMEPAGE="https://github.com/nodejs/${PN}"
SRC_URI="https://github.com/nodejs/${PN}/archive/refs/tags/v${PV}.tar.gz"
PATCH_URI="
	https://gitweb.gentoo.org/repo/gentoo.git/plain/net-libs/${PN}/files/${P}-non-x86-test.patch
"

CATEGORY="Libs"
SUMMARY="HTTP request/response parser for C"
DESCRIPTION="This is a parser for HTTP messages written in C. It parses both requests and
responses. The parser is designed to be used in performance HTTP applications.
It does not make any syscalls nor allocations, it does not buffer data, it can
be interrupted at anytime. Depending on your architecture, it only requires
about 40 bytes of data per message stream (in a web server that is per
connection)."

LICENSE="MIT"
LICENSE_SPDX="SPDX-License-Identifier: MIT"
LICENSE_URI="LICENSE-MIT"

CYGPORT_USE_UNSTABLE_API=1
src_patch_hook()
{
	cd ${origsrcdir}/${SRC_DIR}
        cat > meson.build << EOF
project('${PN}', 'c', version : '${PV}')
install_headers('http_parser.h')
foreach x : [['http_parser',        ['-DHTTP_PARSER_STRICT=0']],
             ['http_parser_strict', ['-DHTTP_PARSER_STRICT=1']]]
  lib = library(x.get(0), 'http_parser.c',
                c_args : x.get(1),
                version : '${PV}',
                install : true)
  test('test-@0@'.format(x.get(0)),
       executable('test-@0@'.format(x.get(0)), 'test.c',
                  c_args : x.get(1),
                  link_with : lib),
       timeout : 60)
endforeach
EOF
}

inherit meson

DOCS="
        LICENSE-MIT
"

PKG_NAMES="
        ${PN}
        libhttp_parser${PV[1]}
        libhttp_parser-devel
"
http_parser_CONTENTS="
        usr/share
"
libhttp_parser2_CONTENTS="
        usr/bin/cyg*-2.dll
"
libhttp_parser_devel_CONTENTS="
        usr/include
        usr/lib
"
http_parser_SUMMARY="${SUMMARY} (licensing & readmes)"
libhttp_parser2_SUMMARY="${SUMMARY} (runtime)"
libhttp_parser_devel_SUMMARY="${SUMMARY} (development)"
