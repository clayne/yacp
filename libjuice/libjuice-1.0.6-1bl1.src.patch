--- origsrc/libjuice-1.0.6/CMakeLists.txt	2022-10-12 07:45:59.000000000 +0900
+++ src/libjuice-1.0.6/CMakeLists.txt	2022-11-21 12:48:03.816402400 +0900
@@ -1,6 +1,6 @@
 cmake_minimum_required (VERSION 3.7)
 project (libjuice
-	VERSION 1.0.5
+	VERSION 1.0.6
 	LANGUAGES C)
 set(PROJECT_DESCRIPTION "UDP Interactive Connectivity Establishment (ICE) library")
 
@@ -96,52 +96,70 @@ target_include_directories(juice PRIVATE
 target_compile_definitions(juice PRIVATE $<$<CONFIG:Release>:RELEASE=1>)
 target_link_libraries(juice PRIVATE Threads::Threads)
 
-add_library(juice-static STATIC EXCLUDE_FROM_ALL ${LIBJUICE_SOURCES})
-set_target_properties(juice-static PROPERTIES VERSION ${PROJECT_VERSION})
-target_include_directories(juice-static PUBLIC
-    $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
-    $<INSTALL_INTERFACE:include>)
-target_include_directories(juice-static PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/include/juice)
-target_include_directories(juice-static PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/src)
-target_compile_definitions(juice-static PRIVATE $<$<CONFIG:Release>:RELEASE=1>)
-target_link_libraries(juice-static PRIVATE Threads::Threads)
+if (DEFINED SOVERSION)
+	set_target_properties(juice PROPERTIES SOVERSION "${SOVERSION}")
+endif()
+
+if (BUILD_STATIC_LIBS)
+	add_library(juice-static STATIC EXCLUDE_FROM_ALL ${LIBJUICE_SOURCES})
+	set_target_properties(juice-static PROPERTIES VERSION ${PROJECT_VERSION})
+	target_include_directories(juice-static PUBLIC
+		$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
+		$<INSTALL_INTERFACE:include>)
+	target_include_directories(juice-static PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/include/juice)
+	target_include_directories(juice-static PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/src)
+	target_compile_definitions(juice-static PRIVATE $<$<CONFIG:Release>:RELEASE=1>)
+	target_link_libraries(juice-static PRIVATE Threads::Threads)
+endif()
 
 if(WIN32)
 	target_link_libraries(juice PRIVATE
 		ws2_32 # winsock2
 		bcrypt)
-	target_link_libraries(juice-static PRIVATE
-		ws2_32 # winsock2
-		bcrypt)
+	if (BUILS_STATIC_LIBS)
+		target_link_libraries(juice-static PRIVATE
+			ws2_32 # winsock2
+			bcrypt)
+	endif()
 endif()
 
 if (USE_NETTLE)
 	find_package(Nettle REQUIRED)
     target_compile_definitions(juice PRIVATE USE_NETTLE=1)
     target_link_libraries(juice PRIVATE Nettle::Nettle)
-    target_compile_definitions(juice-static PRIVATE USE_NETTLE=1)
-    target_link_libraries(juice-static PRIVATE Nettle::Nettle)
+	if (BUILD_STATIC_LIBS)
+		target_compile_definitions(juice-static PRIVATE USE_NETTLE=1)
+		target_link_libraries(juice-static PRIVATE Nettle::Nettle)
+	endif()
 else()
     target_compile_definitions(juice PRIVATE USE_NETTLE=0)
-    target_compile_definitions(juice-static PRIVATE USE_NETTLE=0)
+	if (BUILD_STATIC_LIBS)
+	    target_compile_definitions(juice-static PRIVATE USE_NETTLE=0)
+	endif()
 endif()
 
 if (NO_SERVER)
 	target_compile_definitions(juice PRIVATE NO_SERVER)
-	target_compile_definitions(juice-static PRIVATE NO_SERVER)
+	if (BUILD_STATIC_LIBS)
+		target_compile_definitions(juice-static PRIVATE NO_SERVER)
+	endif()
 endif()
 
 if(APPLE)
 	# This seems to be necessary on MacOS
 	target_include_directories(juice PRIVATE /usr/local/include)
-	target_include_directories(juice-static PRIVATE /usr/local/include)
+	if (BUILD_STATIC_LIBS)
+		target_include_directories(juice-static PRIVATE /usr/local/include)
+	endif()
 endif()
 
 set_target_properties(juice PROPERTIES EXPORT_NAME LibJuice)
 add_library(LibJuice::LibJuice ALIAS juice)
 
-set_target_properties(juice-static PROPERTIES EXPORT_NAME LibJuiceStatic)
-add_library(LibJuice::LibJuiceStatic ALIAS juice-static)
+if (BUILD_STATIC_LIBS)
+	set_target_properties(juice-static PROPERTIES EXPORT_NAME LibJuiceStatic)
+	add_library(LibJuice::LibJuiceStatic ALIAS juice-static)
+endif()
 
 install(TARGETS juice EXPORT LibJuiceTargets
 	RUNTIME DESTINATION bin
@@ -184,16 +202,22 @@ endif()
 
 if(NOT MSVC)
 	target_compile_options(juice PRIVATE -Wall -Wextra)
-	target_compile_options(juice-static PRIVATE -Wall -Wextra)
+	if (BUILD_STATIC_LIBS)
+		target_compile_options(juice-static PRIVATE -Wall -Wextra)
+	endif()
 endif()
 
 if(WARNINGS_AS_ERRORS)
 	if(MSVC)
 		target_compile_options(juice PRIVATE /WX)
-		target_compile_options(juice-static PRIVATE /WX)
+		if (BUILD_STATIC_LIBS)
+			target_compile_options(juice-static PRIVATE /WX)
+		endif()
 	else()
 		target_compile_options(juice PRIVATE -Werror)
-		target_compile_options(juice-static PRIVATE -Werror)
+		if (BUILD_STATIC_LIBS)
+			target_compile_options(juice-static PRIVATE -Werror)
+		endif()
 	endif()
 endif()
 
@@ -228,5 +252,12 @@ if(FUZZER)
 	target_include_directories(stun-fuzzer PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/include/juice)
 
 	set_target_properties(stun-fuzzer PROPERTIES OUTPUT_NAME fuzzer)
-	target_link_libraries(stun-fuzzer juice-static ${LIB_FUZZING_ENGINE})
+	target_link_libraries(stun-fuzzer juice ${LIB_FUZZING_ENGINE})
 endif()
+
+set(prefix ${CMAKE_INSTALL_PREFIX})
+set(exec_prefix ${CMAKE_INSTALL_PREFIX})
+set(libdir ${CMAKE_INSTALL_PREFIX}/lib)
+set(includedir ${CMAKE_INSTALL_PREFIX}/include)
+configure_file(${CMAKE_SOURCE_DIR}/libjuice.pc.in ${CMAKE_BINARY_DIR}/libjuice.pc @ONLY)
+install(FILES ${CMAKE_BINARY_DIR}/libjuice.pc DESTINATION ${CMAKE_INSTALL_PREFIX}/lib/pkgconfig)
--- origsrc/libjuice-1.0.6/libjuice.pc.in	1970-01-01 09:00:00.000000000 +0900
+++ src/libjuice-1.0.6/libjuice.pc.in	2022-11-21 11:39:09.849428900 +0900
@@ -0,0 +1,10 @@
+prefix=@prefix@
+exec_prefix=@exec_prefix@
+libdir=@libdir@
+includedir=@includedir@
+
+Name: libjuice
+Description: UDP Interactive Connectivity Establishment
+Version: @PROJECT_VERSION@
+Libs: -L${libdir} -ljuice
+Cflags: -I${includedir}
