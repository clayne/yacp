--- origsrc/libstorj-1.0.3/src/Makefile.am	2018-05-11 03:45:47.000000000 +0900
+++ src/libstorj-1.0.3/src/Makefile.am	2024-05-07 20:32:19.690229600 +0900
@@ -1,10 +1,10 @@
 lib_LTLIBRARIES = libstorj.la
 libstorj_la_SOURCES = storj.c utils.c utils.h http.c http.h uploader.c uploader.h downloader.c downloader.h bip39.c bip39.h bip39_english.h crypto.c crypto.h rs.c rs.h
 libstorj_la_LIBADD = -lcurl -lnettle -ljson-c -luv -lm
-libstorj_la_LDFLAGS = -Wall
+libstorj_la_LDFLAGS = -Wall -no-undefined
 include_HEADERS = storj.h
 
 bin_PROGRAMS = storj
 storj_SOURCES = cli.c storj.h
 storj_LDADD = libstorj.la
-storj_LDFLAGS = -Wall -static
+storj_LDFLAGS = -Wall
--- origsrc/libstorj-1.0.3/src/crypto.c	2018-05-11 03:45:47.000000000 +0900
+++ src/libstorj-1.0.3/src/crypto.c	2024-05-07 20:31:30.598401000 +0900
@@ -216,6 +216,7 @@ int sha512_of_str(const uint8_t *str, in
     return 0;
 }
 
+#if 0
 void pbkdf2_hmac_sha512 (
     unsigned key_length,
     const uint8_t *key,
@@ -229,6 +230,7 @@ void pbkdf2_hmac_sha512 (
     PBKDF2 (&sha512ctx, hmac_sha512_update, hmac_sha512_digest,
     SHA512_DIGEST_SIZE, iterations, salt_length, salt, length, dst);
 }
+#endif
 
 int increment_ctr_aes_iv(uint8_t *iv, uint64_t bytes_position)
 {
--- origsrc/libstorj-1.0.3/src/crypto.h	2018-05-11 03:45:47.000000000 +0900
+++ src/libstorj-1.0.3/src/crypto.h	2024-05-07 20:31:03.347427600 +0900
@@ -40,11 +40,13 @@ int double_ripemd160sha256(uint8_t *data
 int double_ripemd160sha256_as_string(uint8_t *data, uint64_t data_size,
                                     char **digest);
 
+#if 0
 void pbkdf2_hmac_sha512(unsigned key_length,
                         const uint8_t *key,
                         unsigned iterations,
                         unsigned salt_length, const uint8_t *salt,
                         unsigned length, uint8_t *dst);
+#endif
 
 /**
  * @brief Generate a bucket's key
