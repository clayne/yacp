--- origsrc/SpFFT-1.0.4/src/CMakeLists.txt	2021-07-02 16:08:17.000000000 +0900
+++ src/SpFFT-1.0.4/src/CMakeLists.txt	2021-09-13 21:18:34.132479000 +0900
@@ -152,7 +152,7 @@ configure_file(${PROJECT_SOURCE_DIR}/cma
 
 # installation commands
 if(SPFFT_INSTALL)
-	install(TARGETS spfft DESTINATION ${CMAKE_INSTALL_LIBDIR} EXPORT SpFFTTargets)
+	install(TARGETS spfft EXPORT SpFFTTargets RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR} ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR})
 	install(DIRECTORY ${PROJECT_SOURCE_DIR}/include/spfft DESTINATION ${CMAKE_INSTALL_INCLUDEDIR} FILES_MATCHING PATTERN "*.h" PATTERN "*.hpp" PATTERN "*.f90")
 	install(FILES ${PROJECT_BINARY_DIR}/spfft/config.h "${PROJECT_BINARY_DIR}/spfft/spfft_export.h" DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/spfft)
 	install(EXPORT SpFFTTargets NAMESPACE SpFFT:: DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake/SpFFT FILE ${SPFFT_TARGETS_FILE})
--- origsrc/SpFFT-1.0.4/tests/CMakeLists.txt	2021-07-02 16:08:17.000000000 +0900
+++ src/SpFFT-1.0.4/tests/CMakeLists.txt	2021-09-13 21:40:06.457338200 +0900
@@ -6,61 +6,72 @@ if(SPFFT_BUILD_TESTS)
 	mark_as_advanced(BUILD_GMOCK INSTALL_GTEST)
 	include(FetchContent)
 
-	# add googletest
-	FetchContent_Declare(
-	  googletest
-	  GIT_REPOSITORY https://github.com/google/googletest.git
-	  GIT_TAG        release-1.8.1
-	)
-	FetchContent_GetProperties(googletest)
-	if(NOT googletest_POPULATED)
-	  message(STATUS "Downloading Google Test repository...")
-	  FetchContent_Populate(googletest)
-	endif()
-	add_subdirectory(${googletest_SOURCE_DIR} ${googletest_BINARY_DIR})
-
-	# add gtest_mpi
-	FetchContent_Declare(
-	  gtest_mpi
-	  GIT_REPOSITORY https://github.com/AdhocMan/gtest_mpi.git
-	  GIT_TAG        v1.0.0
-	)
-	FetchContent_GetProperties(gtest_mpi)
-	if(NOT gtest_mpi_POPULATED)
-	  message(STATUS "Downloading Google Test MPI extension repository...")
-	  FetchContent_Populate(gtest_mpi)
+# gtest-1.11.0: error: ‘Int32’ in namespace ‘testing::internal’ does not name a type
+#	find_package(gtest)
+#	if(NOT GTEST_FOUND)
+		# add googletest
+		FetchContent_Declare(
+			googletest
+			GIT_REPOSITORY https://github.com/google/googletest.git
+			GIT_TAG        release-1.8.1
+		)
+		FetchContent_GetProperties(googletest)
+		if(NOT googletest_POPULATED)
+			message(STATUS "Downloading Google Test repository...")
+			FetchContent_Populate(googletest)
+		endif()
+		add_subdirectory(${googletest_SOURCE_DIR} ${googletest_BINARY_DIR})
+#	endif()
+
+	if (NOT EXISTS "/usr/include/gtest_mpi")
+		# add gtest_mpi
+		FetchContent_Declare(
+			gtest_mpi
+			GIT_REPOSITORY https://github.com/AdhocMan/gtest_mpi.git
+			GIT_TAG        v1.0.0
+		)
+		FetchContent_GetProperties(gtest_mpi)
+		if(NOT gtest_mpi_POPULATED)
+			message(STATUS "Downloading Google Test MPI extension repository...")
+			FetchContent_Populate(gtest_mpi)
+		endif()
+		add_subdirectory(${gtest_mpi_SOURCE_DIR} ${gtest_mpi_BINARY_DIR})
 	endif()
-	add_subdirectory(${gtest_mpi_SOURCE_DIR} ${gtest_mpi_BINARY_DIR})
 
-	# add command line parser
-	FetchContent_Declare(
-	  cli11
-	  GIT_REPOSITORY https://github.com/CLIUtils/CLI11.git
-	  GIT_TAG        v1.7.1
-	)
-	FetchContent_GetProperties(cli11)
-	if(NOT cli11_POPULATED)
-	  message(STATUS "Downloading CLI11 command line parser repository...")
-	  FetchContent_Populate(cli11)
+	if (NOT EXISTS "/usr/include/CLI/CLI.hpp")
+		# add command line parser
+		FetchContent_Declare(
+			cli11
+			GIT_REPOSITORY https://github.com/CLIUtils/CLI11.git
+			GIT_TAG        v1.7.1
+		)
+		FetchContent_GetProperties(cli11)
+		if(NOT cli11_POPULATED)
+			message(STATUS "Downloading CLI11 command line parser repository...")
+			FetchContent_Populate(cli11)
+		endif()
+		list(APPEND SPFFT_EXTERNAL_INCLUDE_DIRS ${cli11_SOURCE_DIR}/include)
 	endif()
-	list(APPEND SPFFT_EXTERNAL_INCLUDE_DIRS ${cli11_SOURCE_DIR}/include)
 
 	# add json parser
-	set(JSON_Install OFF CACHE BOOL "")
-	FetchContent_Declare(
-	  json
-	  GIT_REPOSITORY https://github.com/nlohmann/json.git
-	  GIT_TAG        v3.6.1
-	)
-	FetchContent_GetProperties(json)
-	if(NOT json_POPULATED)
-	  message(STATUS "Downloading json repository...")
-	  FetchContent_Populate(json)
+	find_package(PkgConfig)
+	pkg_check_modules(NLOHMANN_JSON nlohmann_json)
+	if(NOT NLOHMANN_JSON_FOUND)
+		set(JSON_Install OFF CACHE BOOL "")
+		FetchContent_Declare(
+			json
+			GIT_REPOSITORY https://github.com/nlohmann/json.git
+			GIT_TAG        v3.6.1
+		)
+		FetchContent_GetProperties(json)
+		if(NOT json_POPULATED)
+			message(STATUS "Downloading json repository...")
+			FetchContent_Populate(json)
+		endif()
+		set(JSON_BuildTests OFF CACHE INTERNAL "")
+		add_subdirectory(${json_SOURCE_DIR} ${json_BINARY_DIR})
+		list(APPEND SPFFT_EXTERNAL_LIBS nlohmann_json::nlohmann_json)
 	endif()
-	set(JSON_BuildTests OFF CACHE INTERNAL "")
-	add_subdirectory(${json_SOURCE_DIR} ${json_BINARY_DIR})
-	list(APPEND SPFFT_EXTERNAL_LIBS nlohmann_json::nlohmann_json)
-
 
 	list(APPEND SPFFT_INCLUDE_DIRS ${PROJECT_SOURCE_DIR}/tests)
 
@@ -81,7 +92,13 @@ if(SPFFT_BUILD_TESTS)
 		local_tests/test_disjoint.cpp
 		local_tests/test_local_transform.cpp
 		)
-	target_link_libraries(run_local_tests PRIVATE gtest_main gtest_mpi)
+	target_link_libraries(run_local_tests PRIVATE gtest_main)
+	if(GTEST_FOUND)
+		target_link_libraries(run_local_tests PRIVATE gtest)
+	endif()
+	if(NOT EXISTS "/usr/include/gtest_mpi")
+		target_link_libraries(run_local_tests PRIVATE gtest_mpi)
+	endif()
 	target_link_libraries(run_local_tests PRIVATE ${SPFFT_LIBS} ${SPFFT_EXTERNAL_LIBS})
 	target_compile_options(run_local_tests PRIVATE ${SPFFT_DEFINITIONS} ${SPFFT_EXTERNAL_COMPILE_OPTIONS})
 	target_include_directories(run_local_tests PRIVATE ${SPFFT_INCLUDE_DIRS} ${SPFFT_EXTERNAL_INCLUDE_DIRS})
@@ -94,7 +111,13 @@ if(SPFFT_BUILD_TESTS)
 			mpi_tests/test_transpose.cpp
 			mpi_tests/test_transpose_gpu.cpp
 			)
-		target_link_libraries(run_mpi_tests PRIVATE gtest_main gtest_mpi)
+		target_link_libraries(run_mpi_tests PRIVATE gtest_main)
+		if(GTEST_FOUND)
+			target_link_libraries(run_mpi_tests PRIVATE gtest)
+		endif()
+		if(NOT EXISTS "/usr/include/gtest_mpi")
+			target_link_libraries(run_mpi_tests PRIVATE gtest_mpi)
+		endif()	
 		target_link_libraries(run_mpi_tests PRIVATE ${SPFFT_LIBS} ${SPFFT_EXTERNAL_LIBS})
 		target_compile_options(run_mpi_tests PRIVATE ${SPFFT_DEFINITIONS} ${SPFFT_EXTERNAL_COMPILE_OPTIONS})
 		target_include_directories(run_mpi_tests PRIVATE ${SPFFT_INCLUDE_DIRS} ${SPFFT_EXTERNAL_INCLUDE_DIRS})
