--- origsrc/vectorscan-vectorscan-5.4.12/cmake/cflags-generic.cmake	2025-07-23 00:09:14.000000000 +0900
+++ src/vectorscan-vectorscan-5.4.12/cmake/cflags-generic.cmake	2025-09-05 18:18:46.297803500 +0900
@@ -5,10 +5,6 @@ if (NOT CMAKE_COMPILER_IS_CLANG)
     set(EXTRA_CXX_FLAGS "${EXTRA_CXX_FLAGS} -fno-new-ttp-matching")
 endif()
 
-# Always use -Werror *also during release builds
-set(EXTRA_C_FLAGS "${EXTRA_C_FLAGS} -Wall -Werror")
-set(EXTRA_CXX_FLAGS "${EXTRA_CXX_FLAGS} -Wall -Werror")
-
 if (DISABLE_ASSERTS)
     set(EXTRA_C_FLAGS "${EXTRA_C_FLAGS} -DNDEBUG")
     set(EXTRA_CXX_FLAGS "${EXTRA_CXX_FLAGS} -DNDEBUG")
--- origsrc/vectorscan-vectorscan-5.4.12/tools/hsbench/CMakeLists.txt	2025-07-23 00:09:14.000000000 +0900
+++ src/vectorscan-vectorscan-5.4.12/tools/hsbench/CMakeLists.txt	2025-09-05 18:49:40.817187600 +0900
@@ -46,10 +46,10 @@ if (BUILD_CHIMERA)
     )
     add_executable(hsbench ${hsbench_SOURCES})
     include_directories(${PCRE_INCLUDE_DIRS})
-    target_link_libraries(hsbench hs chimera ${PCRE_LDFLAGS} databaseutil
-        expressionutil ${SQLITE3_LDFLAGS} ${CMAKE_THREAD_LIBS_INIT})
+    target_link_libraries(hsbench chimera ${PCRE_LDFLAGS} databaseutil
+        expressionutil ${SQLITE3_LDFLAGS} ${CMAKE_THREAD_LIBS_INIT} hs)
 else()
     add_executable(hsbench ${hsbench_SOURCES})
-    target_link_libraries(hsbench hs databaseutil expressionutil
-        ${SQLITE3_LDFLAGS} ${CMAKE_THREAD_LIBS_INIT})
+    target_link_libraries(hsbench databaseutil expressionutil
+        ${SQLITE3_LDFLAGS} ${CMAKE_THREAD_LIBS_INIT} hs)
 endif()
