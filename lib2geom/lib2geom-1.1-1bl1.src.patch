--- origsrc/lib2geom-1.1/src/toys/conic-section-toy.cpp	2021-01-16 02:42:28.000000000 +0900
+++ src/lib2geom-1.1/src/toys/conic-section-toy.cpp	2021-06-09 15:36:18.388403300 +0900
@@ -120,7 +120,7 @@ class ConicSectionToy : public Toy
 
         if (!parabola_toggle.on )
         {
-            if (focus2.pos == Point(infinity(),infinity()))
+            if (focus2.pos == Point(Geom::infinity(),Geom::infinity()))
                 focus2.pos = Point(m_width/2, m_height/2);
             double df1f2 = distance (focus1.pos, focus2.pos);
             if (df1f2 > 20 )
@@ -141,7 +141,7 @@ class ConicSectionToy : public Toy
         }
         else
         {
-            focus2.pos = Point(infinity(),infinity());
+            focus2.pos = Point(Geom::infinity(),Geom::infinity());
         }
 
         cs.set (vertex.pos, focus1.pos, focus2.pos);
--- origsrc/lib2geom-1.1/src/toys/sweeper.cpp	2021-01-16 02:42:28.000000000 +0900
+++ src/lib2geom-1.1/src/toys/sweeper.cpp	2021-06-09 15:36:18.392404100 +0900
@@ -3,6 +3,7 @@
 #include <2geom/basic-intersection.h>
 #include <2geom/pathvector.h>
 #include <2geom/exception.h>
+#include <2geom/coord.h>
 
 #include <cstdlib>
 #include <cstdio>
@@ -841,7 +842,7 @@ public:
     //returns an (infinite) rect around "a" separating it from "b". Nota: 3 sides are infinite!
     //TODO: place the cut where there is most space...
     OptRect separate(Rect const &a, Rect const &b){
-        Rect ret ( Interval( -infinity(), infinity() ) , Interval(-infinity(), infinity() ) );
+        Rect ret ( Interval( -Geom::infinity(), Geom::infinity() ) , Interval(-Geom::infinity(), Geom::infinity() ) );
         double gap = 0;
         unsigned dir = 4;
         if (b[X].min() - a[X].max() > gap){
@@ -872,7 +873,7 @@ public:
 
     //Find 4 lines (returned as a Rect sides) that cut all the rays (=edges). *!* some side might be infinite.
     OptRect isolateVertex(Rect const &box){
-        OptRect sep ( Interval( -infinity(), infinity() ) , Interval(-infinity(), infinity() ) );
+        OptRect sep ( Interval( -Geom::infinity(), Geom::infinity() ) , Interval(-Geom::infinity(), Geom::infinity() ) );
         //separate this vertex from the others. Find a better way.
         for (auto & vtxboxe : vtxboxes){
             if ( Point::LexLessRt(dim)( sep->max(), vtxboxe.min() ) ){
@@ -950,7 +951,7 @@ public:
 
             for (unsigned side=0; side<4; side++){//scan X or Y direction, on level min or max...
                 double level = sep->corner( side )[1-side%2];
-                if (level != infinity() && level != -infinity() ){
+                if (level != ::infinity() && level != -::infinity() ){
                     std::vector<double> times = roots(c[1-side%2]-level);
                     if ( times.size() > 0 ) {
                         double t;
