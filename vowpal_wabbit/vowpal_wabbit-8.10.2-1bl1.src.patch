--- origsrc/vowpal_wabbit-8.10.2/utl/flatbuffer/CMakeLists.txt	2021-06-12 00:13:57.000000000 +0900
+++ src/vowpal_wabbit-8.10.2/utl/flatbuffer/CMakeLists.txt	2021-06-15 16:21:59.781325800 +0900
@@ -1,2 +1,2 @@
 add_executable(to_flatbuff txt_to_flat.cc vw_to_flat.cc vw_to_flat.h)
-target_link_libraries(to_flatbuff vw explore FlatbuffersTarget)
\ No newline at end of file
+target_link_libraries(to_flatbuff vw explore FlatbuffersTarget boost_program_options)
\ No newline at end of file
--- origsrc/vowpal_wabbit-8.10.2/vowpalwabbit/CMakeLists.txt	2021-06-12 00:13:57.000000000 +0900
+++ src/vowpal_wabbit-8.10.2/vowpalwabbit/CMakeLists.txt	2021-06-15 17:32:12.389436500 +0900
@@ -3,7 +3,7 @@ configure_file(config.h.in config.h)
 # Use position independent code for all targets in this directory
 set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 
-add_library(vw_io STATIC io/io_adapter.h io/io_adapter.cc io/logger.h io/logger.cc)
+add_library(vw_io SHARED io/io_adapter.h io/io_adapter.cc io/logger.h io/logger.cc)
 target_include_directories(vw_io PUBLIC
   $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
   $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>)
@@ -16,7 +16,11 @@ endif()
 
 add_library(VowpalWabbit::io ALIAS vw_io)
 
-add_library(allreduce STATIC allreduce_sockets.cc allreduce_threads.cc vw_exception.cc)
+if (CYGWIN)
+  set_target_properties(vw_io PROPERTIES SOVERSION 0)
+endif()
+
+add_library(allreduce SHARED allreduce_sockets.cc allreduce_threads.cc vw_exception.cc)
 target_include_directories(allreduce PUBLIC
   $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>
   $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>)
@@ -32,6 +36,10 @@ else()
   target_compile_options(allreduce PUBLIC ${linux_flags})
 endif()
 
+if (CYGWIN)
+  set_target_properties(allreduce PROPERTIES SOVERSION 0)
+endif()
+
 
 if(BUILD_FLATBUFFERS)
   add_subdirectory(parser/flatbuffer)
@@ -354,7 +362,7 @@ if(BUILD_EXTERNAL_PARSER)
   set(vw_all_sources ${vw_all_sources} ${external_parser_sources})
 endif()
 
-add_library(vw STATIC ${vw_all_sources} ${vw_all_headers})
+add_library(vw SHARED ${vw_all_sources} ${vw_all_headers})
 
 target_link_libraries(vw
   PUBLIC
@@ -434,6 +442,10 @@ if(WARNING_AS_ERROR)
   endif(MSVC)
 endif(WARNING_AS_ERROR)
 
+if (CYGWIN)
+  set_target_properties(vw PROPERTIES SOVERSION 0)
+endif()
+
 if(NOT WIN32)
   add_executable(active_interactor active_interactor.cc)
 
@@ -489,7 +501,12 @@ if(NOT DEFINED DO_NOT_BUILD_VW_C_WRAPPER
   add_library(VowpalWabbit::vw_c_wrapper ALIAS vw_c_wrapper)
 
   target_compile_definitions(vw_c_wrapper PUBLIC VWDLL_EXPORTS _CRT_SECURE_NO_WARNINGS _CRT_NONSTDC_NO_DEPRECATE ZLIB_WINAPI)
-  target_link_libraries(vw_c_wrapper PUBLIC VowpalWabbit::vw)
+  target_link_libraries(vw_c_wrapper PUBLIC VowpalWabbit::vw VowpalWabbit::io)
+
+  if (CYGWIN)
+    set_target_properties(vw_c_wrapper PROPERTIES SOVERSION 0)
+  endif()
+
   if(VW_INSTALL)
     install(
       TARGETS vw_c_wrapper
