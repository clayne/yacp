--- origsrc/velocypack-0.2.0/CMakeLists.txt	2022-10-27 17:37:37.000000000 +0900
+++ src/velocypack-0.2.0/CMakeLists.txt	2025-08-20 09:00:12.226717200 +0900
@@ -47,7 +47,7 @@ endif()
 message(STATUS "VelocyPack build mode: ${CMAKE_BUILD_TYPE}")
 message(STATUS "VelocyPack interprocedural optimizations: ${IPO_ENABLED}")
 message(STATUS "VelocyPack install base directory: ${CMAKE_INSTALL_PREFIX}")
-set(VELOCYPACK_VERSION "0.1.33" CACHE STRING "VelocyPack version")
+set(VELOCYPACK_VERSION "0.2.0" CACHE STRING "VelocyPack version")
 set(VELOCYPACK_DISPLAY_NAME "Velocypack")
 set(VELOCYPACK_URL_INFO_ABOUT "https://github.com/arangodb/velocypack")
 set(VELOCYPACK_CONTACT "hackers@arangodb.org")
@@ -95,10 +95,15 @@ set(VELOCY_SOURCE
     src/string-functions.cpp
 )
 
+find_package(pkgconfig)
+
 #Use xxhash, fasthash?
 if(HashType STREQUAL "xxhash")
-    list(APPEND VELOCY_SOURCE src/xxhash.cpp)
-    add_definitions("-DVELOCYPACK_XXHASH=1")
+    pkg_check_modules(XXHASH libxxhash)
+    if (NOT XXHASH_FOUND)
+      list(APPEND VELOCY_SOURCE src/xxhash.cpp)
+      add_definitions("-DVELOCYPACK_XXHASH=1")
+    endif()
 elseif(HashType STREQUAL "fasthash")
     list(APPEND VELOCY_SOURCE src/fasthash.cpp)
     add_definitions("-DVELOCYPACK_FASTHASH=1")
@@ -107,12 +112,19 @@ else()
 endif()
 message(STATUS "VelocyPack Building with hash type: ${HashType}")
 
-add_library(velocypack STATIC ${VELOCY_SOURCE})
+add_library(velocypack SHARED ${VELOCY_SOURCE})
 target_include_directories(
     velocypack
     PRIVATE ${PROJECT_SOURCE_DIR}/src
     PUBLIC ${PROJECT_SOURCE_DIR}/include
  )
+if (HashType STREQUAL "xxhash" AND XXHASH_FOUND)
+  target_include_directories(velocypack PRIVATE ${XXHASH_INCLUDE_DIRS})
+  target_link_libraries(velocypack PUBLIC ${XXHASH_LIBRARIES})
+endif()
+if (DEFINED SOVERSION)
+  set_target_properties(velocypack PROPERTIES SOVERSION ${SOVERSION})
+endif()
  
  if(IS_ARM)
    target_include_directories(velocypack PRIVATE ${PROJECT_SOURCE_DIR}/external/sse2neon)
@@ -128,13 +140,22 @@ if(Maintainer)
     )
 endif()
 
+enable_testing()
+
 add_subdirectory(tools)
 add_subdirectory(examples)
 add_subdirectory(tests)
 
-install(TARGETS velocypack DESTINATION lib)
+install(TARGETS velocypack RUNTIME DESTINATION bin ARCHIVE DESTINATION lib)
 install(
     DIRECTORY   "include/velocypack"
     DESTINATION include
 )
 include(CPack)
+
+set(prefix ${CMAKE_INSTALL_PREFIX})
+set(exec_prefix ${CMAKE_INSTALL_PREFIX})
+set(libdir ${CMAKE_INSTALL_PREFIX}/lib)
+set(includedir ${CMAKE_INSTALL_PREFIX}/include)
+configure_file(${CMAKE_SOURCE_DIR}/velocypack.pc.in ${CMAKE_BINARY_DIR}/velocypack.pc @ONLY)
+install(FILES ${CMAKE_BINARY_DIR}/velocypack.pc DESTINATION ${CMAKE_INSTALL_PREFIX}/lib/pkgconfig)
--- origsrc/velocypack-0.2.0/tests/CMakeLists.txt	2022-10-27 17:37:37.000000000 +0900
+++ src/velocypack-0.2.0/tests/CMakeLists.txt	2025-08-20 07:35:17.593389900 +0900
@@ -50,6 +50,9 @@ macro(standard_test test_name)
     if (CMAKE_CXX_COMPILER_ID MATCHES "Clang|GNU")
       set_source_files_properties(${testCpp} PROPERTIES COMPILE_FLAGS "-Wno-deprecated-declarations")
     endif()
+    if (CYGWIN)
+      target_link_options(${testName} PRIVATE "-Wl,--allow-multiple-definition")
+    endif()
     target_link_libraries(${testName} gtest velocypack ${CMAKE_THREAD_LIBS_INIT})
     add_test(${testName} ${testName})
 endmacro()
--- origsrc/velocypack-0.2.0/tools/CMakeLists.txt	2022-10-27 17:37:37.000000000 +0900
+++ src/velocypack-0.2.0/tools/CMakeLists.txt	2025-08-20 08:14:06.956565000 +0900
@@ -35,21 +35,33 @@ endif()
 
 # build bench.cpp
 if(BuildBench)
-  if(NOT IS_DIRECTORY "${PROJECT_SOURCE_DIR}/rapidjson")
+  pkg_check_modules(RAPIDJSON rapidjson)
+  if(NOT RAPIDJSON_FOUND AND NOT IS_DIRECTORY "${PROJECT_SOURCE_DIR}/rapidjson")
     message(FATAL_ERROR "rapidjson library not found in subdirectory 'rapidjson'. Please run ./download-rapidjson.sh")
   endif()
-  if(NOT IS_DIRECTORY "${PROJECT_SOURCE_DIR}/simdjson")
+  pkg_check_modules(SIMDJSON simdjson)
+  if(NOT SIMDJSON_FOUND AND NOT IS_DIRECTORY "${PROJECT_SOURCE_DIR}/simdjson")
     message(FATAL_ERROR "simdjson library not found in subdirectory 'simdjson'. Please run ./download-simdjson.sh")
   endif()
 
-  add_library(simdjson STATIC IMPORTED)
-  set_target_properties(simdjson PROPERTIES IMPORTED_LOCATION ${PROJECT_SOURCE_DIR}/simdjson/build/libsimdjson.a)
+  if(NOT SIMDJSON_FOUND)
+    add_library(simdjson STATIC IMPORTED)
+    set_target_properties(simdjson PROPERTIES IMPORTED_LOCATION ${PROJECT_SOURCE_DIR}/simdjson/build/libsimdjson.a)
+  endif()
 
   add_executable(bench bench.cpp)
   target_link_libraries(bench velocypack)
   target_link_libraries(bench simdjson)
-  target_include_directories(bench PRIVATE ${PROJECT_SOURCE_DIR}/rapidjson/include)
-  target_include_directories(bench PRIVATE ${PROJECT_SOURCE_DIR}/simdjson/include)
+  if (RAPIDJSON_FOUND)
+    target_include_directories(bench PRIVATE ${RAPIDJSON_INCLUDE_DIRS})
+  else()
+    target_include_directories(bench PRIVATE ${PROJECT_SOURCE_DIR}/rapidjson/include)
+  endif()
+  if (SIMDJSON_FOUND)
+    target_include_directories(bench PRIVATE ${SIMDJSON_INCLUDE_DIRS})
+  else()
+    target_include_directories(bench PRIVATE ${PROJECT_SOURCE_DIR}/simdjson/include)
+  endif()
 
   if(EnableSSE)
       target_compile_definitions(bench PRIVATE RAPIDJSON_SSE42)
--- origsrc/velocypack-0.2.0/velocypack.pc.in	1970-01-01 09:00:00.000000000 +0900
+++ src/velocypack-0.2.0/velocypack.pc.in	2025-08-20 08:58:27.508492500 +0900
@@ -0,0 +1,10 @@
+prefix=@prefix@
+exec_prefix=@exec_prefix@
+libdir=@libdir@
+includedir=@includedir@
+
+Name: velocypack
+Description: Fast and compact format for serialization and storage
+Version: @VELOCYPACK_VERSION@
+Libs: -L${libdir} -lvelocypack
+Cflags: -I${includedir}
