--- origsrc/DPP-10.1.2/library/CMakeLists.txt	2025-03-20 03:36:56.000000000 +0900
+++ src/DPP-10.1.2/library/CMakeLists.txt	2025-06-13 09:47:18.070384000 +0900
@@ -281,6 +281,29 @@ foreach (fullmodname ${subdirlist})
 		)
 	endif()
 
+	if (HAVE_VOICE)
+		# Private statically linked dependencies
+		if(NOT BUILD_SHARED_LIBS AND NOT APPLE)
+			target_link_libraries(${modname} PRIVATE
+					mlspp.a
+					mls_vectors.a
+					bytes.a
+					tls_syntax.a
+					hpke.a
+			)
+			message("-- INFO: Linking static dependencies")
+		else()
+			target_link_libraries(${modname} PRIVATE
+					mlspp
+					mls_vectors
+					bytes
+					tls_syntax
+					hpke
+			)
+			message("-- INFO: Linking dynamic dependencies")
+		endif()
+	endif()
+
 	if (WIN32 AND NOT MINGW AND NOT CONAN_EXPORTED)
 
 		if (NOT WINDOWS_32_BIT)
@@ -326,28 +349,6 @@ else()
 	message("-- Building with ${Green}poll socket engine${ColourReset} -- ${Red}meh!${ColourReset}")
 	target_sources("dpp" PRIVATE "${modules_dir}/dpp/socketengines/poll.cpp")
 endif()
-if (HAVE_VOICE)
-	# Private statically linked dependencies
-	if(NOT BUILD_SHARED_LIBS AND NOT APPLE)
-		target_link_libraries(dpp PRIVATE
-				mlspp.a
-				mls_vectors.a
-				bytes.a
-				tls_syntax.a
-				hpke.a
-		)
-		message("-- INFO: Linking static dependencies")
-	else()
-		target_link_libraries(dpp PRIVATE
-				mlspp
-				mls_vectors
-				bytes
-				tls_syntax
-				hpke
-		)
-		message("-- INFO: Linking dynamic dependencies")
-	endif()
-endif()
 
 target_compile_features(dpp PUBLIC cxx_std_17)
 target_compile_features(dpp PRIVATE cxx_constexpr)
--- origsrc/DPP-10.1.2/mlspp/include/namespace.h	1970-01-01 09:00:00.000000000 +0900
+++ src/DPP-10.1.2/mlspp/include/namespace.h	2025-06-13 05:36:49.763480500 +0900
@@ -0,0 +1,4 @@
+#pragma once
+
+// Configurable top-level MLS namespace
+#define MLS_NAMESPACE mls
--- origsrc/DPP-10.1.2/src/dpp/socketengines/poll.cpp	2025-03-20 03:36:56.000000000 +0900
+++ src/DPP-10.1.2/src/dpp/socketengines/poll.cpp	2025-06-13 09:32:38.384400500 +0900
@@ -19,6 +19,8 @@
  *
  ************************************************************************************/
 
+#include <dpp/cluster.h>
+#include <dpp/dispatcher.h>
 #include <dpp/socketengine.h>
 #include <dpp/exception.h>
 #include <vector>
@@ -33,7 +35,7 @@
 	 * Microsoft gotta be different.
 	 */
 	#define poll(fds, nfds, timeout) WSAPoll(fds, nfds, timeout)
-	#define pollfd WSAPOLLFD
+	// #define pollfd WSAPOLLFD
 	/* Windows sockets library */
 	#pragma comment(lib, "ws2_32")
 #else
@@ -80,7 +82,7 @@ struct DPP_EXPORT socket_engine_poll : p
 			}
 		}
 
-		int i = poll(out_set, static_cast<unsigned int>(poll_set.size()), poll_delay);
+		int i = ::poll(out_set, static_cast<unsigned int>(poll_set.size()), poll_delay);
 		int processed = 0;
 
 		for (size_t index = 0; index < poll_set.size() && processed < i; index++) {
