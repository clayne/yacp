--- origsrc/libcvautomation-Release_2.0/configure.ac	2012-10-12 06:13:57.000000000 +0900
+++ src/libcvautomation-Release_2.0/configure.ac	2025-01-17 09:31:11.160110500 +0900
@@ -36,7 +36,7 @@ if test "$use_opencv2" == "true"; then
 	AC_SUBST(CV_VERSION, "opencv2")
 	cv_headers=$srcdir/include/opencv2_includes
 	AC_SUBST(CV_CFLAGS, [`pkg-config --cflags opencv`])
-	AC_SUBST(CV_LIBS, ["-lopencv_core -lopencv_imgproc -lopencv_highgui"])
+	AC_SUBST(CV_LIBS, ["-lopencv_core -lopencv_imgproc -lopencv_highgui -lopencv_imgcodecs"])
 else
 	echo "could not find OpenCV version 2.0.0 or higher, checking for 1.0.0 or higher..."
 	PKG_CHECK_MODULES([OpenCV], [opencv >= 1.0.0])
--- origsrc/libcvautomation-Release_2.0/examples/Makefile.am	2012-10-12 06:13:57.000000000 +0900
+++ src/libcvautomation-Release_2.0/examples/Makefile.am	2025-01-17 09:33:44.519787800 +0900
@@ -1,7 +1,7 @@
 if BUILD_EXAMPLES
 #Need to include the -Ilibcvautomation so that libcvautomation.h can find everything that it needs
 AM_LDFLAGS = -L../libcvautomation/.libs -lcvautomation
-AM_CFLAGS = -Wall -Werror -O2 -I$(top_srcdir)/include @X11_CFLAGS@ @XTEST_CFLAGS@ @CV_CFLAGS@
+AM_CFLAGS = -I$(top_srcdir)/include @X11_CFLAGS@ @XTEST_CFLAGS@ @CV_CFLAGS@
 
 #Build only if we're building the examples
 bin_PROGRAMS = cva-match cva-input
--- origsrc/libcvautomation-Release_2.0/libcvautomation/Makefile.am	2012-10-12 06:13:57.000000000 +0900
+++ src/libcvautomation-Release_2.0/libcvautomation/Makefile.am	2025-01-17 09:04:14.302711000 +0900
@@ -5,9 +5,9 @@ AM_LIBS = -shared
 #Lists the libraries to build
 lib_LTLIBRARIES = libcvautomation.la
 libcvautomation_la_SOURCES = libcvautomation-opencv.c libcvautomation-xlib.c libcvautomation-xtest.c
-libcvautomation_la_LDFLAGS = -version-info @LIBTOOL_VERSION@
+libcvautomation_la_LDFLAGS = -no-undefined -version-info @LIBTOOL_VERSION@
 libcvautomation_la_LIBADD = @X11_LIBS@ @XTEST_LIBS@ @CV_LIBS@
-libcvautomation_la_CFLAGS = -Wall -Werror -O2 -I$(top_srcdir)/include @X11_CFLAGS@ @XTEST_CFLAGS@ @CV_CFLAGS@
+libcvautomation_la_CFLAGS = -I$(top_srcdir)/include @X11_CFLAGS@ @XTEST_CFLAGS@ @CV_CFLAGS@
 
 #Lists the headers to distribute
 pkginclude_HEADERS = $(top_srcdir)/include/libcvautomation/libcvautomation.h $(top_srcdir)/include/libcvautomation/libcvautomation-opencv.h $(top_srcdir)/include/libcvautomation/libcvautomation-xlib.h $(top_srcdir)/include/libcvautomation/libcvautomation-xtest.h $(top_srcdir)/include/libcvautomation/xautomation_kbd.h $(top_srcdir)/include/libcvautomation/xautomation_keysym_map.h $(top_srcdir)/include/libcvautomation/xautomation_multikey_map.h
--- origsrc/libcvautomation-Release_2.0/python/Makefile.am	2012-10-12 06:13:57.000000000 +0900
+++ src/libcvautomation-Release_2.0/python/Makefile.am	2025-01-17 09:04:28.265914400 +0900
@@ -1,6 +1,6 @@
 pyexec_LTLIBRARIES = _libcvautomation.la
 _libcvautomation_la_SOURCES = libcvautomation-swig.c
-_libcvautomation_la_LDFLAGS = -avoid-version -module $(PYTHON_LDFLAGS) -L$(top_srcdir)/libcvautomation/.libs
+_libcvautomation_la_LDFLAGS = -no-undefined -avoid-version -module $(PYTHON_LDFLAGS) -L$(top_srcdir)/libcvautomation/.libs
 _libcvautomation_la_LIBADD = -lcvautomation
 _libcvautomation_la_CFLAGS = $(PYTHON_CPPFLAGS) -I$(top_srcdir)/include
 
