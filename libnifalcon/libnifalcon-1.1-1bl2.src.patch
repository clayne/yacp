--- origsrc/libnifalcon-1.1/BuildSysCMakeLib.cmake	2016-07-05 06:07:21.000000000 +0900
+++ src/libnifalcon-1.1/BuildSysCMakeLib.cmake	2025-05-06 08:52:09.942065300 +0900
@@ -315,12 +315,12 @@ FUNCTION(BUILDSYS_BUILD_LIB)
 
     # Installation commands
     IF(BUILDSYS_LIB_SHOULD_INSTALL AND NOT BUILDSYS_LIB_EXCLUDE_FROM_ALL)
-      INSTALL(TARGETS ${CURRENT_LIB} LIBRARY DESTINATION ${LIBRARY_INSTALL_DIR} ARCHIVE DESTINATION ${LIBRARY_INSTALL_DIR} FRAMEWORK DESTINATION ${FRAMEWORK_INSTALL_DIR})
+      INSTALL(TARGETS ${CURRENT_LIB} RUNTIME DESTINATION ${RUNTIME_INSTALL_DIR} ARCHIVE DESTINATION ${LIBRARY_INSTALL_DIR} FRAMEWORK DESTINATION ${FRAMEWORK_INSTALL_DIR})
     ELSEIF(BUILDSYS_LIB_SHOULD_INSTALL AND BUILDSYS_LIB_EXCLUDE_FROM_ALL)
       # Only install the output file if it exists. This doesn't work for targets under exclude from all, but we may build them anyways
       MESSAGE(STATUS "NOTE: Target ${BUILDSYS_LIB_NAME} will only be installed after target is specifically built (not build using all target)")
       GET_TARGET_PROPERTY(LIB_OUTPUT_NAME ${CURRENT_LIB} LOCATION)
-      INSTALL(FILES ${LIB_OUTPUT_NAME} LIBRARY DESTINATION ${LIBRARY_INSTALL_DIR} ARCHIVE DESTINATION ${LIBRARY_INSTALL_DIR} OPTIONAL)
+      INSTALL(FILES ${LIB_OUTPUT_NAME} RUNTIME DESTINATION ${RUNTIME_INSTALL_DIR} ARCHIVE DESTINATION ${LIBRARY_INSTALL_DIR} OPTIONAL)
     ENDIF()
 
     # Rewrite of install_name_dir in apple binaries
--- origsrc/libnifalcon-1.1/CMakeLists.txt	2016-07-05 06:07:21.000000000 +0900
+++ src/libnifalcon-1.1/CMakeLists.txt	2025-05-06 09:04:21.051904000 +0900
@@ -68,9 +68,9 @@ ENDIF(NOT LIBFTD2XX_FOUND AND NOT LIBUSB
 
 #library definitions
 SET(LIBNIFALCON_MAJOR_VERSION 1)
-SET(LIBNIFALCON_MINOR_VERSION 0)
-SET(LIBNIFALCON_BUILD_VERSION 2)
-SET(LIBNIFALCON_VERSION ${LIBNIFALCON_MAJOR_VERSION}.${LIBNIFALCON_MINOR_VERSION}.${LIBNIFALCON_BUILD_VERSION})
+SET(LIBNIFALCON_MINOR_VERSION 1)
+SET(LIBNIFALCON_BUILD_VERSION 0)
+SET(LIBNIFALCON_VERSION ${LIBNIFALCON_MAJOR_VERSION}.${LIBNIFALCON_MINOR_VERSION})
 
 # LibNiFalcon Include directory
 SET(LIBNIFALCON_INCLUDE_DIR "${CMAKE_SOURCE_DIR}/include")
@@ -110,16 +110,15 @@ IF(UNIX)
   if(PKG_CONFIG_EXECUTABLE)
     set(PC_SHORT_NAME "libnifalcon")
     set(PC_LONG_NAME "libnifalcon")
-    set(PC_LIBRARY_NAME "libnifalcon")
+    set(PC_LIBRARY_NAME "nifalcon")
     set(PC_DESCRIPTION "Open Source Driver for the Novint Falcon Haptic Controller")
     set(PC_VERSION "${LIBNIFALCON_MAJOR_VERSION}.${LIBNIFALCON_MINOR_VERSION}.${LIBNIFALCON_BUILD_VERSION}")
     
     if(LIBUSB_1_FOUND)
       set(PC_REQUIRES "${PC_REQUIRES}libusb-1.0 ")
-      set(PC_LINK_FLAGS "${PC_LINK_FLAGS}-lnifalcon_comm_libusb ")
     endif(LIBUSB_1_FOUND)
     
-    set(PC_LINK_FLAGS "${lib${PC_LIBRARY_NAME}_LINK_FLAGS} ${PC_LINK_FLAGS}")
+    set(PC_LINK_FLAGS "${${PC_LIBRARY_NAME}_LINK_FLAGS} ${PC_LINK_FLAGS}")
     set(PC_LINK_FLAGS "-l${PC_LIBRARY_NAME} ${PC_LINK_FLAGS}")
     set(PC_COMPILE_FLAGS "${lib${PC_LIBRARY_NAME}_COMPILE_FLAGS}")
     set(PC_CONFIGURED_FILE
