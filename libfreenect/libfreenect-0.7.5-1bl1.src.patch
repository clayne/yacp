--- origsrc/libfreenect-0.7.5/CMakeLists.txt	2024-01-07 01:57:12.000000000 +0900
+++ src/libfreenect-0.7.5/CMakeLists.txt	2024-08-31 13:53:27.043814400 +0900
@@ -181,7 +181,7 @@ configure_file(
 
 # --- cmake config file ---
 CONFIGURE_FILE(libfreenectConfig.cmake.in ${CMAKE_CURRENT_BINARY_DIR}/libfreenectConfig.cmake @ONLY)
-INSTALL(FILES ${CMAKE_CURRENT_BINARY_DIR}/libfreenectConfig.cmake DESTINATION share/${PROJECT_NAME})
+INSTALL(FILES ${CMAKE_CURRENT_BINARY_DIR}/libfreenectConfig.cmake DESTINATION lib/cmake/${PROJECT_NAME})
 
 add_custom_target(uninstall
   COMMAND ${CMAKE_COMMAND} -P ${CMAKE_CURRENT_BINARY_DIR}/UninstallTarget.cmake)
--- origsrc/libfreenect-0.7.5/fakenect/CMakeLists.txt	2024-01-07 01:57:12.000000000 +0900
+++ src/libfreenect-0.7.5/fakenect/CMakeLists.txt	2024-08-31 13:54:14.051087200 +0900
@@ -12,7 +12,8 @@ set_target_properties ( fakenect PROPERT
 target_link_libraries(fakenect ${MATH_LIB})
 
 install (TARGETS fakenect
-  DESTINATION "${PROJECT_LIBRARY_INSTALL_DIR}/fakenect")
+  RUNTIME DESTINATION bin
+  ARCHIVE DESTINATION lib)
 
 add_executable(fakenect-record record.c parson.c)
 target_link_libraries(fakenect-record freenect ${MATH_LIB})
--- origsrc/libfreenect-0.7.5/src/CMakeLists.txt	2024-01-07 01:57:12.000000000 +0900
+++ src/libfreenect-0.7.5/src/CMakeLists.txt	2024-09-01 09:58:51.831771000 +0900
@@ -9,7 +9,7 @@ include_directories(${LIBUSB_1_INCLUDE_D
 IF(BUILD_REDIST_PACKAGE)
   # If this build is intended for a redistributable package, we can't include audios.bin, so we should include fwfetcher.py
   # and the package should run "python fwfetcher.py $INSTALL_PREFIX/share" as a postinst hook
-  install (FILES "fwfetcher.py" DESTINATION "${CMAKE_INSTALL_PREFIX}/share")
+  install (FILES "fwfetcher.py" DESTINATION "${CMAKE_INSTALL_PREFIX}/share/libfreenect")
 ELSE(BUILD_REDIST_PACKAGE)
   # If the install is local only, we can just run fwfetcher.py and install the audios.bin firmware to the system folder
   cmake_minimum_required(VERSION 3.12)
@@ -27,18 +27,10 @@ set_target_properties ( freenect PROPERT
   VERSION ${PROJECT_VER}
   SOVERSION ${PROJECT_APIVER})	
 install (TARGETS freenect
-  DESTINATION "${PROJECT_LIBRARY_INSTALL_DIR}")
-
-add_library (freenectstatic STATIC ${SRC})
-set_target_properties (freenectstatic PROPERTIES OUTPUT_NAME freenect)
-IF(UNIX AND NOT APPLE)
-  SET_TARGET_PROPERTIES (freenectstatic PROPERTIES COMPILE_FLAGS "-fPIC")
-ENDIF()
-install (TARGETS freenectstatic
-  DESTINATION "${PROJECT_LIBRARY_INSTALL_DIR}")
+  RUNTIME DESTINATION bin
+  ARCHIVE DESTINATION lib)
 
 target_link_libraries (freenect ${LIBUSB_1_LIBRARIES})
-target_link_libraries (freenectstatic ${LIBUSB_1_LIBRARIES})
 
 # Install the header files
 install (FILES "../include/libfreenect.h" "../include/libfreenect_registration.h" "../include/libfreenect_audio.h"
--- origsrc/libfreenect-0.7.5/src/libfreenect.pc.in	2024-01-07 01:57:12.000000000 +0900
+++ src/libfreenect-0.7.5/src/libfreenect.pc.in	2024-08-31 13:56:17.351924300 +0900
@@ -6,6 +6,6 @@ includedir=${prefix}/@PROJECT_INCLUDE_IN
 Name: @CMAKE_PROJECT_NAME@
 Description: Interface to the Microsoft Kinect sensor device.
 Requires.private: libusb-1.0
-Version: @PROJECT_APIVER@
+Version: @PROJECT_VER@
 Libs: -L${libdir} -lfreenect
 Cflags: -I${includedir}
--- origsrc/libfreenect-0.7.5/wrappers/c_sync/CMakeLists.txt	2024-01-07 01:57:12.000000000 +0900
+++ src/libfreenect-0.7.5/wrappers/c_sync/CMakeLists.txt	2024-08-31 15:34:28.810124300 +0900
@@ -7,19 +7,15 @@ find_package(Threads REQUIRED)
 include_directories(${THREADS_PTHREADS_INCLUDE_DIR})
 
 add_library (freenect_sync SHARED libfreenect_sync.c)
-add_library (freenect_sync_static STATIC libfreenect_sync.c)
-set_target_properties (freenect_sync_static PROPERTIES OUTPUT_NAME freenect_sync)
 
 set_target_properties (freenect_sync PROPERTIES
   VERSION ${PROJECT_VER}
   SOVERSION ${PROJECT_APIVER})
 
 target_link_libraries (freenect_sync freenect ${CMAKE_THREAD_LIBS_INIT})
-target_link_libraries (freenect_sync_static freenect ${CMAKE_THREAD_LIBS_INIT})
 
 install (TARGETS freenect_sync
-  DESTINATION "${PROJECT_LIBRARY_INSTALL_DIR}")
-install (TARGETS freenect_sync_static
-  DESTINATION "${PROJECT_LIBRARY_INSTALL_DIR}")
+  RUNTIME DESTINATION bin
+  ARCHIVE DESTINATION lib)
 install (FILES "libfreenect_sync.h"
   DESTINATION ${PROJECT_INCLUDE_INSTALL_DIR})
--- origsrc/libfreenect-0.7.5/wrappers/opencv/CMakeLists.txt	2024-01-07 01:57:12.000000000 +0900
+++ src/libfreenect-0.7.5/wrappers/opencv/CMakeLists.txt	2024-08-31 13:57:18.672440100 +0900
@@ -12,7 +12,8 @@ include_directories (../c_sync)
 target_link_libraries (freenect_cv freenect_sync ${OpenCV_LIBS})
 
 install (TARGETS freenect_cv
-  DESTINATION "${PROJECT_LIBRARY_INSTALL_DIR}")
+  RUNTIME DESTINATION bin
+  ARCHIVE DESTINATION lib)
 install (FILES "libfreenect_cv.h"
   DESTINATION ${PROJECT_INCLUDE_INSTALL_DIR})
 
