--- origsrc/flann-1.9.2/src/cpp/CMakeLists.txt	2021-04-12 16:15:28.000000000 +0900
+++ src/flann-1.9.2/src/cpp/CMakeLists.txt	2023-07-31 10:23:00.696701900 +0900
@@ -8,12 +8,14 @@ file(GLOB_RECURSE C_SOURCES flann.cpp)
 file(GLOB_RECURSE CPP_SOURCES flann_cpp.cpp)
 file(GLOB_RECURSE CU_SOURCES *.cu)
 
+if (NOT BUILD_SHARED_LIBS)
 add_library(flann_cpp_s STATIC ${CPP_SOURCES})
 target_link_libraries(flann_cpp_s ${LZ4_LINK_LIBRARIES})
 if(CMAKE_COMPILER_IS_GNUCC OR CMAKE_COMPILER_IS_CLANG)
     set_target_properties(flann_cpp_s PROPERTIES COMPILE_FLAGS -fPIC)
 endif()
 set_property(TARGET flann_cpp_s PROPERTY COMPILE_DEFINITIONS FLANN_STATIC FLANN_USE_CUDA)
+endif()
 
 if (BUILD_CUDA_LIB)
     SET(CUDA_NVCC_FLAGS "${CUDA_NVCC_FLAGS};-DFLANN_USE_CUDA")
@@ -25,8 +27,10 @@ if (BUILD_CUDA_LIB)
     else()
 	    set(CUDA_NVCC_FLAGS "${CUDA_NVCC_FLAGS};" )
     endif()
+    if (NOT BUILD_SHARED_LIBS)
     cuda_add_library(flann_cuda_s STATIC ${CU_SOURCES})
     set_property(TARGET flann_cuda_s PROPERTY COMPILE_DEFINITIONS FLANN_STATIC)
+    endif()
 endif()
 
 if(CMAKE_SYSTEM_NAME STREQUAL "Linux" AND CMAKE_COMPILER_IS_GNUCC)
@@ -79,12 +83,14 @@ endif()
 
 
 if (BUILD_C_BINDINGS)
+    if (NOT BUILD_SHARED_LIBS)
     add_library(flann_s STATIC ${C_SOURCES})
     target_link_libraries(flann_s ${LZ4_LINK_LIBRARIES})
     if(CMAKE_COMPILER_IS_GNUCC OR CMAKE_COMPILER_IS_CLANG)
         set_target_properties(flann_s PROPERTIES COMPILE_FLAGS -fPIC)
     endif()
     set_property(TARGET flann_s PROPERTY COMPILE_DEFINITIONS FLANN_STATIC)
+    endif()
 
     if(CMAKE_SYSTEM_NAME STREQUAL "Linux" AND CMAKE_COMPILER_IS_GNUCC)
         add_library(flann SHARED dummy.c)
@@ -117,34 +123,64 @@ endif(WIN32)
 
 
 install (
-    TARGETS flann_cpp flann_cpp_s
+    TARGETS flann_cpp
+    EXPORT ${targets_export_name}
+    INCLUDES DESTINATION include
+    RUNTIME DESTINATION bin
+    LIBRARY DESTINATION ${FLANN_LIB_INSTALL_DIR}
+    ARCHIVE DESTINATION ${FLANN_LIB_INSTALL_DIR}
+)
+if (NOT BUILD_SHARED_LIBS)
+install (
+    TARGETS flann_cpp_s
     EXPORT ${targets_export_name}
     INCLUDES DESTINATION include
     RUNTIME DESTINATION bin
     LIBRARY DESTINATION ${FLANN_LIB_INSTALL_DIR}
     ARCHIVE DESTINATION ${FLANN_LIB_INSTALL_DIR}
 )
+endif()
 
 if (BUILD_CUDA_LIB)
     install (
-        TARGETS flann_cuda flann_cuda_s
+        TARGETS flann_cuda
+        EXPORT ${targets_export_name}
+        INCLUDES DESTINATION include
+        RUNTIME DESTINATION bin
+        LIBRARY DESTINATION ${FLANN_LIB_INSTALL_DIR}
+        ARCHIVE DESTINATION ${FLANN_LIB_INSTALL_DIR}
+    )
+    if (NOT BUILD_SHARED_LIBS)
+    install (
+        TARGETS flann_cuda_s
         EXPORT ${targets_export_name}
         INCLUDES DESTINATION include
         RUNTIME DESTINATION bin
         LIBRARY DESTINATION ${FLANN_LIB_INSTALL_DIR}
         ARCHIVE DESTINATION ${FLANN_LIB_INSTALL_DIR}
     )
+    endif()
 endif()
 
 if (BUILD_C_BINDINGS)
     install (
-        TARGETS flann flann_s
+        TARGETS flann
+        EXPORT ${targets_export_name}
+        INCLUDES DESTINATION include
+        RUNTIME DESTINATION bin
+        LIBRARY DESTINATION ${FLANN_LIB_INSTALL_DIR}
+        ARCHIVE DESTINATION ${FLANN_LIB_INSTALL_DIR}
+    )
+    if (NOT BUILD_SHARED_LIBS)
+    install (
+        TARGETS flann_s
         EXPORT ${targets_export_name}
         INCLUDES DESTINATION include
         RUNTIME DESTINATION bin
         LIBRARY DESTINATION ${FLANN_LIB_INSTALL_DIR}
         ARCHIVE DESTINATION ${FLANN_LIB_INSTALL_DIR}
     )
+    endif()
 endif()
 
 install (
