--- origsrc/sobjectizer-v.5.8.1/dev/CMakeLists.txt	2023-10-16 22:12:16.000000000 +0900
+++ src/sobjectizer-v.5.8.1/dev/CMakeLists.txt	2023-10-31 13:52:17.680397900 +0900
@@ -20,20 +20,6 @@ if((NOT SOBJECTIZER_BUILD_STATIC) AND (N
 	message(FATAL_ERROR "at least one of SOBJECTIZER_BUILD_STATIC/SOBJECTIZER_BUILD_SHARED must be defined")
 endif()
 
-if(NOT SOBJECTIZER_BUILD_STATIC)
-	if(BUILD_ALL OR BUILD_EXAMPLES OR BUILD_TESTS)
-		message(FATAL_ERROR "BUILD_ALL/BUILD_EXAMPLES/BUILD_TESTS can't be used"
-			" if SOBJECTIZER_BUILD_STATIC is OFF")
-	endif()
-endif()
-
-if(NOT SOBJECTIZER_BUILD_SHARED)
-	if(BUILD_ALL OR BUILD_EXAMPLES OR BUILD_TESTS)
-		message(FATAL_ERROR "BUILD_ALL/BUILD_EXAMPLES/BUILD_TESTS can't be used"
-			" if SOBJECTIZER_BUILD_SHARED is OFF")
-	endif()
-endif()
-
 if (ANDROID)
     if (ANDROID_NDK_ABI_NAME STREQUAL "armeabi")
         message(FATAL_ERROR "'${ANDROID_NDK_ABI_NAME}' target is not supported due to lack of the lock-free atomics")
--- origsrc/sobjectizer-v.5.8.1/dev/so_5/CMakeLists.txt	2023-10-16 22:12:16.000000000 +0900
+++ src/sobjectizer-v.5.8.1/dev/so_5/CMakeLists.txt	2023-10-31 13:52:17.680397900 +0900
@@ -111,6 +111,12 @@ set(SO_5_TARGETS_TO_INSTALL)
 if(SOBJECTIZER_BUILD_SHARED)
 	add_library(${SO_5_SHARED_LIB} SHARED ${SO_5_SRC})
 	add_library(sobjectizer::SharedLib ALIAS ${SO_5_SHARED_LIB})
+	if (NOT SOBJECTIZER_BUILD_STATIC)
+		add_library(sobjectizer::StaticLib ALIAS ${SO_5_SHARED_LIB})
+	endif()
+	if (DEFINED SOVERSION)
+		set_target_properties(${SO_5_SHARED_LIB} PROPERTIES SOVERSION "${SOVERSION}")
+	endif()
 	set_property(TARGET ${SO_5_SHARED_LIB} PROPERTY EXPORT_NAME SharedLib)
 	setup_target_cxx_std(${SO_5_SHARED_LIB})
 
--- origsrc/sobjectizer-v.5.8.1/dev/so_5/cmake/target.cmake	2023-10-16 22:12:16.000000000 +0900
+++ src/sobjectizer-v.5.8.1/dev/so_5/cmake/target.cmake	2023-10-31 13:52:17.680397900 +0900
@@ -1,3 +1,8 @@
 set(SO_5_VERSION "5.8.1")
-set(SO_5_SHARED_LIB so.${SO_5_VERSION})
-set(SO_5_STATIC_LIB so_s.${SO_5_VERSION})
+if (DEFINED SOVERSION)
+    set(SO_5_SHARED_LIB so)
+    set(SO_5_STATIC_LIB so_s)
+else()
+    set(SO_5_SHARED_LIB so.${SO_5_VERSION})
+    set(SO_5_STATIC_LIB so_s.${SO_5_VERSION})
+endif()
