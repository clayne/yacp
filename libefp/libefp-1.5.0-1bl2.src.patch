--- origsrc/libefp-1.5.0/CMakeLists.txt	2017-12-23 13:08:41.000000000 +0900
+++ src/libefp-1.5.0/CMakeLists.txt	2025-02-21 09:24:48.169627900 +0900
@@ -101,7 +101,7 @@ endif()
 install(TARGETS efp
         EXPORT "${PN}Targets"
         ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
-        LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR})
+        RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR})
 
 # <<< Export Interface >>>
 
@@ -112,7 +112,7 @@ target_include_directories(efp INTERFACE
 # <<< Export Config >>>
 
 # GNUInstallDirs "DATADIR" wrong here; CMake search path wants "share".
-set(CMAKECONFIG_INSTALL_DIR "share/cmake/${PN}")
+option(CMAKECONFIG_INSTALL_DIR "cmakeconfig install directory" "share/cmake/${PN}")
 configure_package_config_file(cmake/${PN}Config.cmake.in
                               "${CMAKE_CURRENT_BINARY_DIR}/${PN}Config.cmake"
                               INSTALL_DESTINATION ${CMAKECONFIG_INSTALL_DIR})
@@ -132,3 +132,10 @@ install(EXPORT "${PN}Targets"
 #   is testing with CTest. Also, when libefp is
 #   compiled statically with OpenMP, will need to compile consuming
 #   application with OpenMP, too, or supply link library.
+
+set(prefix ${CMAKE_INSTALL_PREFIX})
+set(exec_prefix ${CMAKE_INSTALL_PREFIX})
+set(libdir ${CMAKE_INSTALL_PREFIX}/lib)
+set(includedir ${CMAKE_INSTALL_PREFIX}/include)
+configure_file(${CMAKE_SOURCE_DIR}/libefp.pc.in ${CMAKE_BINARY_DIR}/libefp.pc @ONLY)
+install(FILES ${CMAKE_BINARY_DIR}/libefp.pc DESTINATION ${CMAKE_INSTALL_PREFIX}/lib/pkgconfig)
--- origsrc/libefp-1.5.0/libefp.pc.in	1970-01-01 09:00:00.000000000 +0900
+++ src/libefp-1.5.0/libefp.pc.in	2025-02-21 09:24:58.875653400 +0900
@@ -0,0 +1,10 @@
+prefix=@prefix@
+exec_prefix=@exec_prefix@
+libdir=@libdir@
+includedir=@includedir@
+
+Name: libefp
+Description: Effective Fragment Potential method
+Version: @PROJECT_VERSION@
+Libs: -L${libdir} -lefp
+Cflags: -I${includedir}
