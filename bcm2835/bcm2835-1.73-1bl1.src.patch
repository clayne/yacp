--- origsrc/bcm2835-1.73/Makefile.am	2022-03-21 08:47:44.000000000 +0900
+++ src/bcm2835-1.73/Makefile.am	2023-07-25 05:22:18.458171900 +0900
@@ -20,4 +20,5 @@ examples/smi/smi.c
 upload:
 	rsync -avz @PACKAGE_TARNAME@-@VERSION@.tar.gz doc/html/ www.airspayce.com:public_html/mikem/@PACKAGE_NAME@
 
-
+pkgconfigdir = $(libdir)/pkgconfig
+pkgconfig_DATA = $(PACKAGE).pc
--- origsrc/bcm2835-1.73/bcm2835.pc.in	1970-01-01 09:00:00.000000000 +0900
+++ src/bcm2835-1.73/bcm2835.pc.in	2023-07-25 05:22:18.473799400 +0900
@@ -0,0 +1,10 @@
+prefix=@prefix@
+exec_prefix=@exec_prefix@
+libdir=@libdir@
+includedir=@includedir@
+
+Name: bcm2835
+Description: C library for Broadcom BCM 2835 as used in Raspberry Pi
+Version: @VERSION@
+Libs: -L${libdir} -lbcm2835
+Cflags: -I${includedir}
--- origsrc/bcm2835-1.73/configure.ac	2023-06-09 10:31:50.000000000 +0900
+++ src/bcm2835-1.73/configure.ac	2023-07-25 05:22:18.473799400 +0900
@@ -24,9 +24,9 @@ if test "x$with_docs" = "xyes" ; then
       then AC_MSG_WARN([Doxygen not found - continuing without Doxygen support])
    fi
 fi
-AC_PROG_RANLIB
+LT_INIT
 AC_PROG_CC
 AC_CONFIG_MACRO_DIR([m4])
 AM_CONDITIONAL([HAVE_DOXYGEN], [test -n "$DOXYGEN"])
 AM_COND_IF([HAVE_DOXYGEN], [AC_CONFIG_FILES([doc/Doxyfile])])
-AC_OUTPUT(Makefile src/Makefile doc/Makefile)
+AC_OUTPUT(bcm2835.pc Makefile src/Makefile doc/Makefile)
--- origsrc/bcm2835-1.73/src/Makefile.am	2015-03-09 07:09:53.000000000 +0900
+++ src/bcm2835-1.73/src/Makefile.am	2023-07-25 05:22:18.473799400 +0900
@@ -1,9 +1,9 @@
-lib_LIBRARIES = libbcm2835.a
-libbcm2835_a_SOURCES = bcm2835.c
+lib_LTLIBRARIES = libbcm2835.la
+libbcm2835_la_SOURCES = bcm2835.c
+libbcm2835_la_LDFLAGS = -no-undefined
 include_HEADERS = bcm2835.h
 check_PROGRAMS = test
 test_SOURCES = test.c
-test_LDADD = ./libbcm2835.a
+test_LDADD = ./libbcm2835.la
 TESTS = $(check_PROGRAMS)
 CLEANFILES = *~
-
--- origsrc/bcm2835-1.73/src/bcm2835.h	2023-06-12 12:25:57.000000000 +0900
+++ src/bcm2835-1.73/src/bcm2835.h	2023-07-25 05:22:18.473799400 +0900
@@ -726,6 +726,7 @@
 /*! Base address of the SMI registers */
 #define BCM2835_SMI_BASE                0x600000
 
+#include <stdio.h>
 #include <stdlib.h>
 
 /*! Physical address and size of the peripherals block
