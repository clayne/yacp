--- origsrc/simdzone-0.2.2/CMakeLists.txt	2025-04-24 17:17:02.000000000 +0900
+++ src/simdzone-0.2.2/CMakeLists.txt	2025-04-26 10:40:17.008594200 +0900
@@ -7,7 +7,7 @@ cmake_minimum_required(VERSION 3.10)
 project(
   simdzone
   LANGUAGES C
-  VERSION 0.1.0
+  VERSION 0.2.2
   DESCRIPTION "Fast and standards compliant DNS presentation format parser")
 
 set(CMAKE_C_STANDARD 99)
@@ -148,6 +148,10 @@ endif()
 
 add_library(zone)
 
+if (DEFINED SOVERSION)
+  set_target_properties(zone PROPERTIES SOVERSION "${SOVERSION}")
+endif()
+
 generate_export_header(
   zone BASE_NAME ZONE EXPORT_FILE_NAME include/zone/export.h)
 
@@ -318,3 +322,10 @@ install(
   RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
   LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
   ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR})
+
+set(prefix ${CMAKE_INSTALL_PREFIX})
+set(exec_prefix ${CMAKE_INSTALL_PREFIX})
+set(libdir ${CMAKE_INSTALL_PREFIX}/lib)
+set(includedir ${CMAKE_INSTALL_PREFIX}/include)
+configure_file(${CMAKE_SOURCE_DIR}/simdzone.pc.in ${CMAKE_BINARY_DIR}/simdzone.pc @ONLY)
+install(FILES ${CMAKE_BINARY_DIR}/simdzone.pc DESTINATION ${CMAKE_INSTALL_PREFIX}/lib/pkgconfig)
--- origsrc/simdzone-0.2.2/simdzone.pc.in	1970-01-01 09:00:00.000000000 +0900
+++ src/simdzone-0.2.2/simdzone.pc.in	2025-04-26 10:26:29.670336800 +0900
@@ -0,0 +1,10 @@
+prefix=@prefix@
+exec_prefix=@exec_prefix@
+libdir=@libdir@
+includedir=@includedir@
+
+Name: simdzone
+Description: Fast and standards compliant DNS zone parser
+Version: @PROJECT_VERSION@
+Libs: -L${libdir} -lzone
+Cflags: -I${includedir}
--- origsrc/simdzone-0.2.2/src/fallback/parser.c	2025-04-24 17:17:02.000000000 +0900
+++ src/simdzone-0.2.2/src/fallback/parser.c	2025-04-26 10:26:29.670336800 +0900
@@ -44,6 +44,7 @@
 diagnostic_push()
 clang_diagnostic_ignored(missing-prototypes)
 
+ZONE_EXPORT
 int32_t zone_fallback_parse(parser_t *parser)
 {
   return parse(parser);
--- origsrc/simdzone-0.2.2/src/haswell/parser.c	2025-04-24 17:17:02.000000000 +0900
+++ src/simdzone-0.2.2/src/haswell/parser.c	2025-04-26 10:26:29.670336800 +0900
@@ -45,6 +45,7 @@
 diagnostic_push()
 clang_diagnostic_ignored(missing-prototypes)
 
+ZONE_EXPORT
 int32_t zone_haswell_parse(parser_t *parser)
 {
   return parse(parser);
--- origsrc/simdzone-0.2.2/src/westmere/parser.c	2025-04-24 17:17:02.000000000 +0900
+++ src/simdzone-0.2.2/src/westmere/parser.c	2025-04-26 10:26:29.670336800 +0900
@@ -45,6 +45,7 @@
 diagnostic_push()
 clang_diagnostic_ignored(missing-prototypes)
 
+ZONE_EXPORT
 int32_t zone_westmere_parse(parser_t *parser)
 {
   return parse(parser);
--- origsrc/simdzone-0.2.2/src/zone.c	2025-04-24 17:17:02.000000000 +0900
+++ src/simdzone-0.2.2/src/zone.c	2025-04-26 10:26:29.670336800 +0900
@@ -328,6 +328,7 @@ int32_t zone_open_file(
   return code;
 }
 
+ZONE_EXPORT
 nonnull_all
 void zone_close(parser_t *parser)
 {
@@ -389,6 +390,7 @@ static int32_t initialize_parser(
   return 0;
 }
 
+ZONE_EXPORT
 int32_t zone_open(
   zone_parser_t *parser,
   const zone_options_t *options,
@@ -487,6 +489,7 @@ void zone_vlog(
   const char *format,
   va_list arguments);
 
+ZONE_EXPORT
 void zone_vlog(
   zone_parser_t *parser,
   uint32_t priority,
