--- origsrc/libelektra-0.10.0/scripts/cmake/ElektraPackaging.cmake	2023-05-23 14:52:32.000000000 +0900
+++ src/libelektra-0.10.0/scripts/cmake/ElektraPackaging.cmake	2024-10-08 11:44:56.755890200 +0900
@@ -118,7 +118,7 @@ if (UNIX)
 	execute_process (COMMAND uname -m OUTPUT_VARIABLE CPACK_PACKAGE_ARCHITECTURE)
 	string (STRIP "${CPACK_PACKAGE_ARCHITECTURE}" CPACK_PACKAGE_ARCHITECTURE)
 
-	if (NOT APPLE)
+	if (NOT APPLE AND NOT CYGWIN)
 		# Try to find distro name and distro-specific arch
 		execute_process (COMMAND bash "-c" "grep \"^NAME=\" /etc/os-release | awk -F= {' print $2'} | sed 's/\"//g'"
 				 OUTPUT_VARIABLE OS_NAME)
--- origsrc/libelektra-0.10.0/scripts/cmake/Modules/LibAddLib.cmake	2023-05-23 14:52:32.000000000 +0900
+++ src/libelektra-0.10.0/scripts/cmake/Modules/LibAddLib.cmake	2024-10-08 09:25:04.730762600 +0900
@@ -61,11 +61,14 @@ function (add_lib name)
 									  "-Wl,--version-script='${CMAKE_BINARY_DIR}/src/libs/symbols.map'")
 		endif ()
 
+		set_target_properties(elektra-${name} PROPERTIES SOVERSION ${SO_VERSION})
+
 		install (
 			TARGETS elektra-${name}
-			DESTINATION lib${LIB_SUFFIX}
-			COMPONENT "${HAS_COMPONENT}"
-			EXPORT ElektraTargetsLibelektra)
+			EXPORT ElektraTargetsLibelektra
+			RUNTIME DESTINATION bin
+			ARCHIVE DESTINATION lib${LIB_SUFFIX}
+			COMPONENT "${HAS_COMPONENT}")
 	endif (BUILD_SHARED)
 
 endfunction ()
--- origsrc/libelektra-0.10.0/src/bindings/glib/CMakeLists.txt	2023-05-23 14:52:32.000000000 +0900
+++ src/libelektra-0.10.0/src/bindings/glib/CMakeLists.txt	2024-10-08 09:30:41.196718900 +0900
@@ -42,6 +42,8 @@ target_compile_options (${GELEKTRA_LIBRA
 target_link_libraries (${GELEKTRA_LIBRARY} PUBLIC elektra-core elektra-kdb)
 target_link_libraries (${GELEKTRA_LIBRARY} PUBLIC ${GOBJECT_LDFLAGS})
 
+set_target_properties(${GELEKTRA_LIBRARY} PROPERTIES SOVERSION ${SO_VERSION})
+
 install (TARGETS ${GELEKTRA_LIBRARY} LIBRARY DESTINATION lib${LIB_SUFFIX} COMPONENT glib-elektra)
 
 install (
--- origsrc/libelektra-0.10.0/src/bindings/gsettings/CMakeLists.txt	2023-05-23 14:52:32.000000000 +0900
+++ src/libelektra-0.10.0/src/bindings/gsettings/CMakeLists.txt	2024-10-08 11:01:59.149840100 +0900
@@ -57,7 +57,7 @@ if (GELEKTRA_LIBRARY)
 	include_directories (${CMAKE_BINARY_DIR}/src/include/)
 	target_link_libraries (elektrasettings ${GLIB_LIBRARIES} ${GMODULE_LIBRARIES} ${GIO_LIBRARIES} ${GELEKTRA_LIBRARY} elektra-core)
 	if (INSTALL_SYSTEM_FILES)
-		install (TARGETS elektrasettings LIBRARY DESTINATION ${GIO_MODULE_DIR})
+		install (TARGETS elektrasettings RUNTIME DESTINATION ${GIO_MODULE_DIR})
 	endif ()
 else ()
 	pkg_get_variable (GIO_MODULE_DIR gio-2.0 giomoduledir)
@@ -67,7 +67,7 @@ else ()
 	endif ()
 	include_directories (${GELEKTRA_INCLUDE_DIRS})
 	target_link_libraries (elektrasettings ${GLIB_LIBRARIES} ${GMODULE_LIBRARIES} ${GIO_LIBRARIES} ${GELEKTRA_LIBRARIES})
-	install (TARGETS elektrasettings LIBRARY DESTINATION ${GIO_MODULE_DIR})
+	install (TARGETS elektrasettings RUNTIME DESTINATION ${GIO_MODULE_DIR})
 endif ()
 
 if (CMAKE_SOURCE_DIR STREQUAL CMAKE_BINARY_DIR)
--- origsrc/libelektra-0.10.0/src/include/kdbendian.h	2023-05-23 14:52:32.000000000 +0900
+++ src/libelektra-0.10.0/src/include/kdbendian.h	2024-10-07 14:07:26.773009700 +0900
@@ -67,7 +67,7 @@
 #endif
 
 /* Linux / GLIBC */
-#if defined(__linux__) || defined(__GLIBC__)
+#if defined(__linux__) || defined(__GLIBC__) || defined(__CYGWIN__)
 #include <byteswap.h>
 #include <endian.h>
 #define __ENDIAN_DEFINED 1
--- origsrc/libelektra-0.10.0/src/libs/elektra/CMakeLists.txt	2023-05-23 14:52:32.000000000 +0900
+++ src/libelektra-0.10.0/src/libs/elektra/CMakeLists.txt	2024-10-07 23:12:55.355579300 +0900
@@ -112,8 +112,9 @@ if (BUILD_SHARED)
 
 	install (
 		TARGETS elektra-core elektra-kdb
-		DESTINATION lib${LIB_SUFFIX}
 		EXPORT ElektraTargetsLibelektra
+		RUNTIME DESTINATION bin
+		ARCHIVE DESTINATION lib${LIB_SUFFIX}
 		COMPONENT libelektra${SO_VERSION})
 
 	list (APPEND targets_built ${elektra-all_LIBRARIES})
--- origsrc/libelektra-0.10.0/src/libs/tools/src/CMakeLists.txt	2023-05-23 14:52:32.000000000 +0900
+++ src/libelektra-0.10.0/src/libs/tools/src/CMakeLists.txt	2024-10-07 23:04:06.630544100 +0900
@@ -39,7 +39,8 @@ if (BUILD_SHARED)
 
 	install (
 		TARGETS elektratools
-		DESTINATION lib${LIB_SUFFIX}
+		RUNTIME DESTINATION bin
+		ARCHIVE DESTINATION lib${LIB_SUFFIX}
 		COMPONENT elektra-bin)
 endif (BUILD_SHARED)
 
--- origsrc/libelektra-0.10.0/src/plugins/CMakeLists.txt	2023-05-23 14:52:32.000000000 +0900
+++ src/libelektra-0.10.0/src/plugins/CMakeLists.txt	2024-10-07 23:19:29.329249200 +0900
@@ -92,7 +92,7 @@ if (output EQUAL -1
 	message (SEND_ERROR "The required plugin `spec` is not selected in PLUGINS but needed for testing, please add `spec` to PLUGINS")
 endif ()
 
-if (BUILD_SHARED)
+if (BUILD_SHARED AND NOT CYGWIN)
 	mkdir (${CMAKE_LIBRARY_OUTPUT_DIRECTORY})
 	create_lib_symlink (libelektra-plugin-${KDB_DEFAULT_STORAGE}.so libelektra-plugin-storage.so libelektra${SO_VERSION} PLUGIN)
 
--- origsrc/libelektra-0.10.0/src/plugins/fstab/CMakeLists.txt	2023-05-23 14:52:32.000000000 +0900
+++ src/libelektra-0.10.0/src/plugins/fstab/CMakeLists.txt	2024-10-07 14:42:04.353675200 +0900
@@ -1,5 +1,9 @@
 if (DEPENDENCY_PHASE)
-	safe_check_symbol_exists (setmntent "mntent.h" HAS_MNTENT)
+	if (CYGWIN)
+		safe_check_symbol_exists (addmntent "mntent.h" HAS_MNTENT)
+	else()
+		safe_check_symbol_exists (setmntent "mntent.h" HAS_MNTENT)
+	endif()
 
 	if (NOT HAS_MNTENT)
 		remove_plugin (fstab "function mntent is missing")
--- origsrc/libelektra-0.10.0/src/plugins/resolver/resolver.h	2023-05-23 14:52:32.000000000 +0900
+++ src/libelektra-0.10.0/src/plugins/resolver/resolver.h	2024-10-08 10:17:37.420652600 +0900
@@ -9,7 +9,9 @@
 #ifndef PLUGIN_RESOLVER_H
 #define PLUGIN_RESOLVER_H
 
+#if !defined(_GNU_SOURCE)
 #define _GNU_SOURCE // needed for recursive mutex
+#endif
 
 #include "shared.h"
 
--- origsrc/libelektra-0.10.0/src/plugins/ruby/ruby.cpp	2023-05-23 14:52:32.000000000 +0900
+++ src/libelektra-0.10.0/src/plugins/ruby/ruby.cpp	2024-10-07 14:26:17.172328000 +0900
@@ -19,6 +19,8 @@
 
 #include <kdbmacros.h>
 
+#define SWIG_snprintf snprintf
+
 #include SWIG_RUNTIME
 #include "ruby.hpp"
 
--- origsrc/libelektra-0.10.0/src/plugins/spec/CMakeLists.txt	2023-05-23 14:52:32.000000000 +0900
+++ src/libelektra-0.10.0/src/plugins/spec/CMakeLists.txt	2024-10-07 15:04:27.183963200 +0900
@@ -3,5 +3,5 @@ include (LibAddMacros)
 add_plugin (
 	spec
 	SOURCES matching.h matching.c arrayspec.h arrayspec.c spec.h spec.c
-	LINK_ELEKTRA elektra-ease elektra-meta elektra-globbing libm.so
+	LINK_ELEKTRA elektra-ease elektra-meta elektra-globbing
 	ADD_TEST COMPONENT libelektra${SO_VERSION} ADD_TEST TEST_README)
