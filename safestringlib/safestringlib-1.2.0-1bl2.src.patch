--- origsrc/safestringlib-1.2.0/CMakeLists.txt	2022-11-22 17:58:04.000000000 +0900
+++ src/safestringlib-1.2.0/CMakeLists.txt	2024-06-01 14:38:33.506386100 +0900
@@ -172,7 +172,9 @@ if(CMAKE_COMPILER_IS_GNUCC AND
    CMAKE_C_COMPILER_VERSION VERSION_LESS 9)
     target_compile_options(${PROJECT_NAME}_objlib PRIVATE -mmitigate-rop)
 endif()
-set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} -z noexecstack -z relro -z now")
+if (NOT CYGWIN)
+  set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} -z noexecstack -z relro -z now")
+endif()
 
 option(BUILD_ERROR_ON_WARNING "Fail compilation on warning" OFF)
 
@@ -182,14 +184,26 @@ endif()
 
 target_compile_options(${PROJECT_NAME}_objlib PRIVATE $<$<CONFIG:RELEASE>:-s>)
 
-add_library(${PROJECT_NAME}_shared SHARED $<TARGET_OBJECTS:${PROJECT_NAME}_objlib>)
-add_library(${PROJECT_NAME}_static STATIC $<TARGET_OBJECTS:${PROJECT_NAME}_objlib>)
-target_include_directories(${PROJECT_NAME}_shared PUBLIC include)
-target_include_directories(${PROJECT_NAME}_static PUBLIC include)
+add_library(${PROJECT_NAME} SHARED $<TARGET_OBJECTS:${PROJECT_NAME}_objlib>)
+target_include_directories(${PROJECT_NAME} PUBLIC include)
+
+set_target_properties(${PROJECT_NAME} PROPERTIES VERSION ${SAFEC_VERSION_STRING})
 
-set_target_properties(${PROJECT_NAME}_shared PROPERTIES VERSION ${SAFEC_VERSION_STRING})
-set_target_properties(${PROJECT_NAME}_static PROPERTIES VERSION ${SAFEC_VERSION_STRING})
+if (DEFINED SOVERSION)
+  set_target_properties(${PROJECT_NAME} PROPERTIES SOVERSION "${SOVERSION}")
+endif()
+
+file(GLOB HEADERS "${CMAKE_SOURCE_DIR}/include/*.h")
+set_target_properties(${PROJECT_NAME} PROPERTIES PUBLIC_HEADER "${HEADERS}")
+install(TARGETS ${PROJECT_NAME} RUNTIME DESTINATION bin ARCHIVE DESTINATION lib PUBLIC_HEADER DESTINATION include)
 
 if(BUILD_UNITTESTS)
   add_subdirectory(unittests)
 endif()
+
+set(prefix ${CMAKE_INSTALL_PREFIX})
+set(exec_prefix ${CMAKE_INSTALL_PREFIX})
+set(libdir ${CMAKE_INSTALL_PREFIX}/lib)
+set(includedir ${CMAKE_INSTALL_PREFIX}/include)
+configure_file(${CMAKE_SOURCE_DIR}/safestringlib.pc.in ${CMAKE_BINARY_DIR}/safestringlib.pc @ONLY)
+install(FILES ${CMAKE_BINARY_DIR}/safestringlib.pc DESTINATION ${CMAKE_INSTALL_PREFIX}/lib/pkgconfig)
--- origsrc/safestringlib-1.2.0/safestringlib.pc.in	1970-01-01 09:00:00.000000000 +0900
+++ src/safestringlib-1.2.0/safestringlib.pc.in	2024-06-01 14:38:33.506386100 +0900
@@ -0,0 +1,10 @@
+prefix=@prefix@
+exec_prefix=@exec_prefix@
+libdir=@libdir@
+includedir=@includedir@
+
+Name: safestringlib
+Description: Safe string library
+Version: @SAFEC_VERSION_STRING@
+Libs: -L${libdir} -lsafestring
+Cflags: -I${includedir}
--- origsrc/safestringlib-1.2.0/unittests/CMakeLists.txt	2022-11-22 17:58:04.000000000 +0900
+++ src/safestringlib-1.2.0/unittests/CMakeLists.txt	2024-06-01 14:38:33.506386100 +0900
@@ -77,5 +77,5 @@ add_executable(${PROJECT_NAME}
 )
 
 target_link_libraries(${PROJECT_NAME}
-  safestring_static
+  safestring
 )
