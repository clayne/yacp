--- origsrc/siplog-1.1/Makefile.am	1970-01-01 09:00:00.000000000 +0900
+++ src/siplog-1.1/Makefile.am	2023-11-09 15:17:30.763537200 +0900
@@ -0,0 +1,13 @@
+check_PROGRAMS = siplog-test
+siplog_test_SOURCES = test.c siplog_mem_debug.c
+siplog_test_LDADD = libsiplog.la
+TESTS = $(check_PROGRAMS)
+
+include_HEADERS = siplog.h
+
+lib_LTLIBRARIES = libsiplog.la
+libsiplog_la_SOURCES = siplog.c siplog_logfile_async.c
+libsiplog_la_LDFLAGS = -no-undefined
+
+pkgconfigdir = $(libdir)/pkgconfig
+pkgconfig_DATA = $(PACKAGE).pc
--- origsrc/siplog-1.1/configure.ac	1970-01-01 09:00:00.000000000 +0900
+++ src/siplog-1.1/configure.ac	2023-11-09 15:10:07.846848000 +0900
@@ -0,0 +1,35 @@
+#                                               -*- Autoconf -*-
+# Process this file with autoconf to produce a configure script.
+
+AC_PREREQ([2.71])
+AC_INIT([siplog], [1.1])
+AC_CONFIG_SRCDIR([siplog.c])
+AC_CONFIG_HEADERS([config.h])
+AM_INIT_AUTOMAKE
+
+# Checks for programs.
+AC_PROG_CC
+LT_INIT
+
+# Checks for libraries.
+
+# Checks for header files.
+AC_CHECK_HEADERS([stdint.h sys/file.h unistd.h])
+
+# Checks for typedefs, structures, and compiler characteristics.
+AC_TYPE_INT64_T
+AC_TYPE_OFF_T
+AC_TYPE_PID_T
+AC_TYPE_SIZE_T
+AC_STRUCT_TIMEZONE
+AC_TYPE_UINT64_T
+
+# Checks for library functions.
+AC_FUNC_MALLOC
+AC_FUNC_REALLOC
+AC_FUNC_STRERROR_R
+AC_CHECK_FUNCS([atexit gettimeofday localtime_r memset strdup])
+
+AC_CONFIG_FILES([Makefile])
+AC_CONFIG_FILES([siplog.pc])
+AC_OUTPUT
--- origsrc/siplog-1.1/siplog.c	2022-02-14 16:52:30.000000000 +0900
+++ src/siplog-1.1/siplog.c	2023-11-09 14:58:03.685930100 +0900
@@ -5,11 +5,16 @@
  *
  */
 
+#if !defined(_GNU_SOURCE)
+#define _GNU_SOURCE
+#endif
+
 #define _FILE_OFFSET_BITS  64
 
 #include <sys/file.h>
 #include <sys/types.h>
 #include <sys/stat.h>
+#include <sys/time.h>
 #include <errno.h>
 #include <stdio.h>
 #include <stdarg.h>
--- origsrc/siplog-1.1/siplog.pc.in	1970-01-01 09:00:00.000000000 +0900
+++ src/siplog-1.1/siplog.pc.in	2023-11-09 15:18:17.254866700 +0900
@@ -0,0 +1,10 @@
+prefix=@prefix@
+exec_prefix=@exec_prefix@
+libdir=@libdir@
+includedir=@includedir@
+
+Name: siplog
+Description: Multi-threaded library for low-latency/high-volume SIP logging
+Version: @VERSION@
+Libs: -L${libdir} -lsiplog
+Cflags: -I${includedir}
--- origsrc/siplog-1.1/siplog_mem_debug.c	2022-02-14 16:52:30.000000000 +0900
+++ src/siplog-1.1/siplog_mem_debug.c	2023-11-09 15:00:15.128035400 +0900
@@ -33,6 +33,10 @@
  * can be added, such as guard area to detect any buffer overflows.
  */
 
+#if !defined(_GNU_SOURCE)
+#define _GNU_SOURCE
+#endif
+
 #include <sys/types.h>
 #include <pthread.h>
 #include <stdarg.h>
--- origsrc/siplog-1.1/test.c	2022-02-14 16:52:30.000000000 +0900
+++ src/siplog-1.1/test.c	2023-11-09 15:01:20.429997900 +0900
@@ -26,7 +26,7 @@ int main()
     siplog_write(SIPLOG_DBUG, log, "level DBUG, %d", 1);
     siplog_write(SIPLOG_WARN, log, "level WARN, %d", 2);
     siplog_write(SIPLOG_ERR, log, "level ERR, %d", 3);
-    for (i = 0; i < 10000;) {
+    for (i = 0; i < 100;) {
 	siplog_write(SIPLOG_DBUG, log, "message #%d", ++i);
 	/* sleep 0.0000001 second */
 	interval.tv_sec = 0; 
