--- origsrc/blaspp-2025.05.28/CMakeLists.txt	2025-05-28 16:41:15.000000000 +0900
+++ src/blaspp-2025.05.28/CMakeLists.txt	2025-06-11 00:53:04.654294600 +0900
@@ -472,6 +472,10 @@ set_target_properties(
     SOVERSION "${soversion}"
 )
 
+if (DEFINED SOVERSION)
+    set_target_properties(blaspp PROPERTIES SOVERSION "${SOVERSION}")
+endif()
+
 if (CMAKE_VERSION VERSION_GREATER_EQUAL 3.15)
     # Conditionally add -Wall. See CMake tutorial.
     set( gcc_like_cxx "$<COMPILE_LANG_AND_ID:CXX,ARMClang,AppleClang,Clang,GNU>" )
@@ -600,9 +604,9 @@ endif()
 # GNU Filesystem Conventions
 include( GNUInstallDirs )
 if (WIN32)
-    set( install_configdir "blaspp" )
+    option( install_configdir "blaspp" )
 else()
-    set( install_configdir "${CMAKE_INSTALL_LIBDIR}/cmake/blaspp" )
+    option( install_configdir "${CMAKE_INSTALL_LIBDIR}/cmake/blaspp" )
 endif()
 
 # Install library and add to <package>Targets.cmake
@@ -656,3 +660,10 @@ install(
           "${CMAKE_CURRENT_BINARY_DIR}/blasppConfigVersion.cmake"
     DESTINATION "${install_configdir}"
 )
+
+set(prefix ${CMAKE_INSTALL_PREFIX})
+set(exec_prefix ${CMAKE_INSTALL_PREFIX})
+set(libdir ${CMAKE_INSTALL_PREFIX}/lib)
+set(includedir ${CMAKE_INSTALL_PREFIX}/include)
+configure_file(${CMAKE_SOURCE_DIR}/lib/pkgconfig/blaspp.pc.in ${CMAKE_BINARY_DIR}/blaspp.pc @ONLY)
+install(FILES ${CMAKE_BINARY_DIR}/blaspp.pc DESTINATION ${CMAKE_INSTALL_PREFIX}/lib/pkgconfig)
--- origsrc/blaspp-2025.05.28/lib/pkgconfig/blaspp.pc.in	2025-05-28 16:41:15.000000000 +0900
+++ src/blaspp-2025.05.28/lib/pkgconfig/blaspp.pc.in	2025-06-11 00:53:04.654294600 +0900
@@ -1,15 +1,14 @@
-prefix=#PREFIX
+prefix=@prefix@
 exec_prefix=${prefix}
 libdir=${exec_prefix}/lib
 includedir=${prefix}/include
-CXX=#CXX
 
 Name: BLAS++
 Description: C++ API to BLAS (basic linear algebra subroutines)
-Version: #VERSION
-Cflags: #CXXFLAGS -I${includedir}
+Version: @PROJECT_VERSION@
+Cflags: -I${includedir}
 # Some platforms require CUDA LIBS to be public.
-Libs: -L${libdir} -Wl,-rpath,${libdir} -lblaspp #LDFLAGS #LIBS
+Libs: -L${libdir} -Wl,-rpath,${libdir} -lblaspp
 Libs.private:
 Requires:
 Requires.private:
